openapi: '3.0.3'

info:
  title: PLACEHOLDER
  version: '0.1'
  description: 'This is specification doc for RMM basic functions'

servers:
  - url: https://__{funcapp_mib_name}__.azurewebsites.net/api
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
      serviceAddress:
        description: Azure API Management Console URL
        default: rmmapimanagement.azure-api.net

tags:
  - name: RMM Account Services
    description: 'Account Operations (Login,Logout,changepassword)'

  - name: Device Operations
    description: 'Device Operations(device list,device details,logs)'

  - name: Agent Operations
    description: 'Agent Operations(Create,Edit,Delete,List)'

  - name: Permission API
    description: 'Permission for login user account on home group'

  - name: Group Operations
    description: 'Group Operations(group create, delete,edit & display)'

  - name: Export Operations
    description: 'Export Operations'

  - name: DB Operations
    description: 'Check Progress(check existance of request id in the queue '

  - name: Filter functions for RMM Devices
    description: 'User defined Filters '

  - name: Report Operations
    description: 'Report Operations '

  - name: Operation Log
    description: 'Operation Logs'
  - name: Device Logs
    description: 'Device Logs'
    
  - name: Dashboard
    description: 'Dashboard'
paths:
  # Device Operations

  /account/login:
    post:
      tags:
        - RMM Account Services
      summary:
        Retrieve jwt token for the login user containing the PermissionList &
        Groups for which user has access to
      responses:
        '200':
          description:
            Returns the Login Response containing Session token,status & expire
            time with token containing permission list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loginRes'
  /account/logout:
    post:
      tags:
        - RMM Account Services
      summary: Revoke/Invalidates jwt token of the login user
      responses:
        '200':
          description:
            Returns the Login Response containing Session token, status & expire
            time
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/logoutRes'
  /group/updateMessage:
    post:
      summary: get the updated status checkprogress request id.
      operationId: post-updatemessage
      responses:
        '200':
          description:
            Update the reponse of check progress state
  /login-iot:
    post:
      summary:
            get the uni-agnet login response.
      operationId: post-login-iot
      responses:
        '200':
          description:
            Returns the un-agent login response.
  /group/createMessage:
    post:
      summary:
            Update the reponse of check progress state
      operationId: post-createmessage
      responses:
        '200':
          description:
            create checkprogress requestid.
  /mail/mailAlertProcessor:
    post:
      summary: mailAlertProcessor
      operationId: post-mailalertprocessor
      responses:
        '200':
          description:
            Process MIB mail alerts.
  /mail/sendmail:
    post:
      summary: send mail
      operationId: post-sendmail
      responses:
        '200':
          description:
            send status mail.
  /tenant/add:
    post:
      tags:
        - 'Tenant Operations'
      summary: rmm-tenant-addition
      operationId: post-rmm-tenant-addition
      responses:
        '200':
          description:
            add tenant related info.
  /device/getDeviceList:
    post:
      tags:
        - 'Device Operations'
      summary: 'Get Device list'
      description: 'Return the device list i.e. registered in specified group'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/getDeviceListRq'
      responses:
        '200':
          description:
            Get Device list result <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDeviceListRes'
  /device/getDeviceDetail:
    post:
      tags:
        - 'Device Operations'
      summary: 'Get Device detail information'
      description: 'Return the device details informaiton'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/getDeviceDetailRq'
      responses:
        '200':
          description:
            Get Device detail information result <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDeviceDetailRes'
  /device/getDeviceLog:
    post:
      tags:
        - 'Device Operations'
      summary: 'Get Device log'
      description: 'Return the device log list i.e. registered in specified group'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/getDeviceLogsRq'
      responses:
        '200':
          description:
            Get Device log list result <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDeviceLogsRes'
  /device/startDiscovery:
    post:
      tags:
        - 'Device Operations'
      summary: 'Executes device discovery'
      description: 'Executes device discovery for specified group with discovery condition set on each agent(TODOs:agent operation APIs, Device registration APIs )'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/startDiscoveryRq'
      responses:
        '200':
          description:
            Gets Discovered devices <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/startDiscoveryRes'
  /device/startQuickDeviceDiscovery:
    post:
      tags:
        - 'Device Operations'
      summary: 'Executes device discovery Temporary'
      description: 'Executes device discovery Temporary for specified group with Temorary discovery condition'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/startQuickDeviceDiscoveryRq'
      responses:
        '200':
          description:
            Gets Discovered device<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/startQuickDeviceDiscoveryRes'
  /device/startRegisterDevice:
    post:
      tags:
        - 'Device Operations'
      summary: ' Device Registration '
      description: 'Performs the device registration operation for the specified devices (use checkProgress to confirm the execution status & getOperationResult to confirm execution result)'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/startRegisterDeviceRq'
      responses:
        '200':
          description:
            Returns the RequestId<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/startRegisterDeviceRes'
  /device/startStatusUpdate:
    post:
      tags:
        - 'Device Operations'
      summary: 'Executes device status update'
      description: 'Executes device statusupdate for specified group '
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/startStatusUpdateRq'
      responses:
        '200':
          description:
            Gets Status update device Ids <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/startStatusUpdateRes'
  /device/getDeviceCount:
    post:
      tags:
        - 'Device Operations'
      summary: 'Retrieves number of devices for a specific group'
      description: 'Retrieves number of devices for a specific group'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/getDeviceCountRq'
      responses:
        '200':
          description:
            Gets Number of devices for a specific group<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDeviceCountRes'
  /device/status/count/{groupId}:
    get:
      tags:
        - 'Device Operations'
      summary: 'Get the count of devices with specific statuses'
      description: 'Retrieves the count of devices which went to specific error or warning state from last visit. 
       Supported categories for MFPs are "Device Status", "Communication Status", "Toner Status", "Security Status".
       For Displays it supports "Device Status" '
      operationId: getDeviceCountByStatus
      parameters:
      - in: path
        name: groupId
        schema:
          type: string
        required: true
      responses:
        '200':
          description:
            Gets Number of devices based on their status for a specific group<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDeviceStatusCountRes'
  /device/status/list/{groupId}:
    get:
      tags:
        - 'Device Operations'
      summary: 'Get the device list based on their status '
      description: 'Retrieves the list of devices which went to specific error or warning state from last visit.
       Supported categories for MFPs are "Device Status", "Communication Status", "Toner Status", "Security Status" 
       For Displays it supports "Device Status". If there are no devices with specific error or warning state, it returns empty list'
      operationId: getDeviceListByStatus
      parameters:
      - in: path
        name: groupId
        schema:
          type: string
        required: true
      - in: query
        name: statusType
        description: >-
          statusType:
            * '1' - mfp/printers Status
            * '2' - Communication Status
            * '3' - Toner Status
            * '4' - Security Status 
            * '5' - Display Status
        required: true
        schema:
          type: integer
          enum: [1,2,3,4,5]
      responses:
        '200':
          description:
            Gets devices based on their status for a specific group<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDeviceListBystatusRes'
  /device/dashboard/conf:
    put:
      tags:
        - 'Device Operations'
      summary: 'Update the Dashbard last access times for each summary graph'
      description: 'Update the Dashbard last access times for each summary graph'
      operationId: dashboardLastAccess
      parameters:
        - in: query
          name: statusType
          description: >-
           statusType:
            * 1 - mfp/printers Status
            * 2 - Communication Status
            * 3 - Toner Status
            * 4 - Security Status 
            * 5 - Display Status
          required: true
          schema:
            type: integer
            enum: [1,2,3,4,5]
      responses:
        '200':
          description:
            Returns the Status <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dashboardLastAccessRes'
  /device/startRemoveDevice:
    post:
      tags:
        - 'Device Operations'
      summary: 'Remove Devices '
      description: 'Removes devices from trash,Moves the devices to trash,Restore devices from trash (use checkProgress to confirm the execution status & getOperationResult to confirm execution result)'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/startRemoveDeviceRq'
      responses:
        '200':
          description:
            Return the requestId <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/startRemoveDeviceRes'
  /device/startPasteDevice:
    post:
      tags:
        - 'Device Operations'
      summary: ' Device Copy/Move '
      description: 'Copy/Move devices from source Cluster group to destination Cluster group(use checkProgress to confirm the execution status & getOperationResult to confirm execution result)'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/startPasteDeviceRq'
      responses:
        '200':
          description:
            Returns the RequestId<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/startPasteDeviceRes'
  /device/deviceOperationLog:
    post:
      tags:
        - 'Device Operations'
      summary: 'Fetch  the Device Operation Logs for a Specified device'
      description: 'Fetch  the Device Operation Logs for a Specified device'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/getDeviceOperationLogRq'
      responses:
        '200':
          description:
            Return the Device Operation logs<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDeviceOperationLogRes'
  /device/deleteDeviceOperationLog:
    post:
      tags:
        - 'Device Operations'
      summary: 'Removes  the Device Operation Logs for a Specified device'
      description: 'Removes the Device Operation Logs for a Specified device'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/deleteDeviceOperationLogRq'
      responses:
        '200':
          description:
            Return the Common Respone Object<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteDeviceOperationLogRes'
  /device/registerDevice:
    post:
      tags:
        - 'Device Operations'
      summary: 'Register device.'
      description:
        Registers a device using the information specified in the request parameters.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerDeviceRq'
      responses:
        '200':
          description:
            Return the Common Respone Object<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registerDeviceRes'
  /device/remoteOperationPanelUrl:
    post:
      tags:
        - 'Device Operations'
      summary: 'Get Remote Operation URL'
      description:
        Returns the URL to access the remote operation panel of MFP.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/remoteOperationPanelUrlRq'
      responses:
        '200':
          description:
            URL for accessing the remote operation panel of the MFP.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/remoteOperationPanelUrlRes'
  /device/customDeviceType:
    post:
      tags:
        - 'Device Operations'
      summary: 'Apply Device Type Settings to Device(s)'
      description: 'Apply Device Type Settings to Device(s)'
      operationId: applyDeviceTypeSettings
      parameters:
        - in: query
          name: groupId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/applyDeviceTypeSettingsRq'
      responses:
        '200':
          description:
            Returns the Status <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applyDeviceTypeSettingsRes'
  /group/groupInfo:
    post:
      tags:
        - 'Group Operations'
      summary: 'Returns groupId for a specified TenantName'
      description: 'Returns the groupId'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/getGroupInfoRq'
      responses:
        '200':
          description:
            Returns the groupId <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getGroupInfoRes'
  /group/createGroup:
    post:
      tags:
        - 'Group Operations'
      summary: 'Create group under parent groupId'
      description: 'Return the groupId'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/createGrpRq'
      responses:
        '200':
          description:
            Return the groupId <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createGrpRes'
  /group/editGroup:
    post:
      tags:
        - 'Group Operations'
      summary: 'Edit group name & description'
      description: 'Return the status '
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/editGrpRq'
      responses:
        '200':
          description:
            Return the status <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/editGrpRes'
  /group/getGroupList:
    post:
      tags:
        - 'Group Operations'
      summary: 'It Retrieves group Information & its child groups'
      description: 'Returns group info with its child groups'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/getGrpListRq'
      responses:
        '200':
          description:
            Return the group List <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getGrpListRes'
  /group/getGroupTree:
    post:
      tags:
        - 'Group Operations'
      summary: 'It Returns list of the groups user has access to with parent child relationship(heiarchy information(obsolete)'
      description: 'Returns group tree'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/getGrpTreeRq'
      responses:
        '200':
          description:
            Return the group Tree <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getGrpTreeRes'
  /group/startMoveGroup:
    post:
      tags:
        - 'Group Operations'
      summary: ' Moves groups '
      description: 'Moves group from source group to destination group(use checkProgress to confirm the execution status & getMoveGroupResult to confirm execution result)'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/startMoveGrpRq'
      responses:
        '200':
          description:
            Returns the requestId <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/startMoveGrpRes'
  /group/startRemoveGroup:
    post:
      tags:
        - 'Group Operations'
      summary: 'Remove groups '
      description: 'Removes the specified group & its childrens including devices & its associated agents (use checkProgress to confirm the execution status & getOperationResult to confirm execution result)'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/startRemoveGrpRq'
      responses:
        '200':
          description:
            Return the requestId <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/startRemoveGrpRes'
  /group/getOperationResult:
    post:
      tags:
        - 'Group Operations'
      summary: 'Gets Group Operation result'
      description: 'This API will check whether Device Operation(copy/move/remove), Group Operation(move/remove) is completed or not.This will also check whether deviceRegistration is completed or not '
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/getOperationResultRq'
      responses:
        '200':
          description:
            Return the Device/Group operation status (true/false)<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getOperationResultRes'
  /group/getMoveGroupResult:
    post:
      tags:
        - 'Group Operations'
      summary: 'Get Group Move result(NotUsed)'
      description: 'This API will check whether group Move is completed or not(Notused)'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/getMoveGroupResultRq'
      responses:
        '200':
          description:
            Return the group remove status (true/false)<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMoveGroupResultRes'
  /group/getStatusCondition:
    post:
      tags:
        - 'Group Operations'
      summary: 'Get the status settings condition for a specified group(Only ClusterGroup'
      description: 'This API fetch the statussettings condition for a specified group(Only ClusterGroup)'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/getStatusConditionRq'
      responses:
        '200':
          description:
            Return the status condition<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getStatusConditionRes'
  /group/setStatusCondition:
    post:
      tags:
        - 'Group Operations'
      summary: 'Sets the status settings condition for a specified group(Only ClusterGroup'
      description: 'This API sets the statussettings condition for a specified group(Only ClusterGroup)'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/setStatusConditionRq'
      responses:
        '200':
          description:
            Return the status flag<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setStatusConditionRes'
  /group/schedule:
    get:
      tags:
        - 'Group Operations'
      summary: 'Gets the Schedule List'
      description: 'Gets the Schedule List ( Statusupdate Schedule list) for a specified groupId'
      operationId: getScheduleList
      parameters:
      - in: query
        name: groupId
        schema:
          type: string
        required: true
      responses:
        '200':
          description:
            Return the  Schedule List <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getScheduleListRes'
  /group/schedule/{groupId}:
    put:
      tags:
        - 'Group Operations'
      summary: 'Set Intervals For Schedule List'
      description: 'Set Intervals For Schedule List'
      operationId: setScheduleList
      parameters:
      - in: path
        name: groupId
        schema:
          type: string
        required: true
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/setScheduleListRq'
      responses:
        '200':
          description:
            Return the Status <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setScheduleListRes'
  #connect-wise manage            
  /group/setTicketRegistrationConf:
    post:
      tags:
        - 'Connectwise- manage configurations'
      summary: 'Save ConnectWise (CW) configuration info for ticket registration'
      description: 'Stores user specified ConnectWise (CW) configuration info for logged-in tenant and Returns the  operation status.'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/setTicketRegistrationConfRq'
      responses:
        '200':
          description:
            Return the reponse of ticket configuration insertion status. <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setTicketRegistrationConfRes'
  /group/getTicketRegistrationConf:
    get:
      tags:
        - 'Connectwise- manage configurations'
      summary: 'Return the ConnectWise (CW) configuration of the logged-in tenant'
      description: 'Return the ConnectWise (CW) configuration info previously stored. '
      operationId: getTicketRegistrationConf
      parameters:
      - in: query
        name: groupId
        schema:
          type: string
        required: true
      - in: query
        name: cwType
        schema:
          type: integer
        required: true
      responses:
        '200':
          description:
            Return the ticket registration configuration info. <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTicketRegistrationConfRes' 
  /group/getCompanyOrServiceBoardList:
    get:
      tags:
        - 'Connectwise- manage configurations'
      summary: 'Return the ConnectWise comany or service board list'
      description: 'Return company or service board list '
      operationId: getCompanyOrServiceBoardList
      parameters:
      - in: query
        name: groupId
        schema:
          type: string
        required: true
      - in: query
        name: filter
        schema:
          type: string
        required: true
      - in: query
        name: type
        schema:
          type: integer
        required: true
      responses:
        '200':
          description:
            Return company or sevice board list. <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCompanyOrServiceBoardListRes'                 
  /agent/schedule:
    get:
      tags:
        - 'Agent Operations'
      summary: 'Gets the Discovery Schedule Settings for Agent'
      description: 'Gets the Discovery Schedule Settings for agent'
      operationId: getScheduleDiscoverySettings
      parameters:
      - in: query
        name: agentId
        schema:
          type: string
        required: true
      responses:
        '200':
          description:
            Return the Discovery Schedule Settings for an agent<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getScheduleDiscoSettingsRes'
  /agent/schedule/{agentId}:
    put:
      tags:
        - 'Agent Operations'
      summary: 'Set Intervals For Discovery Schedule For An Agent'
      description: 'Set Intervals For Discovery Schedule'
      operationId: setScheduleDiscovery
      parameters:
      - in: path
        name: agentId
        schema:
          type: string
        required: true
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/setScheduleDiscoveryRq'
      responses:
        '200':
          description:
            Return the Status <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setScheduleDiscoveryRes'
  /group/setScheduleList:
    post:
      tags:
        - 'Group Operations'
      summary: 'Enable/disable the Specified Schedule Name'
      description: 'This API Enable/disable the Specified Schedule Name '
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/setScheduleListRq'
      responses:
        '200':
          description:
            Return the status flag<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setScheduleListRes'
  /group/getMailAlertList:
    post:
      tags:
        - 'Group Operations'
      summary: 'Gets the List of email alerts for a specified groupId or tenantId'
      description: 'This API fetch the List for emailAlerts for a  specified groupId or tenantId'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/getMailAlertListRq'
      responses:
        '200':
          description:
            Return the EmailAlert List <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getMailAlertListRes'
  /group/setMailAlertList:
    post:
      tags:
        - 'Group Operations'
      summary: 'Sets the List of email alerts for a specified groupId or tenantId '
      description: 'This API sets the emailAlerts for a  specified groupId or tenantId'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/setMailAlertListRq'
      responses:
        '200':
          description:
            Return the status flag<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setMailAlertListRes'
  /group/email/test:
    post:
      tags:
        - 'Group Operations'
      summary: 'Send Test or Sample Email'
      description: 'Test email(s) will be sent to designated email addresses'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/sendMailAlertRq'
      responses:
        '200':
          description:
            Return the status flag<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sendMailAlertRes'
  /group/emailSettings/del:
    post:
      tags:
        - 'Group Operations'
      summary: 'Deletes the List of email alert settings for a specified groupId or tenant '
      description: 'This API deletes the email alert settings for a  specified groupId or tenant'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/deleteMailAlertListRq'
      responses:
        '200':
          description:
            Return the status flag<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteMailAlertListRes'
  /group/getScheduleSettings:
    post:
      tags:
        - 'Group Operations'
      summary: 'Gets the Schedule Settting details for a specified ScheduleName'
      description: 'This API fetch Schedule Settting details for a specified ScheduleName'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/getScheduleSettingsRq'
      responses:
        '200':
          description:
            Return the Schedule Settings <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getScheduleSettingsRes'
  /group/setScheduleSettings:
    post:
      tags:
        - 'Group Operations'
      summary: 'Sets the Schedule for the Specified Schedule Name'
      description: 'This API Sets the Schedule for the Specified Schedule Name'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/setScheduleSettingsRq'
      responses:
        '200':
          description:
            Return the status flag<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setScheduleSettingsRes'
  /group/getAutoRegisterStatus:
    post:
      tags:
        - 'Group Operations'
      summary: 'It Returns the Discovered device setting for a specified group'
      description: 'Returns  Discovered device setting'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/getAutoRegisterStatusRq'
      responses:
        '200':
          description:
            Return the Auto Register Flag <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAutoRegisterStatusRes'
  /group/setAutoRegisterStatus:
    post:
      tags:
        - 'Group Operations'
      summary: 'Updates the discovery setting(Auto Register) for a specified group'
      description: 'Updated the Auto Registration flag setting for a group'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/setAutoRegisterStatusRq'
      responses:
        '200':
          description:
            Return the status<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setAutoRegisterStatusRes'
  /group/groupOperationLog:
    post:
      tags:
        - 'Group Operations'
      summary: 'Fetch  the Group Operation Logs for a Specified Group'
      description: 'Fetch  the Group Operation Logs for a Specified Group'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/getGrpOperationLogRq'
      responses:
        '200':
          description:
            Return the Group Operation logs<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getGrpOperationLogRes'
  /group/deletegroupOperationLog:
    post:
      tags:
        - 'Group Operations'
      summary: 'Removes the Group Operation Logs for a Specified Group'
      description: 'Removes  the Group Operation Logs for a Specified Group'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/deleteGrpOperationLogRq'
      responses:
        '200':
          description:
            Return the Common Object<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteGrpOperationLogRes'
  /group/info:
    get:
      tags:
        - 'Group Operations'
      summary: 'Gets Group Summary Information for a Specified Group'
      description: 'Gets Group Summary Information for a Specified Group'
      operationId: getGroupSummaryInfo
      parameters:
      - in: query
        name: groupId
        schema:
          type: string
        required: true
      responses:
        '200':
          description:
            Return the Group Summary Information Object<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getGroupSummaryInfo'
  /group/counter/conf:
    get:
      tags:
        - 'Group Operations'
      summary: 'Get Special Counter Settings'
      description: 'Get Special Counter Settings'
      operationId: getCounterSettings
      parameters:
        - in: query
          name: groupId
          schema:
            type: string
          required: true
      responses:
        '200':
          description:
            Returns the Special Counter Settings for a specific group <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCounterSettingsRes'
    put:
      tags:
        - 'Group Operations'
      summary: 'Set Special Counter Settings'
      description: 'Set Special Counter Settings'
      operationId: setCounterSettings
      parameters:
        - in: query
          name: groupId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/setCounterSettingsRq'
      responses:
        '200':
          description:
            Returns the Status <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setReportSettingsRes'
  /group/deviceType/conf:
    get:
      tags:
        - 'Group Operations'
      summary: 'Gets Device Type Settings Details'
      description: 'Gets Device Type Settings Details '
      operationId: getDeviceTypeSettings
      parameters:
        - in: query
          name: groupId
          schema:
            type: string
          required: true
        - in: query
          name: deviceTypeId
          schema:
            type: string
          required: true
      responses:
        '200':
          description:
            Returns the Device Type Setting Details for a specified device Type <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDeviceTypeSettingsDetailsRes'
    put:
      tags:
        - 'Group Operations'
      summary: 'Sets/Edit Device Type Settings'
      description: 'Sets/Edit Device Type Settings'
      operationId: setDeviceTypeSettings
      parameters:
        - in: query
          name: groupId
          schema:
            type: string
          required: true
        - in: query
          name: deviceTypeId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/setDeviceTypeSettingsRq'
      responses:
        '200':
          description:
            Returns the Status <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setDeviceTypeSettingsRes'
    post:
      tags:
        - 'Group Operations'
      summary: 'Create Device Type Settings'
      description: 'Create Device Type Settings'
      operationId: createDeviceTypeSettings
      parameters:
        - in: query
          name: groupId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/createDeviceTypeSettingsRq'
      responses:
        '200':
          description:
            Returns the Status <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createDeviceTypeSettingsRes'
  /group/deviceType/addlinfoconf:
    post:
      tags:
        - 'Group Operations'
      summary: 'Create Additional Counter Info'
      description: 'Create Additional Counter Info'
      operationId: createAddlDeviceTypeSettings
      parameters:
        - in: query
          name: groupId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/createAddlDeviceTypeSettingsRq'
      responses:
        '200':
          description:
            Returns the Status <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAddlDeviceTypeSettingsRes'
  /group/deviceType/conf/del:
    post:
      tags:
        - 'Group Operations'
      summary: 'Delete(s) Device Type Settings'
      description: 'Delete(s) Device Type Settings'
      operationId: deleteDeviceTypeSettings
      parameters:
        - in: query
          name: groupId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/delDeviceTypeSettingsRq'
      responses:
        '200':
          description:
            Returns the Status <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delDeviceTypeSettingsRes'
  /group/deviceType/addlinfoconf/del:
    post:
      tags:
        - 'Group Operations'
      summary: 'Delete(s) Additional Counter Information'
      description: 'Delete(s) Additional Counter Information'
      operationId: deleteAddlDeviceTypeSettings
      parameters:
        - in: query
          name: groupId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/delAddlInfoCounterDeviceTypeSettingsRq'
      responses:
        '200':
          description:
            Returns the Status <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delAddlInfoCounterDeviceTypeSettingsRes'
  /group/deviceTypeList:
    get:
      tags:
        - 'Group Operations'
      summary: 'List Device Type Settings for Specific Group'
      description: 'List Device Type Settings for Specific Group'
      operationId: getDeviceTypeSettingsList
      parameters:
        - in: query
          name: groupId
          schema:
            type: string
          required: true
      responses:
        '200':
          description:
            Returns the Device Type Setting List for a specified group <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDeviceTypeSettingsListRes'
  /group/deviceType/addlInfo:
    get:
      tags:
        - 'Group Operations'
      summary: 'List Additional Device Infor for Device Type Settings'
      description: 'List Additional Device Infor for Device Type Settings'
      operationId: getAddlDeviceTypeSettingsList
      parameters:
        - in: query
          name: groupId
          schema:
            type: string
          required: true
      responses:
        '200':
          description:
            Returns the Additional Device Type Setting List<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAddlDevTypeSettingsListRes'
  /group/usageTarget/conf/{groupId}:
    patch:
      tags:
        - 'Group Operations'
      summary: 'Specify the Usage target value (Usage Per Month)'
      description: 'Edit the Usage target value for a specific tenant'
      operationId: editUsageTargetSetting
      parameters:
        - name: 'groupId'
          in: path
          description: 'groupId'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/editUsageTargetRq'
      responses:
        '200':
          description:
            Returns the requested operation status <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/editUsageTargetRes'
    get:
      tags:
        - 'Group Operations'
      summary: 'Get the Usage Target setting'
      description: 'Get the Usage Target setting value for a specific group.'
      operationId: getUsageTargetSetting
      parameters:
        - name: 'groupId'
          in: path
          description: 'groupId'
          required: true
          schema:
            type: string
      responses:
        '200':
          description:
            Returns the usage target setting value <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUsageTargetSettingRes'
  /group/customer/list:
    get:
      tags:
        - 'Group Operations'
      summary: 'Get the List of Customer information for a specific delear.'
      description: 'Get the List of Customer information for a specific delear.'
      operationId: getCustomerInfoList
      parameters:
        - in: query
          name: groupId
          schema:
            type: string
          required: true
        - in: query
          name: pageNumber
          description:  "Page Number: 0 (Default) "
          schema:
            type: integer
        - in: query
          name: pageSize
          description:  "Page Size: 1000 (Default) "
          schema:
            type: integer
      responses:
        '200':
          description:
            Returns the List of Customer information for a specific delear<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCustomerInfoListRes'
    put:
      tags:
        - 'Group Operations'
      summary: 'Update the specified Customer Information'
      description: 'Update the Customer Information for a specific tenant'
      operationId: saveCustomerInformation
      parameters:
        - name: 'groupId'
          in: query
          description: 'groupId'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/updateCustomerInfoRq'
      responses:
        '200':
          description:
            Returns the requested operation status <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateCustomerInfoRes'           
  /group/customer/create:
    post:
      tags:
        - 'Group Operations'
      summary:  'Add new customer information.'
      description: 'Add new customer information under a specific dealer.'
      operationId: createCustomer
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/createCustomerRq'
      responses:
        '200':
          description:
            Returns the status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createCustomerRes'
  /group/tasks/list:
    get:
      tags:
        - 'Group Operations'
      summary:  'Get list of tasks to Device(s)'
      description: 'Get list of tasks to Device(s)'
      operationId: getTasksList
      parameters:
        - in: query
          name: groupId
          schema:
            type: string
          required: true
      responses:
        '200':
          description:
            Returns the list of tasks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTasksListRes'
  /group/tasks/details:
    post:
      tags:
        - 'Group Operations'
      summary:  'Get the details of tasks to Device(s)'
      description: 'Get the details of tasks to Device(s)'
      operationId: getTaskDetails
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/getTaskDetailsRq'
      responses:
        '200':
          description:
            Returns the list of task details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTaskDetailsRes'
  /group/tasks/ignore:
    post:
      tags:
        - 'Group Operations'
      summary:  'Get the details of cancelled tasks to Device(s)'
      description: 'Get the details of cancelled tasks to Device(s)'
      operationId: getCancelledDeviceTasks
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/getCancelTaskDetailsRq'
      responses:
        '200':
          description:
            Returns the list of task details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getCancelTaskDetailsRes'  
  /export/operationLog:
    post:
      tags:
        - 'Operation Log'
      summary: 'Request to export the Operation Logs for a Specified Group & Type'
      description: 'Request to export the Operation Logs for a Specified Group & Type'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/exportOperationLogRq'
      responses:
        '200':
          description:
            Return the RequestId<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportOperationLogRes'
  /export/deviceType:
    post:
      tags:
        - 'Export Operations'
      summary: 'Request to export the Device Type Setting(s)'
      description: 'Request to export the Device Type Setting(s)'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/exportDeviceTypeRq'
      responses:
        '200':
          description:
            Return the RequestId<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportDeviceTypeRes'
  /import/deviceType/{groupId}/{fileName}:
    post:
      tags:
        - 'Export Operations'
      summary: 'Device Type Settings Import'
      description: 'Device Type Settings Import'
      operationId: deviceTypefileupload
      parameters:
        - name: 'groupId'
          in: path
          description: 'groupId'
          required: true
          schema:
            type: string
        - name: 'fileName'
          in: path
          description: 'fileName'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/deviceTypefileuploadRq'
      responses:
        '200':
          description:
            Returns the RequestId <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deviceTypefileuploadRes'
  /deviceType/download:
    get:
      tags:
        - 'Export Operations'
      summary: 'Downloads the Device Type(s) for a Specified Request Id'
      description: 'Downloads the Device Type(s) for a Specified Request Id'
      parameters:
      - name: 'requestId'
        in: query
        description: 'requestId'
        required: true
        schema:
          type: string
      responses:
        '200':
          description:
            Return the Request Id<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/downloadLogRes'
  /export/exportDeviceOperationLog:
    post:
      tags:
        - 'Export Operations'
      summary: 'Exports  the Group Operation Logs for a Specified Group'
      description: 'Exports  the Group Operation Logs for a Specified Group'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/exportDeviceOperationLogRq'
      responses:
        '200':
          description:
            Return the Request Id<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportDeviceOperationLogRes'
  /operationLog/download:
    get:
      tags:
        - 'Operation Log'
      summary: 'Downloads the Device Operation Logs for a Specified Request Id'
      description: 'Downloads the Device Operation Logs for a Specified Request Id'
      parameters:
      - name: 'requestId'
        in: query
        description: 'requestId'
        required: true
        schema:
          type: string
      responses:
        '200':
          description:
            Return the Request Id<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/downloadLogRes'
  /account/getPermissionList:
    post:
      tags:
        - 'Permission API'
      summary: 'Get Permission List'
      description: 'Return the permission list for the login user'
      security:
          - UserSecurity: []
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/getPermissionListReq'
      responses:
        '200':
          description:
            Get List of Permissions for login user<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPermissionListRes'
  /db/checkProgress:
    post:
      tags:
        - 'DB Operations'
      summary: 'Check progress '
      description: 'This API will check the existance of requestId in the Queue'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/checkProgressRq'
      responses:
        '200':
          description:
            Return the requestId status (true/false)<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkProgressRes'
  /db/watch:
    post:
      tags:
        - 'DB Operations'
      summary: 'Watch '
      description: 'This API will perform watch on Database collection with user specified queries'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/watchRq'
      responses:
        '200':
          description:
            Return the requestId status (true/false)<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/watchRes'
  /db/signalr-connect:
    post:
      tags:
        - 'DB Operations'
      summary: 'Connection establishment between Client & SignalR '
      description: 'Connection establishment between Client & SignalR '
      parameters:
      - name: 'userid'
        in: query
        description: 'userid'
        required: true
        schema:
          type: string
      responses:
        '200':
          description:
            Returns the SignalR URL & Access Token <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/signalRConnectRes'
  /filter/createFilter:
    post:
      tags:
        - 'Custom Filter functions'
      summary: 'User defined filter creation'
      description:
        Creates User defined filters. <br>
        Only one filter can be created at a time <br>
        [TBD ] domain/tenent?
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createFilterReq'
      responses:
        '200':
          description:
            User defined filter creation result <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createFilterRsp'
  /filter/setFilter:
    post:
      tags:
        - 'Custom Filter functions'
      summary: 'Edit the created User defined filter '
      description:
        Updates the User defined filters. <br>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setFilterReq'
      responses:
        '200':
          description:
            User defined filter update result <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setFilterRsp'
  /filter/deleteFilter:
    post:
      tags:
        - 'Custom Filter functions'
      summary: 'Delets the User defined filter'
      description:
        Deletes the User defined filters. <br>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleteFilterReq'
      responses:
        '200':
          description:
            User defined filter deletion result <br>\
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteFilterRsp'
  /filter/getFilter:
    post:
      tags:
        - 'Custom Filter functions'
      summary: 'Get user defined filter list'
      description:
        Returns the list of filters
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getFilterReq'
      responses:
        '200':
          description:
            Get user defined filter list result <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFilterRsp'
  /agent/createAgent:
    post:
      tags:
        - 'Agent Operations'
      summary: 'Create agent under specified groupId'
      description: 'Return the agent creation status'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/createAgentRq'
      responses:
        '200':
          description:
            Return the agentId <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createAgentRes'
  /agent/editAgent:
    post:
      tags:
        - 'Agent Operations'
      summary: 'Edits agent details '
      description: 'Return the agent edit status'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/editAgentRq'
      responses:
        '200':
          description:
            Return the agent edit status <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/editAgentRes'
  /agent/deleteAgent:
    post:
      tags:
        - 'Agent Operations'
      summary: 'Deletes the agent'
      description: 'Return the status '
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/deleteAgentRq'
      responses:
        '200':
          description:
            Return the status <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteAgentRes'
  /agent/getAgent:
    post:
      tags:
        - 'Agent Operations'
      summary: 'Returns the agent settings'
      description: 'Return the agent settings '
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/getAgentRq'
      responses:
        '200':
          description:
            Return the agent settings <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAgentRes'
  /agent/getAgentList:
    post:
      tags:
        - 'Agent Operations'
      summary: 'Gets List of agents for a specifed group'
      description: 'Return the list of agents for a specified group '
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/getAgentListRq'
      responses:
        '200':
          description:
            Return the Agent List<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAgentListRes'
  /agent/discover/condition:
    get:
      tags:
        - 'Agent Operations'
      summary: 'Gets Discovery Setting List for a specified agent'
      description: 'Gets Discovery Setting List for a specified agent'
      operationId: getDiscoverySettingList
      parameters:
        - in: query
          name: agentId
          schema:
            type: string
          required: true
      responses:
        '200':
          description:
            Returns the Discovery Setting List for a specified agent<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDiscoverySettingListRes'
  /agent/discover/condition/{agentId}:
    put:
      tags:
        - 'Agent Operations'
      summary: 'Sets Discovery Setting List for a specified agent'
      description: 'Sets Discovery Setting List for a specified agent'
      parameters:
        - in: path
          name: agentId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/setDiscoverySettingListRq'
      responses:
        '200':
          description:
            Return the Status  <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setDiscoverySettingListRes'
  /agent/discover/conf:
    get:
      tags:
        - 'Agent Operations'
      summary: 'Gets Discovery condition(specificip,iprange,local broadcast) for a specified agent'
      description: 'Gets Discovery condition(specificip,iprange,local broadcast) for a specified agent'
      parameters:
        - in: query
          name: agentId
          schema:
            type: string
          required: true
        - in: query
          name: conditionId
          schema:
            type: string
          required: true
      responses:
        '200':
          description:
            Return the Discovery condition<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getdiscoveryConditionRes'
    post:
      tags:
        - 'Agent Operations'
      summary: 'Creates Discovery Condition(specificip,iprange,broadcast ip) for a specified agent'
      description: 'Creates discovery condition(specificip,iprange,broadcast ip) for a specified agent'
      parameters:
        - in: query
          name: agentId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/creatediscoveryConditionRq'
      responses:
        '200':
          description:
            Returns the Status <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/creatediscoveryConditionRes'
  /agent/discover/conf/{conditionId}:
    put:
      tags:
        - 'Agent Operations'
      summary: 'Sets Discovery Condition(specificip,iprange,broadcast ip) for a specified agent'
      description: 'Sets discovery condition(specificip,iprange,broadcast ip) for a specified agent'
      parameters:
        - in: query
          name: agentId
          schema:
            type: string
          required: true
        - in: path
          name: conditionId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/setdiscoveryConditionRq'
      responses:
        '200':
          description:
            Returns the Status <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setdiscoveryConditionRes'
  /agent/snmp/condition:
    get:
      tags:
        - 'Agent Operations'
      summary: 'Gets SNMP  Credential List'
      description: 'Gets SNMP Credential List'
      parameters:
        - in: query
          name: groupId
          schema:
            type: string
          required: true
        - in: query
          name: snmpType
          schema:
            type: integer
            enum: [1,2,3]
            default: 3
          description: "
            snmpType:
             * `1` - snmpv1
             * `2` - snmpv3
             * `3` - all "
          required: true
      responses:
        '200':
          description:
            Return the SNMP Credential List <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSNMPConditionListRes'
    post:
      tags:
        - 'Agent Operations'
      summary: 'Creates SNMP Credentials Details'
      description: 'Creates SNMP Credential Details'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/createSNMPCredentialRq'
      responses:
        '200':
          description:
            Sets  the SNMP Credentials <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createSNMPCredentialRes'
  /agent/snmp/condition/{credentialId}:
    get:
      tags:
        - 'Agent Operations'
      summary: 'Gets SNMP Credential Details'
      description: 'Gets SNMP Credential Details'
      parameters:
        - in: path
          name: credentialId
          schema:
            type: string
          required: true
        - in: query
          name: groupId
          schema:
            type: string
          required: true
      responses:
        '200':
          description:
            Gets SNMP Credential Details<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getSNMPCredentialRes'
    put:
      tags:
        - 'Agent Operations'
      summary: 'Sets SNMP Credentials Details'
      description: 'Sets SNMP Credential Details'
      parameters:
        - in: path
          name: credentialId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/setSNMPCredentialRq'
      responses:
        '200':
          description:
            Sets  the SNMP Credentials <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setSNMPCredentialRes'
  /agent/snmp/del:
    post:
      tags:
        - 'Agent Operations'
      summary: 'Deletes SNMP Credential(s)'
      description: 'Deletes SNMP Credential(s)'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/deleteSNMPv1CredentialRq'
      responses:
        '200':
          description:
            Deletes SNMP Credential <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deleteSNMPv1CredentialRes'
  /agent/discovery/condition/del:
    post:
      tags:
        - 'Agent Operations'
      summary: 'Deletes Discovery Conditions for a specified agent'
      description: 'Deletes Discovery Conditions for a specified agent'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/deletediscoverySettingsRq'
      responses:
        '200':
          description:
            Deletes the discovery conditions <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deletediscoverySettingsRes'
#Report Operations
  /group/report/conf:
    get:
      tags:
        - 'Report Operations'
      summary: 'Get Report Settings'
      description: 'Get Report Settings'
      operationId: getReportSettings
      parameters:
        - in: query
          name: groupId
          schema:
            type: string
          required: true
        - in: query
          name: reportType
          schema:
            type: integer
            enum: [1, 2,3]
          description: "
            reportType:
             * `1` - DeviceReport
             * `2` - UsageReport
             * `3` - DateRangeReport"
          required: true
      responses:
        '200':
          description:
            Returns the Report Settings for a specific group <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getReportSettingsRes'
    put:
      tags:
        - 'Report Operations'
      summary: 'Set Report Settings'
      description: 'Set Report Settings'
      operationId: setReportSettings
      parameters:
        - in: query
          name: groupId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/setReportSettingsRq'
      responses:
        '200':
          description:
            Returns the Status <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setReportSettingsRes'
  /group/usageReport/exportConf:
    get:
      tags:
        - 'Report Operations'
      summary: 'Get Usage Report Export Settings'
      description: 'Get Usage Report Export Settings'
      operationId: getUsageReportSettings
      parameters:
        - in: query
          name: groupId
          schema:
            type: string
          required: true
      responses:
        '200':
          description:
            Returns the Usage Report Settings for a specific group <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getUsageReportSettingsRes'
    put:
      tags:
        - 'Report Operations'
      summary: 'Set Usage Report Settings'
      description: 'Set Usage Report Settings'
      operationId: setUsageReportSettings
      parameters:
        - in: query
          name: groupId
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/setUsageReportSettingsRq'
      responses:
        '200':
          description:
            Returns the Status <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setUsageReportSettingsRes'
  /group/usageReport/byFunction:
    post:
      tags:
        - 'Report Operations'
      summary: 'Creates the usage report by function for a specific group'
      description: 'Creates the usage report by function for a specific group'
      operationId: usageReportByFunction
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/usageReportByFunctionRq'
      responses:
        '200':
          description:
            Returns the usage by function for a specific group<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usageReportByFunctionRes'
  /group/usageReport/dailyOutput:
    post:
      tags:
        - 'Report Operations'
      summary: 'Creates the usage report for the daily output for a specific group'
      description: 'Creates the usage report for the daily output for a specific group'
      operationId: usageReportDailyOutput
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/usageReportDailyoutputRq'
      responses:
        '200':
          description:
            Returns the usage daily output for a specific group<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usageReportDailyoutputRes'
  /dashboard/counter/usage:
    post:
      tags:
        - 'Dashboard'
      summary: 'Get the daily/weekly/monthly counter usage for a specific group'
      description: 'Get the daily/weekly/monthly counter usage for a specific group'
      operationId: counterUsage
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/counterUsageRq'
      responses:
        '200':
          description:
            Returns the counter usage daily/ weekly/ monthly for a specific group<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/counterUsageRes'
  /dashboard/device/counter/usage:
    post:
      tags:
        - 'Dashboard'
      summary: 'Get the counter usage by device.'
      description: 'Get the counter usage by device.'
      operationId: deviceCounterUsage
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/deviceCounterUsageRq'
      responses:
        '200':
          description:
            Returns the counter usage daily/ weekly/ monthly for a specific group<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deviceCounterUsageRes'
  /group/usageReport/export:
    get:
      tags:
        - 'Report Operations'
      summary: 'Prepare the detailed usage report based on report settings and export.'
      description: 'Prepare the detailed usage report based on report settings and export for Email Now, Download Now and Schedule Email followed by /checkprogress & /group/download/{requestId}'
      operationId: exportDetailedUsageReport
      parameters:
        - in: query
          name: groupId
          schema:
            type: string
          required: true
        - in: query
          name: isDownload
          schema:
            type: boolean
            enum:
              - true # Download Now
              - false # Email now
          required: true
        - in: query
          name: isSchedule
          description: >-
            * 'true' - Export Usage Report based on Schedule.
            * 'false' - Not from Schedule, isSchedule flag is optional.
          schema:
            type: boolean
            enum: [true, false]
      responses:
        '200':
          description:
            Returns the requestId <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportDetailedUsageRes'
  #roup/report/latest:
  # get:
  #  tags:
  #    - 'Report Operations'
  #  summary: 'Get Latest Device Report(obsolete)'
  #  description: 'Get Latest Device Report(obsolete)'
  #  operationId: getLatestDeviceReport
  #  parameters:
  #    - in: query
  #      name: startIndex
  #      schema:
  #        type: integer
  #      required: true
  #    - in: query
  #      name: count
  #      schema:
  #        type: integer
  #      required: true
  #    - in: query
  #      name: groupId
  #      schema:
  #        type: string
  #      required: true
  #    - in: query
  #      name: orderBy
  #      description: 'orderBy'
  #      required: true
  #      schema:
  #        type: array
  #        items:
  #          type: object
  #          properties:
  #            key:
  #              type: string
  #              description: ''
  #              enum:
  #              - maker
  #              - ipAddress
  #              - modelName
  #            order:
  #              type: string
  #              description: 'ascending or descending'
  #              enum:
  #                - ascending
  #                - descending
  #  responses:
  #    '200':
  #      description:
  #        Get Latest Device Report <br>
  #      content:
  #        application/json:
  #          schema:
  #            $ref: '#/components/schemas/getLatestDeviceReportRes'
  # post:
  #  tags:
  #    - 'Report Operations'
  #  summary: 'Create Device Report for specific Group based on ReportSettings'
  #  description: 'Create Device Report for specific Group based on ReportSettings'
  #  operationId: 'createDeviceReport'
  #  requestBody:
  #    required: true
  #    content:
  #      aplication/json:
  #        schema:
  #          $ref: '#/components/schemas/createDeviceReportRq'
  #  responses:
  #    '200':
  #      description:
  #        Returns the status of create Report & mailSend<br>
  #      content:
  #        application/json:
  #          schema:
  #            $ref: '#/components/schemas/createDeviceReportRes'
  #/group/report/{groupId}:
  #   post:
  #    tags:
  #      - 'Report Operations'
  #    summary: 'Deletes Saved Report(s)'
  #    description: 'Deletes Saved Report(s)'
  #    parameters:
  #      - in: path
  #        name: groupId
  #        schema:
  #          type: string
  #        required: true
  #    requestBody:
  #      required: true
  #      content:
  #        application/json:
  #          schema:
  #            $ref: '#/components/schemas/deleteSavedReportRq'
  #    responses:
  #      '200':
  #        description:
  #          Get Device list result <br>
  #        content:
  #          application/json:
  #            schema:
  #              $ref: '#/components/schemas/deleteSavedReportRes'
  /group/report/latest/create:
    get:
      tags:
        - 'Report Operations'
      summary: 'Prepare the Device Latest Report for Download'
      description: 'Prepare the Device Latest Report for Download'
      operationId: requestDeviceLatestReport
      parameters:
        - in: query
          name: groupId
          schema:
            type: string
          required: true
        - in: query
          name: reportType
          schema:
            type: integer
            enum: [1, 2,3]
          description: '
            reportType:
             * `1` - DeviceReport
             * `2` - UsageReport
             * `3` - DateRangeReport'
        - in: query
          name: downloadOrEmail
          schema:
            type: boolean
            enum:
              - true # Download Now
              - false # Email now
          required: true
      responses:
        '200':
          description:
            Returns the requestId <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDeviceLatestReportRes'
  /group/download/{requestId}:
    get:
      tags:
        - 'Report Operations'
      summary: 'Download the Device Latest Report based on RequestId'
      description: 'Download the Device Latest Report based on RequestId'
      operationId: downloadDeviceLatestReport
      parameters:
        - in: path
          name: requestId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: 'A PDF or HTML or CSV file'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/downloadLogRes'
  /group/email/{requestId}:
    get:
      tags:
        - 'Report Operations'
      summary: 'Gets Status of Report Email Now based on requestId'
      description: 'Gets Status of Report Email Now based on requestId'
      operationId: emailRequest
      parameters:
        - in: path
          name: requestId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: 'Send Email Status emailReportRes'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emailReportRes'
  /group/usageReport/email/{groupId}:
    get:
      tags:
        - 'Report Operations'
      summary: 'Gets Status of Schedule Usage Report Email.'
      description: 'Gets Status of Schedule Usage Report Email.'
      operationId: usageReportEmail
      parameters:
        - in: path
          name: groupId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: 'Sends the requested operation status'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/emailReportRes'
  #/group/report:
  #  get:
  #    tags:
  #      - 'Report Operations'
  #    summary: 'Get Report List'
  #    description: 'Get Report List'
  #    operationId: getReportList
  #    parameters:
  #      - in: query
  #        name: startIndex
  #        schema:
  #          type: integer
  #        required: true
  #      - in: query
  #        name: count
  #        schema:
  #          type: integer
  #        required: true
  #      - in: query
  #        name: groupId
  #        schema:
  #          type: string
  #        required: true
  #      - in: query
  #        name: orderBy
  #        required: true
  #        schema:
  #          type: array
  #          items:
  #           type: object
  #           properties:
  #            key:
  #              type: string
  #              description: ''
  #              enum:
  #              - reportCreatedTime
  #              #- reportId
  #              - reportType
  #            order:
  #              type: string
  #              description: 'ascending or descending'
  #              enum:
  #                - ascending
  #                - descending
  #    responses:
  #      '200':
  #        description:
  #          Get Report List <br>
  #        content:
  #          application/json:
  #            schema:
  #              $ref: '#/components/schemas/getReportListRes'
  #/group/report/{reportId}:
  # get:
  #    tags:
  #      - 'Report Operations'
  #    summary: 'Get Device Detailed Report'
  #    description: 'Get Device Detailed Report'
  #    operationId: getDetailedDeviceReport
  #    parameters:
  #      - in: path
  #        name: reportId
  #        schema:
  #          type: string
  #        required: true
  #      - in: query
  #        name: startIndex
  #        schema:
  #          type: integer
  #        required: true
  #      - in: query
  #        name: count
  #        schema:
  #          type: integer
  #        required: true
  #      - in: query
  #        name: groupId
  #        schema:
  #          type: string
  #        required: true
  #      - in: query
  #        name: orderBy
  #        description: 'orderBy'
  #        required: true
  #        schema:
  #          type: array
  #          items:
  #            type: object
  #            properties:
  #              key:
  #                type: string
  #                description: ''
  #                enum:
  #                - maker
  #                - ipAddress
  #                - modelName
  #              order:
  #                type: string
  #                description: 'ascending or descending'
  #                enum:
  #                  - ascending
  #                  - descending
  #    responses:
  #      '200':
  #        description:
  #          Get Device Detailed Report <br>
  #        content:
  #          application/json:
  #            schema:
  #              $ref: '#/components/schemas/getDetailedDeviceReportRes'         #
  #/group/report/email/conf:
  #  get:
  #    tags:
  #      - 'Report Operations'
  #    summary: 'Get Report Email Settings'
  #    description: 'Get Report Email Settings'
  #    operationId: getReportEmailSettings
  #    parameters:
  #      - in: query
  #        name: groupId
  #        schema:
  #          type: string
  #        required: true
  #    responses:
  #      '200':
  #        description:
  #          Returns the report email settings for a specific group <br>
  #        content:
  #          application/json:
  #            schema:
  #              $ref: '#/components/schemas/getReportEmailSettingsRes'
  #  put:
  #    tags:
  #      - 'Report Operations'
  #    summary: 'Set Report Email Settings'
  #    description: 'Set Report Email Settings'
  #    operationId: setReportEmailSettings
  #    requestBody:
  #      required: true
  #      content:
  #        aplication/json:
  #          schema:
  #            $ref: '#/components/schemas/setReportEmailSettingsRq'
  #    responses:
  #      '200':
  #        description:
  #          Returns the status <br>
  #        content:
  #          application/json:
  #            schema:
  #              $ref: '#/components/schemas/setReportEmailSettingsRes'
  #/group/report/email:
  # get:
  #    tags:
  #      - 'Report Operations'
  #    summary: 'Send Report Through Email '
  #    description: 'Send Report Through Email'
  #    operationId: emailReport
  #    parameters:
  #      - in: query
  #        name: reportId
  #        schema:
  #          type: string
  #        required: true
  #      - in: query
  #        name: groupId
  #        schema:
  #          type: string
  #        required: true
  #      - in: query
  #        name: reportFormat
  #        schema:
  #          type: string
  #        required: true
  #      - in: query
  #        name: reportType
  #        schema:
  #          type: integer
  #          enum: [1, 2,3]
  #        description: >
  #          reportType:
  #           * `1` - DeviceReport
  #           * `2` - UsageReport
  #           * `3` - DateRangeReport
  #        required: true
  #    responses:
  #      '200':
  #        description:
  #          Sends the report via email for a specific group <br>
  #        content:
  #          application/json:
  #            schema:
  #              $ref: '#/components/schemas/emailReportRes'
  #/group/report/download/{reportId}:
  # get:
  #    tags:
  #      - 'Report Operations'
  #    summary: 'Download Saved Report'
  #    description: 'Download Saved Report'
  #    operationId: downloadSavedReport
  #    parameters:
  #      - in: path
  #        name: reportId
  #        schema:
  #          type: string
  #        required: true
  #      - in: query
  #        name: groupId
  #        schema:
  #          type: string
  #        required: true
  #      - in: query
  #        name: reportFormat
  #        schema:
  #          type: string
  #        required: true
  #
  #    responses:
  #      '200':
  #        description:
  #          Download Saved Report<br>
  #        content:
  #          application/json:
  #            schema:
  #              $ref: '#/components/schemas/dowloadSavedReportRes'
  #/group/report/schedule:
  # get:
  #    tags:
  #      - 'Report Operations'
  #    summary: 'Get Report Schedule List'
  #    description: 'Get Report Schedule List'
  #    operationId: getReportScheduleList
  #    parameters:
  #    - in: query
  #      name: groupId
  #      schema:
  #        type: string
  #      required: true
  #    responses:
  #      '200':
  #        description:
  #          Return the Report Schedule List <br>
  #        content:
  #          application/json:
  #            schema:
  #              $ref: '#/components/schemas/getReportScheduleListRes'
  # post:
  #    tags:
  #      - 'Report Operations'
  #    summary: 'Enable/Disable Report Schedule List'
  #    description: 'Enable/Disable Report Schedule List'
  #    operationId: setReportScheduleList
  #    requestBody:
  #      required: true
  #      content:
  #        aplication/json:
  #          schema:
  #            $ref: '#/components/schemas/setReportScheduleListRq'
  #    responses:
  #      '200':
  #        description:
  #          Return the Status <br>
  #        content:
  #          application/json:
  #            schema:
  #              $ref: '#/components/schemas/setReportScheduleListRes'

  /group/report/schedule:
    get:
      tags:
        - 'Report Operations'
      summary: 'Get Report Schedule Details'
      description: 'Get Report Schedule Details'
      operationId: getReportScheduleDetails
      parameters:
      - in: query
        name: groupId
        schema:
          type: string
        required: true
      responses:
        '200':
          description:
            Return the Report Schedule Details  <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getReportScheduleDetailsRes'
    put:
      tags:
        - 'Report Operations'
      summary: 'Sets Report Schedule Details'
      description: 'Sets  Report Schedule Details'
      operationId: setReportScheduleDetails
      parameters:
      - in: query
        name: groupId
        schema:
          type: string
        required: true
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/setReportScheduleDetailsRq'
      responses:
        '200':
          description:
            Return the Status  <br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/setReportScheduleDetailsRes'
#Operation Logs
  /operationLog:
    post:
      tags:
        - 'Operation Log'
      summary: 'Get Operation Log List'
      description: 'Returns the Operation Log List'
      operationId: getOperationLogList
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/getOperationLogRq'
      responses:
        '200':
          description:
            Get Operation Log Based on log type & groupId<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getOperationLogRes'
  /operationLog/del:
    delete:
      tags:
        - 'Operation Log'
      summary: 'Removes All Operation Log(Selected group & type)'
      description: 'Returns the Status'
      operationId: removeAllOperationLogList
      parameters:
      - in: query
        name: groupId
        schema:
          type: string
        required: true
      - in: query
        name: type
        schema:
          type: string
          enum:
            - mib # Device Management
            - idp # Display Management
            - dd # Driver Management
            - mib-pm # MIB Power Management
            - idp-pm # Display Power Management
            - tco # Security Management
            - tco-dc # Device Cloning
        required: true
      responses:
        '200':
          description:
            Removes All Operation Log(Selected group & type)<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/removeAllOperationLogRes'
#Device Logs
  /deviceLog:
    post:
      tags:
        - 'Device Logs'
      summary: 'Get Device Log List'
      description: 'Returns the Device Log List'
      operationId: getDeviceLogList
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/getDeviceLogsRq'
      responses:
        '200':
          description:
            Get Device Log Based on log type & groupId<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getDeviceLogsRes'
  /deviceLog/del:
    delete:
      tags:
        - 'Device Logs'
      summary: 'Removes All Device Log(Selected group & type)'
      description: 'Returns the Status'
      operationId: removeAllDeviceLogList
      parameters:
      - in: query
        name: groupId
        schema:
          type: string
        required: true
      - in: query
        name: type
        schema:
          type: string
          enum:
            - mib # Device Management
            - idp # Display Management
            - tco # Security Management
            - tco-dc # Device Cloning
        required: true
      responses:
        '200':
          description:
            Removes All Device Log(Selected group & type)<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/removeAllDeviceLogRes'
  /export/deviceLog:
    post:
      tags:
        - 'Device Logs'
      summary: 'Request to export the Device Logs for a Specified Group & Type'
      description: 'Request to export the Device Logs for a Specified Group & Type'
      requestBody:
        required: true
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/exportDeviceLogRq'
      responses:
        '200':
          description:
            Return the RequestId<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exportDeviceLogRes'
  /deviceLog/download:
    get:
      tags:
        - 'Device Logs'
      summary: 'Downloads the Device Logs for a Specified Request Id'
      description: 'Downloads the Device Logs for a Specified Request Id'
      parameters:
      - name: 'requestId'
        in: query
        description: 'requestId'
        required: true
        schema:
          type: string
      responses:
        '200':
          description:
            Return the RequestId<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/downloadLogRes'
  /deviceLog/oldestLogTime:
    get:
      tags:
        - 'Device Logs'
      summary: 'Get the oldest log timestamp'
      description: 'Get the oldest log timestamp based on log data availability in the database for a specific tenant. '
      parameters:
      - name: 'groupId'
        in: query
        description: 'groupId'
        required: true
        schema:
          type: string
      - name: 'logType'
        in: query
        description: >-
          logType:
            * `1` - For MIB Counter history Logs
            * `2` - For tco Security policy apply and check Logs.
        required: true
        schema:
          type: integer
          enum: [1, 2]
      responses:
        '200':
          description:
            Returns the oldest log timestamp based on log data availability in the db.<br>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oldestDeviceLogtimeRes'
components:
  schemas:
    # request pamameters
    # devicelist request
    getDeviceListRq:
      type: object
      properties:
        startIndex:
          type: integer
          description: '
            Start Index <br>
            ●Check content
              - Error for other than numeric value'
          default: 0
        count:
          type: integer
          description: '
            Number of records <br>
            ●Check content
              - Error for other than numeric value'
          default: 10
        groupId:
          type: string
          description: '
            groupId of target group <br>
            ●Check content
              - Error for null, null character (i.e. empty string)'
        filterId:
          type: string
          description: 'User Filter filterId'
        attribute:
          type: string
          description: '
            Attribute of Acquisition/Get target
              - managed： Managed Device
              - trash： Deleted Device (i.e. in Trash/recycle bin)
              - new： New Device

            ●Check content
              - Error for other than specified value'
          enum:
            - managed
            - trash
            - new
        deviceType:
          type: string
          description: "Type of device "
          enum:
            - mfp
            #- agent
            - display
            - all
        simpleFilters:
          type: array
          description: 'Simple Filter'
          items:
            type: object
            properties:
              key:
                type: string
                description: '
                  Filter key<br>
                  Specifiable items are as below.
                  - Filter key list
                    <table border="1">
                      <tr><th>Key</th><th>Description</th></tr>
                      <tr><td>modelName</td><td>Model name</td></tr>
                      <tr><td>serialNumber</td><td>Serial number</td></tr>
                      <tr><td>ipAddress</td><td>IP address</td></tr>
                      <tr><td>tagIds</td><td>Tag Ids</td></tr>
                      <tr><td>location</td><td>Location</td></tr>
                      <tr><td>description</td><td>Description</td></tr>
                      <tr><td>macAddress</td><td>MacAddress</td></tr>
                      <tr><td>impressionCount</td><td>Impression Count</td></tr>
                      <tr><td>firmwareVersion</td><td>firmware Version</td></tr>
                      <tr><td>friendlyName</td><td>Name</td></tr>
                      <tr><td>errorLevel</td><td>Alert Level</td></tr>
                      <tr><td>status</td><td>Device Status</td></tr>
                      <tr><td>troubleCode</td><td>Errorcode/maintaintainence code</td></tr>
                      <tr><td>deviceTypeSetting</td><td>Device Type Setting</td></tr>
                      <tr><td>detectedDeviceType</td><td>Detected Device Type</td></tr>
                      <tr><td>communicationStatus</td><td>Communication Status</td></tr>
                      <tr><td>agentName</td><td>Related Agent Name</td></tr>
                    </table>
                  ●Check content
                    - Error for other than specified value '
              value:
                type: string
                description: '
                  Filtering target strings <br>
                  Strings that are Specifiable in filter key are as below.
                  - Filtering target strings
                    <table border="1">
                      <tr><th>Key</th><th>Description</th></tr>
                      <tr><td>modelName</td><td>Specify input value</td></tr>
                      <tr><td>serialNumber</td><td>Specify input value</td></tr>
                      <tr><td>ipAddress</td><td>Specify input value</td></tr>
                      <tr><td>tagIds</td><td>Specify input value</td></tr>
                      <tr><td>location</td><td>Specify input value</td></tr>
                      <tr><td>description</td><td>Specify input value</td></tr>
                      <tr><td>macAddress</td><td>Specify input value</td></tr>
                      <tr><td>impressionCount</td><td>Specify input value</td></tr>
                      <tr><td>firmwareVersion</td><td>Specify input value</td></tr>
                      <tr><td>friendlyName</td><td>Specify input value</td></tr>
                      <tr><td>discoveryTime</td><td>Specify input value</td></tr>
                      <tr><td>lastStatusUpdate</td><td>Specify input value</td></tr>
                      <tr><td>lastBasicUpdate</td><td>Specify input value</td></tr>
                      <tr><td>troubleCode</td><td>Specify input value</td></tr>
                      <tr><td>lastSuppliesUpdate</td><td>Specify input value</td></tr>
                      <tr><td>lastCounterUpdate</td><td>Specify input value</td></tr>
                      <tr><td>deviceTypeSetting</td><td>Specify input value</td></tr>
                      <tr><td>detectedDeviceType</td><td>Specify input value</td></tr>
                      <tr><td>errorLevel</td><td>error,warning,normal</td></tr>
                      <tr><td>status</td><td>
                      <table border="1">
                      <tr><td>unknown</td></tr>
                      <tr><td>printererror </td></tr>
                      <tr><td>accountlimit </td></tr>
                      <tr><td>overduepreventmaintenance </td></tr>
                      <tr><td>paperjam </td></tr>
                      <tr><td>markersupplymissing </td></tr>
                      <tr><td>tonerempty </td></tr>
                      <tr><td>coveropen </td></tr>
                      <tr><td>paperempty  </td></tr>
                      <tr><td>specifiedinputtrayempty </td></tr>
                      <tr><td>specifiedinputtraymissing </td></tr>
                      <tr><td>alloutputtrayfull </td></tr>
                      <tr><td>specifiedoutputtraymissing </td></tr>
                      <tr><td>offline </td></tr>
                      <tr><td>printerwarning  </td></tr>
                      <tr><td>tonerlow </td></tr>
                      <tr><td>paperlow</td></tr>
                      <tr><td>inputtraymissing </td></tr>
                      <tr><td>outputtraymissing </td></tr>
                      <tr><td>outputtrayfull </td></tr>
                      <tr><td>stackernotinstalled  </td></tr>
                      <tr><td>nearoverduepreventmaintenance   </td></tr>
                      <tr><td>standby  </td></tr>
                      <tr><td>warmup  </td></tr>
                      <tr><td>printing  </td></tr>
                      <tr><td>online</td></tr>
                    </table></td></tr>
                      <tr><td>communicationStatus</td><td>True/false</td></tr> 
                      <tr><td>agentName</td><td>Specify input value</td></tr> '
            required:
              - key
              - value
        orderBy:
          type: array
          description: 'Sort Specification'
          items:
            type: object
            properties:
              key:
                type: string
                description:
                  Sort Key <br>
                  Specifiable items are as below.
                  - Sort Key list
                    <table border="1">
                      <tr><th>Key</th><th>Description</th></tr>
                      <tr><td>modelName</td><td>Model name</td></tr>
                      <tr><td>serialNumber</td><td>Serial number</td></tr>
                      <tr><td>ipAddress</td><td>IP Address <br>Sort IP address by digitized value (i.e. converted to numerical form)</td></tr>
                      <tr><td>friendlyName</td><td>Name</td></tr>
                      <tr><td>errorLevel</td><td>Alert Value</td></tr>
                      <tr><td>status</td><td>Status</td></tr>
                      <tr><td>location</td><td>Location</td></tr>
                      <tr><td>description</td><td>Description</td></tr>
                      <tr><td>macAddress</td><td>MacAddress</td></tr>
                      <tr><td>impressioncount</td><td>Impression Count</td></tr>
                      <tr><td>firmwareversion</td><td>firmwareversion</td></tr>
                      <tr><td>discoveryTime</td><td>DiscoveryTime</td></tr>
                      <tr><td>laststatusupdate</td><td>Last StatusUpdate</td></tr>
                      <tr><td>lastbasicupdate</td><td>LastBasicUpdate</td></tr>
                      <tr><td>lastsuppliesupdate</td><td>LastBasicUpdate</td></tr>
                      <tr><td>lastcounterupdate</td><td>LastCounterUpdate</td></tr>
                      <tr><td>troublecode</td><td>Errorcode/maintaintainence code</td></tr>
                      <tr><td>communicationStatus</td><td>Communication Status</td></tr>
                      <tr><td>detectedDeviceType</td><td>Detected Device Type</td></tr>
                      <tr><td>deviceTypeSetting</td><td>Device Type Setting</td></tr>
                      <tr><td>tagIds</td><td>TagIds</td></tr>
                      <tr><td>agentName</td><td>Related Agent Name</td></tr>
                    </table>
                  ●Check content
                    - Error for other than specified value
              order:
                type: string
                description: '
                  Sort Order <br>
                    - ascending: Ascending
                    - descending: Descending
                  ●Check content
                    - Error for other than specified value'
                enum:
                  - ascending
                  - descending
            required:
              - key
              - order
      required:
        - groupId
        - attribute
    getDeviceLogRq:
      type: object
      properties:
        startIndex:
          type: integer
          description: '
            Start Index <br>
            ●Check content
              - Error for other than numeric value'
          default: 0
        count:
          type: integer
          description: '
            Number of records <br>
            ●Check content
              - Error for other than numeric value'
          default: 10
        groupId:
          type: string
          description: '
            groupId of target group <br>
            ●Check content
              - Error for null, null character (i.e. empty string)'
        reqAttr:
          type: string
          description: "logcount:It gets the count of device logs(total count,error count,warn count,noResponseCount.Others:It gets device log"
        deviceId:
          type: string
          description: 'device Id'
        filterId:
          type: string
          description: 'User Filter filterId'
        simpleFilterList:
          type: array
          description: 'Simple Filter'
          items:
            type: object
            properties:
              key:
                type: string
                description: '
                  Filter key<br>
                  Specifiable items are as below.
                  - Filter key list
                    <table border="1">
                      <tr><th>Key</th><th>Description</th></tr>
                      <tr><td>Type</td><td>Different Status update types & detection</td></tr>
                      <tr><td>communicationStatus</td><td>Communication Status</td></tr>
                      <tr><td>errorLevel</td><td>Alert Level </td></tr>
                      <tr><td>status</td><td>Device Status</td></tr>
                      <tr><td>modelName</td><td>Model name</td></tr>
                      <tr><td>friendlyName</td><td>Name</td></tr>
                      <tr><td>ipAddress</td><td>IP address</td></tr>
                      <tr><td>location</td><td>Location</td></tr>
                      <tr><td>macAddress</td><td>MacAddress</td></tr>
                      <tr><td>serialNumber</td><td>Serial number</td></tr>
                      <tr><td>firmwareversion</td><td>firmwareversion</td></tr>
                    </table>
                  ●Check content
                    - Error for other than specified value '
              value:
                type: string
                description: '
                  Filter Value<br>
                  Specifiable items are as below.
                  - Filter key list
                    <table border="1">
                      <tr><th>Key</th><th>Description</th></tr>
                      <tr><td>Type</td><td>device/Discovery/statusupdate/basic/supply/counter</td></tr>
                      <tr><td>communicationStatus</td><td>True/False</td></tr>
                      <tr><td>errorLevel</td><td>error,normal,warning</td></tr>
                      <tr><td>status</td><td>
                    <table border="1">
                      <tr><td>unknown</td></tr>
                      <tr><td>printererror </td></tr>
                      <tr><td>accountlimit </td></tr>
                      <tr><td>overduepreventmaintenance </td></tr>
                      <tr><td>paperjam </td></tr>
                      <tr><td>markersupplymissing </td></tr>
                      <tr><td>tonerempty </td></tr>
                      <tr><td>coveropen </td></tr>
                      <tr><td>paperempty  </td></tr>
                      <tr><td>specifiedinputtrayempty </td></tr>
                      <tr><td>specifiedinputtraymissing </td></tr>
                      <tr><td>alloutputtrayfull </td></tr>
                      <tr><td>specifiedoutputtraymissing </td></tr>
                      <tr><td>offline </td></tr>
                      <tr><td>printerwarning  </td></tr>
                      <tr><td>tonerlow </td></tr>
                      <tr><td>paperlow</td></tr>
                      <tr><td>inputtraymissing </td></tr>
                      <tr><td>outputtraymissing </td></tr>
                      <tr><td>outputtrayfull </td></tr>
                      <tr><td>stackernotinstalled  </td></tr>
                      <tr><td>nearoverduepreventmaintenance   </td></tr>
                      <tr><td>standby  </td></tr>
                      <tr><td>warmup  </td></tr>
                      <tr><td>printing  </td></tr>
                      <tr><td>online</td></tr>
                    </table>
                      </td></tr>
                      <tr><td>modelName</td><td>Specify input value</td></tr>
                      <tr><td>friendlyName</td><td>Specify input value</td></tr>
                      <tr><td>ipAddress</td><td>Specify input value</td></tr>
                      <tr><td>location</td><td>Specify input value</td></tr>
                      <tr><td>macAddress</td><td>Specify input value</td></tr>
                      <tr><td>serialNumber</td><td>Specify input value</td></tr>
                      <tr><td>firmwareversion</td><td>Specify input value</td></tr>
                    </table> '
            required:
              - key
              - value
        orderBy:
          type: array
          description: 'Sort Specification'
          items:
            type: object
            properties:
              key:
                type: string
                description: '
                  Sort Key <br>
                  Specifiable items are as below.
                  - Sort Key list
                    <table border="1">
                      <tr><th>Key</th><th>Description</th></tr>
                      <tr><td>timestamp</td><td>Date & Time</td></tr>
                      <tr><td>Type</td><td>Operation type</td></tr>
                      <tr><td>communicationStatus</td><td>Communication Status</td></tr>
                      <tr><td>errorLevel</td><td>Alert Level</td></tr>
                      <tr><td>status</td><td>Device Status</td></tr>
                      <tr><td>modelName</td><td>Model name</td></tr>
                      <tr><td>friendlyName</td><td>Name</td></tr>
                      <tr><td>ipAddress</td><td>IP Address <br>Sort IP address by digitized value (i.e. converted to numerical form)</td></tr>
                      <tr><td>location</td><td>Location</td></tr>
                      <tr><td>macAddress</td><td>MacAddress</td></tr>
                      <tr><td>serialNumber</td><td>Serial number</td></tr>
                      <tr><td>firmwareversion</td><td>firmwareversion</td></tr>
                    </table>
                  ●Check content
                    - Error for other than specified value '
              order:
                type: string
                description: '
                  Sort Order <br>
                    - ascending: Ascending
                    - descending: Descending
                  ●Check content
                    - Error for other than specified value'
                enum:
                  - ascending
                  - descending
            required:
              - key
              - order
      required:
        - groupId
        - attribute
    #getDeviceDetailRq
    getDeviceDetailRq:
      type: object
      required:
        - deviceId
        - groupId
      properties:
        deviceId:
          type: string
          description:
            deviceId of device<br>
        groupId:
          type: string
          description: groupId
    #getDeviceDetailRq
    createGrpRq:
      type: object
      required:
        - parentGroupId
        - groupName
        - groupType
      properties:
        parentGroupId:
          type: string
          description: "group id of parent group"
        groupName:
          type: string
          description: "group name"
        description:
          type: string
          description: "group description"
        groupType:
          type: string
          description: "groupType"
          enum:
            - Cluster
            - Non-Cluster
            - Tag
    getGroupInfoRq:
      type: object
      required:
        - domainName
        - customerName
        - customerId
        - timezone
      properties:
        tenantName:
          type: string
          description: "Domain Name"
        customerName:
          type: string
          description: "Customer Name"
        customerId:
          type: string
          description: "Customer Id"
        timezone:
          type: string
          description: "Timezone"
    editGrpRq:
      type: object
      properties:
        groupId:
          type: string
          description: "group id "
        groupName:
          type: string
          description: "group name"
        description:
          type: string
          description: "group description"
    getGrpListRq:
      required:
        - groupId
        - startIndex
        - count
      properties:
        groupId:
          type: string
          description: "group id "
        startIndex:
          type: integer
          description: "start index"
          default: 0
        count:
          type: integer
          description: "number of records"
        totalFlag:
          type: boolean
          description: "To Render total groups "
        attribute:
          type: string
          description: "managed or trash"
          enum:
            - managed
            - trash
        #groupType:
        #  type: string
        #  description: "groupType"
        #  enum:
        #    - Cluster
        #    - Non-Cluster
        #    - Tag
        #filterList:
        #  type: array
        #  description: "filterList"
        #  items:
        #    type: object
        #    properties:
        #      key:
        #        type: string
        #        description: 'key column '
        #      value:
        #        type: string
        #        description: 'group column value'
        orderBy:
          type: array
          description: 'Sort Specification'
          items:
            type: object
            properties:
              key:
                type: string
                description: ''
              order:
                type: string
                description: 'ascending or descending'
                enum:
                  - ascending
                  - descending
    getGrpTreeRq:
      properties:
        startIndex:
          type: integer
          description: "start index"
          default: 0
        count:
          type: integer
          description: "number of records(default 10)"
        userId:
          type: string
          description: "userId"
        expand:
          type: string
          description: "no:only requested group.childreOnly:only children , all: all groups"
          enum:
            - all
            - children
            - childrenonly
            - no
    startRemoveGrpRq:
      properties:
        operation:
          type: string
          description: "group operations"
          enum:
            - moveTrash
            - restore
            - delete
        groupIds:
          type: array
          items:
            type: string
          description: "List of groupIds "
    startRemoveDeviceRq:
      properties:
        groupId:
          type: string
          description: groupId
        operation:
          type: string
          description: "group operations"
          enum:
            - moveTrash
            - restore
            - delete
            - discard
        deleteFromSearchCondition:
          type: string
          description: 'deleteFromSearchCondition'
        isExclude:
          type: boolean
          description: 'isExclude If True:DeviceIds are non-selected device.False:DeviceIds are selected device'
        deviceIds:
          type: array
          items:
            type: string
          description: "List of deviceIds "
    startMoveGrpRq:
      properties:
        srcGroupId:
          type: string
          description: "source Group Id"
        dstGroupId:
          type: string
          description: "destination Group Id"
    startPasteDeviceRq:
      properties:
        relatedGroupId:
          type: string
          description: "source Cluster Group Id"
        deviceType:
          type: string
          description: "deviceType"
          enum:
          - mfp
          - display
        tagIds:
          type: array
          items:
            type: string
            description: "tagIds to link devices"
        untagIds:
          type: array
          items:
            type: string
            description: "tagIds to un link devices"
        mode:
          type: string
          description: 'Copy or Move'
          enum:
          - copy
          - move
        deviceIds:
          type: array
          items:
            type: string
          description: "List of deviceIds "
        isExclude:
          type: boolean
          description: 'isExclude If True:DeviceIds are non-selected device.False:DeviceIds are selected device'
    checkProgressRq:
      properties:
        requestId:
          type: string
          description: "Request Id"
    watchRq:
      properties:
        category:
          type: string
          description: "Category will indicates on which entity watch should be performed(Note: Category will be updated based on Query requirement further)"
          enum:
          - device
          - group
        opCode:
          type: integer
          description: " Indicates For which operation on COllection Watch has to be performed "
          enum:
          - insert
          - update
          - replace
          #- delete
        Query:
          type: string
          description: "The DB query condition"
        simpleFilters:
          type: array
          description: 'Simple Filter'
          items:
            type: object
            properties:
              key:
                type: string
                description: '
                  Filter key<br>
                  Specifiable items are as below.
                  - Filter key list
                    <table border="1">
                      <tr><th>Key</th><th>Description</th></tr>
                      <tr><td>modelName</td><td>Model name</td></tr>
                      <tr><td>serialNumber</td><td>Serial number</td></tr>
                      <tr><td>ipAddress</td><td>IP address</td></tr>
                      <tr><td>tagIds</td><td>Tag Ids</td></tr>
                      <tr><td>location</td><td>Location</td></tr>
                      <tr><td>description</td><td>Description</td></tr>
                      <tr><td>macAddress</td><td>MacAddress</td></tr>
                      <tr><td>impressionCount</td><td>Impression Count</td></tr>
                      <tr><td>firmwareVersion</td><td>firmware Version</td></tr>
                      <tr><td>friendlyName</td><td>Name</td></tr>
                      <tr><td>errorLevel</td><td>Alert Level</td></tr>
                      <tr><td>status</td><td>Device Status</td></tr>
                      <tr><td>troubleCode</td><td>Errorcode/maintaintainence code</td></tr>
                      <tr><td>deviceTypeSetting</td><td>Device Type Setting</td></tr>
                      <tr><td>detectedDeviceType</td><td>Detected Device Type</td></tr>
                      <tr><td>communicationStatus</td><td>Communication Status</td></tr>
                    </table>
                  ●Check content
                    - Error for other than specified value '
              value:
                type: string
                description: '
                  Filtering target strings <br>
                  Strings that are Specifiable in filter key are as below.
                  - Filtering target strings
                    <table border="1">
                      <tr><th>Key</th><th>Description</th></tr>
                      <tr><td>modelName</td><td>Specify input value</td></tr>
                      <tr><td>serialNumber</td><td>Specify input value</td></tr>
                      <tr><td>ipAddress</td><td>Specify input value</td></tr>
                      <tr><td>tagIds</td><td>Specify input value</td></tr>
                      <tr><td>location</td><td>Specify input value</td></tr>
                      <tr><td>description</td><td>Specify input value</td></tr>
                      <tr><td>macAddress</td><td>Specify input value</td></tr>
                      <tr><td>impressionCount</td><td>Specify input value</td></tr>
                      <tr><td>firmwareVersion</td><td>Specify input value</td></tr>
                      <tr><td>friendlyName</td><td>Specify input value</td></tr>
                      <tr><td>discoveryTime</td><td>Specify input value</td></tr>
                      <tr><td>lastStatusUpdate</td><td>Specify input value</td></tr>
                      <tr><td>lastBasicUpdate</td><td>Specify input value</td></tr>
                      <tr><td>troubleCode</td><td>Specify input value</td></tr>
                      <tr><td>lastSuppliesUpdate</td><td>Specify input value</td></tr>
                      <tr><td>lastCounterUpdate</td><td>Specify input value</td></tr>
                      <tr><td>deviceTypeSetting</td><td>Specify input value</td></tr>
                      <tr><td>detectedDeviceType</td><td>Specify input value</td></tr>
                      <tr><td>errorLevel</td><td>error,warning,normal</td></tr>
                      <tr><td>status</td><td>
                      <table border="1">
                      <tr><td>unknown</td></tr>
                      <tr><td>printererror </td></tr>
                      <tr><td>accountlimit </td></tr>
                      <tr><td>overduepreventmaintenance </td></tr>
                      <tr><td>paperjam </td></tr>
                      <tr><td>markersupplymissing </td></tr>
                      <tr><td>tonerempty </td></tr>
                      <tr><td>coveropen </td></tr>
                      <tr><td>paperempty  </td></tr>
                      <tr><td>specifiedinputtrayempty </td></tr>
                      <tr><td>specifiedinputtraymissing </td></tr>
                      <tr><td>alloutputtrayfull </td></tr>
                      <tr><td>specifiedoutputtraymissing </td></tr>
                      <tr><td>offline </td></tr>
                      <tr><td>printerwarning  </td></tr>
                      <tr><td>tonerlow </td></tr>
                      <tr><td>paperlow</td></tr>
                      <tr><td>inputtraymissing </td></tr>
                      <tr><td>outputtraymissing </td></tr>
                      <tr><td>outputtrayfull </td></tr>
                      <tr><td>stackernotinstalled  </td></tr>
                      <tr><td>nearoverduepreventmaintenance   </td></tr>
                      <tr><td>standby  </td></tr>
                      <tr><td>warmup  </td></tr>
                      <tr><td>printing  </td></tr>
                      <tr><td>online</td></tr>
                    </table></td></tr>
                      <tr><td>communicationStatus</td><td>True/false</td></tr> '
            required:
              - key
              - value
    getOperationResultRq:
      properties:
        requestId:
          type: string
          description: "Request Id"
    getMoveGroupResultRq:
      properties:
        requestId:
          type: string
          description: "Request Id"
    startRemoveGrpRes:
      type: object
      description: 'startRemoveGroup response parameter'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        requestId:
          type: string
          description: "requestId"
    startRemoveDeviceRes:
      type: object
      description: 'startRemoveDevice response parameter'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        requestId:
          type: string
          description: "requestId"
    startMoveGrpRes:
      type: object
      description: 'start Move Group response parameter'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        requestId:
          type: string
          description: "requestId"
    startPasteDeviceRes:
      type: object
      description: 'start Copy/Move Device response parameter'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        requestId:
          type: string
          description: "requestId"
    checkProgressRes:
      type: object
      description: 'check progress response parameter'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        progressCompleteFlag:
          type: boolean
          enum:
          - true
          - false
          description: "request Id exists or not in the queue"
    watchRes:
      type: object
      description: 'Watch response parameter'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        watchRequestStatus:
          type: boolean
          enum:
          - true
          - false
          description: "This flag indicates whether Watch Request is submitted successfully or not"
    signalRConnectRes:
      type: object
      description: 'Returns the SignalR URL & Access Token '
      properties:
        url:
          type: string
          description: 'signalR connection URL'
        accessToken:
          type: string
          description: 'signalR accessToken'
    getOperationResultRes:
      type: object
      description: 'gets Device/group operation response parameter'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        result:
          type: boolean
          enum:
          - true
          - false
          description: "Device/Group operation is completed or not (true/false)"
        deviceCount:
          type: string
          description: 'deviceCount Request parameter (Applicable only for startPasteDevice API)'
        successCount:
          type: string
          description: 'device count which was copy/move successfully (Applicable only for startPasteDevice API)'
        failureCount:
          type: string
          description: 'failureCount which was copy/move with failure (Applicable only for startPasteDevice API)'
        resultList:
          type: array
          description: 'resultList(Applicable only for startPasteDevice API)'
          items:
            type: object
            properties:
              deviceId:
                type: string
                description: 'deviceId'
              execResult:
                type: string
                description: 'execResult'
              resultDetails:
                type: string
                description: 'resultDetails'
                enum:
                  - Ok(Success)
                  - notFound(specified deviceId doesn't exist in copy/move src cluster grp)
                  - notCopied(Failed to copy the device)
                  - notRemoved(When mode:move,copying the device is succeeded but failed to delete from the source cluster group)
                  - notExecuted(Operation is cancelled)
    getMoveGroupResultRes:
      type: object
      description: 'get move group result response parameter'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        result:
          type: boolean
          enum:
          - true
          - false
          description: "group move operation is completed or not (true/false)"
    # login request
    loginReq:
      type: object
      properties:
        startIndex:
          type: integer
          description: "test desc"
    loginiotReq:
      type: object
      properties:
        agentId:
          type: string
          description: "agent UUID"
          default: agent1
        iotsecretKey:
          type: string
          description: "iot secretkey"
      required:
        - agentId
        - iotsecretKey
    #getPermissionListReq
    getPermissionListReq:
      type: object
      properties:
        userId:
          type: string
          description: "login user id"
          default: 11111111111
        #groupId:
          # type: string
          #description: "login user's homegroupId"
      required:
        #- groupId
        - useId
    # response parameters
    # Basic functions
    getDeviceListRes:
      type: object
      description: 'getDeviceList response parameter'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        startIndex:
          type: integer
          description: 'Start Index (Same as request parameter)'
        count:
          type: integer
          description: 'Number of requests (Same as request parameter)'
        resultCount:
          type: integer
          description: 'Number of items acquired this time'
        totalCount:
          type: integer
          description: 'Total number of search result'
        deviceList:
          type: array
          description: 'Device list'
          items:
            type: object
            properties:
                _id:
                  type: string
                  description: "deviceId"
                type:
                  type: string
                  description: 'type: mfp | display | mib | tco | idp | lch | log | fss'
                  enum:
                  - mfp
                  - display
                  - mib
                  - tco
                  - idp
                  - lch
                  - log
                  - fss
                createTimestamp:
                  type: integer
                  description: 'createTimestamp'
                attribute:
                  type: string
                  description: "attribute"
                relatedGroupId:
                  type: string
                  description: "relatedGroupId"
                communicationStatus:
                  type: string
                  description: "communicationStatus"
                tagIds:
                  type: array
                  description: "List of associated tagIds"
                  items:
                    type: string
                    description: "tagId"
                deviceGeneral:
                  type: object
                  properties:
                    relatedAgentId:
                      type: string
                      description: 'agentId'
                    modelName:
                      type: string
                      description: 'Model Name<br> After registration, if the Get Info is not executed, null character'
                    friendlyName:
                      type: string
                      description: 'Name'
                    serialNumber:
                      type: string
                      description: 'Serial Number <br> After registration, if the Get Info is not executed, null character'
                    # dispErrorLevel:
                    #   type: string
                    #   description: 'Error Level (alert Level)'
                    #   enum:
                    #   - error
                    #   - warning
                    #   - normal
                    dispErrorCode:
                      type: integer
                      description: 'dispErrorLevel digitalized 10:Error;20:Warning;30:Normal'
                printerDevice:
                  type: object
                  properties:
                    connectionSetting:
                      type: object
                      properties:
                        ipAddress:
                          type: object
                          properties:
                            value:
                              type: string
                              description: 'ipaddress value'
                            ipToLong:
                              type: number
                              description: 'ipaddress value digitalized'
                        # port:
                        #   type: object
                        #   properties:
                        #     http:
                        #       type: integer
                        #       description: 'http port'
                        #     https:
                        #       type: integer
                        #       description: 'https port'
                        # useSSL:
                        #   type: boolean
                        #   description: 'useSSL flag'

                    macAddress:
                      type: string
                      description: 'macAddress'
                    deviceImage:
                      type: object
                      properties:
                        url:
                          type: string
                          description: 'url'
                        height:
                          type: string
                          description: 'height'
                        width:
                          type: string
                          description: 'width'
                    statusCode:
                      type: integer
                      description: ' Status digitalized'
                    troubleCode:
                      type: integer
                      description: ' trouble code'
                    dskFlag:
                      type: boolean
                      description: 'dsk flag'
                    location:
                      type: string
                      description: 'location'
                    description:
                      type: string
                      description: 'description'
                    firmwareVersion:
                      type: string
                      description: 'firmwareVersion'
                    subnetMask:
                      type: string
                      description: 'subnetMask'
                    driverIdList:
                      type: array
                      description: 'List of driver Ids'
                      items:
                        type: string
                        description: 'driverIds'
                    gateway:
                      type: string
                      description: 'gateway'
                    lastStatusUpdate:
                      type: number
                      description: 'lastStatusUpdate'
                    lastSuppliesUpdate:
                      type: number
                      description: 'lastSuppliesUpdate'
                    lastCounterUpdate:
                      type: number
                      description: 'lastCounterUpdate'
                    lastBasicUpdate:
                      type: number
                      description: 'lastBasicUpdate'
                    lifeCount:
                      type: number
                      description: 'lifeCount'
                    deviceTypeSetting:
                      type: string
                      description: 'deviceTypeSetting'
                    detectedDeviceType:
                      type: string
                      description: 'detectedDeviceType'
                    status:
                      type: array
                      description: 'List of status'
                      items:
                        type: string
                        description: "status"
                  #  higherStatus:
                  #    type: string
                  #    description: >-
                  #      - Higher Status possible values
                  #        <table border="1">
                  #          <tr><th>Description</th></tr>
                  #          <tr><td>unknown</td></tr>
                  #          <tr><td>printererror </td></tr>
                  #          <tr><td>accountlimit </td></tr>
                  #          <tr><td>overduepreventmaintenance </td></tr>
                  #          <tr><td>paperjam </td></tr>
                  #          <tr><td>markersupplymissing </td></tr>
                  #          <tr><td>tonerempty </td></tr>
                  #          <tr><td>paperempty  </td></tr>
                  #          <tr><td>specifiedinputtrayempty </td></tr>
                  #          <tr><td>specifiedinputtrayempty </td></tr>
                  #          <tr><td>specifiedinputtrayempty </td></tr>
                  #          <tr><td>specifiedinputtrayempty </td></tr>
                  #          <tr><td>offline </td></tr>
                  #          <tr><td>printerwarning  </td></tr>
                  #          <tr><td>tonerlow </td></tr>
                  #          <tr><td>tonerlow </td></tr>
                  #          <tr><td>inputtraymissing </td></tr>
                  #          <tr><td>outputtrayfull </td></tr>
                  #          <tr><td>outputtraynearfull  </td></tr>
                  #          <tr><td>outputtraymissing   </td></tr>
                  #          <tr><td>stackernotinstalled  </td></tr>
                  #          <tr><td>nearoverduepreventmaintenance   </td></tr>
                  #          <tr><td>standby  </td></tr>
                  #          <tr><td>warmup  </td></tr>
                  #          <tr><td>printing  </td></tr>
                  #          <tr><td>online</td></tr>
                  #        </table>
                    inTrayList:
                      type: object
                      description: 'intrayList'
                    markerList:
                      type: object
                      description: 'markerList'
                    maintenanceCodeList:
                      type: object
                      description: 'maintenanceCodeList'
                    serviceCodeList:
                      type: object
                      description: 'serviceCodeList'
                agentName:
                  type: string
                  description: 'Related Agent Name'
                scheduleId:
                  type: string
                  description: 'scheduleId of Device Schedule.'
                scheduleName:
                  type: string
                  description: 'Schedule Name of Device Schedule.'               
    getDeviceLogRes:
      type: object
      description: 'getDeviceLog List response parameter'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        startIndex:
          type: integer
          description: 'Start Index (Same as request parameter)'
        count:
          type: integer
          description: 'Number of requests (Same as request parameter)'
        resultCount:
          type: integer
          description: 'Number of items acquired this time'
        totalCount:
          type: integer
          description: 'Total number of search result'
        errorCount:
          type: integer
          description: 'Total number of error result'
        warningCount:
          type: integer
          description: 'Total number of warning result'
        noResponseCount:
          type: integer
          description: 'Total number of noresponse result'
        groupId:
          type: string
          description: 'groupId'
        deviceId:
          type: string
          description: 'deviceId'
        deviceLog:
          type: array
          description: 'Device list'
          items:
            type: object
            properties:
              timeStamp:
                type: integer
                description: 'time stamp'
              type:
                type: string
                description: 'type'
                enum:
                  - discovery
                  - status
                  - device
                  - basic
                  - supply
                  - counter
              description:
                type: string
                description: 'description'
              dispErrorLevel:
                type: string
                description: 'despErrorLevel'
              dispErrorLevelCode:
                type: integer
                description: 'despErrorLevel digitalized'
              dskFlag:
                type: boolean
                description: 'dskFlag'
              friendlyName:
                type: string
                description: 'friendlyName'
              firmwareVersion:
                type: string
                description: 'firmwareVersion'
              modelName:
                type: string
                description: 'Model Name<br> After registration, if the Get Info is not executed, null character'
              serialNumber:
                type: string
                description: 'Serial Number <br> After registration, if the Get Info is not executed, null character'
              ipAddress:
                type: string
                description: 'IP Address'
              ipToLong:
                type: number
                description: 'IP Address digitalized'
              noResponse:
                type: string
                description: 'noResponse'
              location:
                type: string
                description: 'IP Address'
              macAddress:
                type: string
                description: 'mac Address'
              communicationStatus:
                type: string
                description:
                  Communication Status
              communicationStatusCode:
                type: integer
                description:
                  Communication Status digitalized
              #higherStatus:
              #  type: string
              #  description: >-
              #    - Higher Status possible values
              #        <table border="1">
              #        <tr><td>unknown</td></tr>
              #        <tr><td>printererror </td></tr>
              #        <tr><td>accountlimit </td></tr>
              #        <tr><td>overduepreventmaintenance </td></tr>
              #        <tr><td>paperjam </td></tr>
              #        <tr><td>markersupplymissing </td></tr>
              #        <tr><td>tonerempty </td></tr>
              #        <tr><td>coveropen </td></tr>
              #        <tr><td>paperempty  </td></tr>
              #        <tr><td>specifiedinputtrayempty </td></tr>
              #        <tr><td>specifiedinputtraymissing </td></tr>
              #        <tr><td>alloutputtrayfull </td></tr>
              #        <tr><td>specifiedoutputtraymissing </td></tr>
              #        <tr><td>offline </td></tr>
              #        <tr><td>printerwarning  </td></tr>
              #        <tr><td>tonerlow </td></tr>
              #        <tr><td>paperlow</td></tr>
              #        <tr><td>inputtraymissing </td></tr>
              #        <tr><td>outputtraymissing </td></tr>
              #        <tr><td>outputtrayfull </td></tr>
              #        <tr><td>stackernotinstalled  </td></tr>
              #        <tr><td>nearoverduepreventmaintenance   </td></tr>
              #        <tr><td>standby  </td></tr>
              #        <tr><td>warmup  </td></tr>
              #        <tr><td>printing  </td></tr>
              #        <tr><td>online</td></tr>
              #      </table>
    getDeviceDetailRes:
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        _id:
          type: string
          description: 'assigned deviceId'
        createTimestamp:
          type: number
          description: 'createTimestamp'
        type:
          type: string
          description: 'deviceType'
        communicationStatus:
          type: string
          description: '
            - Communication Status possible values
              <table border="1">
                <tr><th>statusCode</th><th>Description</th></tr>
                <tr><td>0000</td><td>Communication OK </td></tr>
                <tr><td>0201</td><td>Agent not Responding</td></tr>
                <tr><td>0301</td><td>MFP not Responding</td></tr>
                <tr><td>0303</td><td>MFP illegal</td></tr>
            </table>'
        tagNames:
          type: array
          description: "List of associated Tag Names"
          items:
            type: string
            description: "Tag Name"
        agentName:
          type: string
          description: 'Related Agent Name'
        scheduleName:
          type: string
          description: 'Schedule Name of Device Schedule.'
        deviceGeneral:
          type: object
          description: 'deviceGeneral'
          properties:
                modelName:
                  type: string
                  description: 'Model Name<br> After registration, if the Get Info is not executed, null character'
                serialNumber:
                  type: string
                  description: 'Serial Number <br> After registration, if the Get Info is not executed, null character'
                familyName:
                  type: string
                  description: 'familyName'
                friendlyName:
                  type: string
                  description: 'friendlyName'
                dispErrorCode:
                  type: string
                  description: 'Error Level (alert Level Code)'
                  enum:
                    - 10
                    - 20
                    - 30
        printerDevice:
          type: object
          description: 'printerDevice'
          properties:
                connectionSetting:
                      type: object
                      properties:
                        ipAddress:
                          type: object
                          properties:
                            value:
                              type: string
                              description: 'ipaddress value'
                            ipToLong:
                              type: number
                              description: 'ipaddress value digitalized'
                        snmpSetting:
                          type: object
                          properties:
                            snmpVersion:
                              type: string
                              description: 'snmpVersion'
                            retry:
                              type: integer
                              description: 'retry'
                            timeout:
                              type: integer
                              description: 'timeout'
                            getCommunityString:
                              type: string
                              description: 'getCommunityString'
                            contextName:
                              type: string
                              description: 'contextName'
                            userName:
                              type: string
                              description: 'userName'
                            securityAuthType:
                              type: string
                              description: 'securityAuthType'
                            securityAuthKey:
                              type: string
                              description: 'securityAuthKey'
                            securityPrivType:
                              type: string
                              description: 'securityPrivType'
                            securitiPrivKey:
                              type: string
                              description: 'securitiPrivKey'
                location:
                  type: string
                  description: 'location'
                description:
                  type: string
                  description: 'description'
                dskFlag:
                  type: boolean
                  description: 'dskFlag'
                #higherStatus:
                #  type: string
                #  description: >-
                #    - Higher Status possible values
                #      <table border="1">
                #        <tr><th>Description</th></tr>
                #        <tr><td>unknown</td></tr>
                #        <tr><td>printererror </td></tr>
                #        <tr><td>accountlimit </td></tr>
                #        <tr><td>overduepreventmaintenance </td></tr>
                #        <tr><td>paperjam </td></tr>
                #        <tr><td>markersupplymissing </td></tr>
                #        <tr><td>tonerempty </td></tr>
                #        <tr><td>paperempty  </td></tr>
                #        <tr><td>specifiedinputtrayempty </td></tr>
                #        <tr><td>specifiedinputtrayempty </td></tr>
                #        <tr><td>specifiedinputtrayempty </td></tr>
                #        <tr><td>specifiedinputtrayempty </td></tr>
                #        <tr><td>offline </td></tr>
                #        <tr><td>printerwarning  </td></tr>
                #        <tr><td>tonerlow </td></tr>
                #        <tr><td>tonerlow </td></tr>
                #        <tr><td>inputtraymissing </td></tr>
                #        <tr><td>outputtrayfull </td></tr>
                #        <tr><td>outputtraynearfull  </td></tr>
                #        <tr><td>outputtraymissing   </td></tr>
                #        <tr><td>stackernotinstalled  </td></tr>
                #        <tr><td>nearoverduepreventmaintenance   </td></tr>
                #        <tr><td>standby  </td></tr>
                #        <tr><td>warmup  </td></tr>
                #        <tr><td>printing  </td></tr>
                #        <tr><td>online</td></tr>
                #      </table>
                macAddress:
                  type: string
                  description: 'macAddress'
                firmwareVersion:
                  type: string
                  description: 'firmwareVersion'
                driverIdList:
                      type: array
                      description: 'List of driver Ids'
                      items:
                        type: string
                        description: 'driverIds'
                deviceTypeSetting:
                  type: string
                  description: 'deviceTypeSetting'
                detectedDeviceType:
                  type: string
                  description: 'detectedDeviceType'
                lifeCount:
                  type: number
                  description: 'lifeCount'
                maintainenceCodeList:
                  type: object
                  description: 'maintainenceCodeList'
                serviceCodeList:
                  type: object
                  description: 'serviceCodeList'
                lastSuppliesUpdate:
                  type: number
                  description: 'lastSuppliesUpdate'
                deviceImage:
                      type: object
                      properties:
                        url:
                          type: string
                          description: 'url'
                        height:
                          type: string
                          description: 'height'
                        width:
                          type: string
                          description: 'width'
                # deviceImageUrl:
                #   type: string
                #   description: 'deviceImageUrl'
                # deviceImageHeight:
                #   type: string
                #   description: 'deviceImageHeight'
                # deviceImageWidth:
                #   type: string
                #   description: 'deviceImageWidth'
                subnetMask:
                  type: string
                  description: 'subnetMask'
                gateway:
                  type: string
                  description: 'gateway'
                lastStatusUpdate:
                  type: number
                  description: 'lastStatusUpate'
                status:
                  type: array
                  description: 'statusSet'
                  items:
                    type: string
                outTrayList:
                  type: object
                  description: 'outTrayList'
                inTrayList:
                  type: object
                  description: 'inTrayList'
                markerList:
                  type: object
                  description: 'markerList'
                disposalMarkerList:
                  type: object
                  description: 'disposalMarker List'
                lastCounterUpdate:
                  type: number
                  description: 'lastCounterUpdate'
                counter:
                  type: object
                  description: 'counter'
                #familyId:
                  # type: string
                  #description: 'familyId'
                # snmpCondition:
                #   type: object
                #   description: 'snmpCondition'
                #   properties:
                #       snmpV1:
                #         type: object
                #         description: 'snmpV1'
                #         properties:
                #             getCommunity:
                #             type: string
                #             description: 'snmpV1'
                #             useFlag:
                #             type: boolean
                #             description: "useflag"
                #       snmpV3:
                #         type: object
                #         description: 'snmpV3'
                #         properties:
                #             contextName:
                #             type: string
                #             description: 'contextName'
                #             userName:
                #             type: string
                #             description: 'userName'
                #             securityAuthKey:
                #             type: string
                #             description: "securityAuthKey"
                #             securityAuthType:
                #             type: string
                #             description: "securityAuthType"
                #             securityPrivKey:
                #             type: string
                #             description: "securityPrivKey"
                #             securityPrivType:
                #             type: string
                #             description: "securityPrivType"
                #             useFlag:
                #             type: boolean
                #             description: "useflag"
                lastBasicUpdate:
                  type: number
                  description: 'lastBasicUpdate'
                basicInfo:
                  type: object
                  description: 'basicInfo'
                service:
                  type: object
                  properties:
                    print:
                      type: object
                      properties:
                        descriptionLanguageList:
                          type: array
                          description: 'descriptionLanguageList'
                          items:
                            type: object
                            properties:
                              descriptionLanguage:
                                type: object
                                description: 'descriptionLanguage'
                alertList:
                  type: array
                  description: 'alertList'
                  items:
                    type: object
    startDiscoveryRq:
      properties:
        groupId:
          type: string
          description: 'groupId '
        agentId:
          type: string
          description: 'agentId'
        requestOwnerId:
          type: string
          description: '
            Request Owner ID.
            The value to be specified for userId when sending SignalR messages.<br>
            ●Check content
              - A null or empty string is an error.'
    startDiscoveryRes:
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        timeout:
          type: number
          description: 'timeout in milliseconds'
    startQuickDeviceDiscoveryRq:
      properties:
        groupId:
          type: string
          description: 'groupId '
        discoveryCondition:
          type: object
          description: 'discoveryCondition object'
          properties:
            useFlag:
              type: boolean
              description: 'useFlag '
            conditionId:
              type: string
              description: 'conditionId '
        ipAddress:
          type: object
          description: 'ipAddress object'
          properties:
            useFlag:
              type: boolean
              description: 'useFlag '
            ipAddresses:
              type: string
              description: 'ipAddresses.This field can contains, specificip,iprange,broadcastId with comma as delimiter'
        snmpCredential:
          type: object
          description: 'snmpCredential condition object'
          properties:
                    snmpV1:
                      type: object
                      description: 'snmpV1'
                      properties:
                          getcommunity:
                            type: string
                            description: 'snmpV1'
                          useFlag:
                            type: boolean
                            description: "useflag"
                    snmpV3:
                      type: object
                      description: 'snmpV3'
                      properties:
                          contextName:
                            type: string
                            description: 'contextName'
                          userName:
                            type: string
                            description: 'userName'
                          securityAuthKey:
                            type: string
                            description: "securityAuthKey"
                          securityAuthType:
                            type: string
                            description: "securityAuthType"
                          securityPrivKey:
                            type: string
                            description: "securityPrivKey"
                          securityPrivType:
                            type: string
                            description: "securityPrivType"
                          securityAuthChgFlag:
                            type: boolean
                            description: "securityAuthRawFlag"
                          securityPrivChgFlag:
                            type: boolean
                            description: "securityPrivRawFlag"
                          useFlag:
                            type: boolean
                            description: "useflag"
    startQuickDeviceDiscoveryRes:
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        timeout:
          type: number
          description: 'timeout in milliseconds'
    startRegisterDeviceRq:
      properties:
        groupId:
          type: string
          description: groupId
        isExclude:
          type: boolean
          description: 'isExclude If True:DeviceIds are non-selected device.False:DeviceIds are selected device'
        deviceIds:
          type: array
          items:
            type: string
          description: "List of deviceIds "
    startRegisterDeviceRes:
      type: object
      description: 'startRegisterDevice response parameter'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        requestId:
          type: string
          description: "requestId"
    startStatusUpdateRq:
      type: object
      properties:
        groupId:
          type: string
          description: "groupId"
        deviceIds:
          type: array
          description: '
            Target deviceId list <br>
            ●Check content
              - null,  Empty list is allowed'
          items:
            type: string
            description: '
              Target deviceId <br>
              ●Check content
                - Error for null, null character (i.e. empty string)'
        category:
          type: string
          description:
            Category
              - Category List
                <table border="1">
                  <tr><th>Category</th><th>Retrieved Items</th><th>sms property</th></tr>
                  <tr><td>status</td><td>Status Set<td>device/statusset</td></tr>
                  <tr><td>status</td><td>service code list<td>device/serviceCodeList</td></tr>
                  <tr><td>status</td><td>Maintenance code list<td>device/maintenanceCodeList</td></tr>
                  <tr><td>status</td><td>Alert List<td>device/alertList</td></tr>
                  <tr><td>status</td><td>Family Name<td>device/familyName</td></tr>
                  <tr><td>status</td><td>Status raw information<td>device/statusRawValue</td></tr>
                  <tr><td>status</td><td>Interface information<td>interface</td></tr>
                  <tr><td>basic</td><td>Device(excluding the item from 'status' & 'supply' category<td>device/*</td></tr>
                  <tr><td>basic</td><td>Interface information<td>interface</td></tr>
                  <tr><td>basic</td><td>Service information<td>service</td></tr>
                  <tr><td>supply</td><td>Marker information<td>device/markerList</td></tr>
                  <tr><td>supply</td><td>Disposal Marker information<td>device/disposalMarkerList</td></tr>
                  <tr><td>supply</td><td>Input tray information<td>device/inTrayList</td></tr>
                  <tr><td>supply</td><td>Output tray information<td>device/outTrayList</td></tr>
                  <tr><td>supply</td><td>Status Raw information<td>device/statusRawValue</td></tr>
                  <tr><td>supply</td><td>Interface information<td>interface</td></tr>
                  <tr><td>counter</td><td>Counter information<td>device/counter</td></tr>
                  <tr><td>counter</td><td>Status Raw information<td>device/statusRawValue</td></tr>
                  <tr><td>counter</td><td>Interface information<td>interface</td></tr>
                  <tr><td>all</td><td>All Properties<td>device,interface,service</td></tr>
                </table>
          enum:
          - status
          - basic
          - supply
          - counter
          - all
        isExclude:
          type: boolean
          description:
            Specify deviceIds details.
              - true：deviceIds is unselected device
              - false：deviceIds is selected device

            ●Check content
              - Error for other than true/false
          enum:
            - true
            - false
      required:
        - isExclude
        - category
        - groupId
    startStatusUpdateRes:
      type: object
      description: 'startStatusUpdateRes response parameter.'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        targetDeviceIds:
          type: array
          description:
            Execution target deviceId list
          items:
            type: string
            description:
              Execution target deviceId
    getDeviceCountRq:
      type: object
      properties:
        groupId:
          type: string
          description: "groupId"
        attribute:
          type: string
          description: "attribute"
          enum:
            - new
            - managed
            - trash
        totalFlag:
          type: boolean
          description: "totalFlag"
        errorFlag:
          type: boolean
          description: "errorFlag"
        warningFlag:
          type: boolean
          description: "warningFlag"
        noResponseFlag:
          type: boolean
          description: "noResponsFlag"
        normalFlag:
          type: boolean
          description: "normalFlag"
        printerErrorFlag:
          type: boolean
          description: "printerErrorFlag"
        paperNotAvailableFlag:
          type: boolean
          description: "paperNotAtonerNotAvailableFlag"
        tonerLowFlag:
          type: boolean
          description: "tonerLowFlag"
        tonerNotAvailableFlag:
          type: boolean
          description: "tonerNotAvailableFlag"
        nearOverduePreventMaintenanceFlag:
          type: boolean
          description: "nearOverduePreventMaintenanceFlag"
        overduePreventMaintenanceFlag:
          type: boolean
          description: "overduePreventMaintenanceFlag"
        paperJamFlag:
          type: boolean
          description: "paperJamFlag"
      required:
        - attribute
        - groupId
    getDeviceCountRes:
      type: object
      description: 'Retrieves device count for specific group.'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        totalFlag:
          type: boolean
          description: 'Returns totalFlag'
        totalCount:
          type: number
          description: 'Returns totalCount'
        errorFlag:
          type: boolean
          description: 'Returns errorFlag'
        errorCount:
          type: number
          description: 'Returns errorCount'
        warningFlag:
          type: boolean
          description: 'Returns warningFlag'
        warningCount:
          type: number
          description: 'Returns warningCount'
        noResponseFlag:
          type: boolean
          description: 'Returns noResponseFlag'
        noResponseCount:
          type: number
          description: 'Returns noResponseCount'
        normalFlag:
          type: boolean
          description: 'Returns normalFlag'
        normalCount:
          type: number
          description: 'Returns normalCount'
        printerErrorFlag:
          type: boolean
          description: 'Returns printerErrorFlag'
        printerErrorCount:
          type: number
          description: 'Returns printerErrorCount'
        paperNotAvailableFlag:
          type: boolean
          description: 'Returns paperNotAvailableFlag'
        paperNotAvailableCount:
          type: number
          description: 'Returns paperNotAvailableCount'
        tonerLowFlag:
          type: boolean
          description: 'Returns tonerLowFlag'
        tonerLowCount:
          type: number
          description: 'Returns tonerLowCount'
        tonerNotAvailableFlag:
          type: boolean
          description: 'Returns tonerNotAvailableFlag'
        tonerNotAvailableCount:
          type: number
          description: 'Returns tonerNotAvailableCount'
        nearOverduePreventMaintenanceFlag:
          type: boolean
          description: 'Returns nearOverduePreventMaintenanceFlag'
        nearOverduePreventMaintenanceCount:
          type: number
          description: 'Returns nearOverduePreventMaintenanceCount'
        overduePreventMaintenanceFlag:
          type: boolean
          description: 'Returns overduePreventMaintenanceFlag'
        overduePreventMaintenanceCount:
          type: number
          description: 'Returns overduePreventMaintenanceCount'
        paperJamFlag:
          type: boolean
          description: 'Returns paperJamFlag'
        paperJamCount:
          type: number
          description: 'Returns paperJamCount'
    getDeviceStatusCountRes:
      type: object
      description: 'Retrieves device status count for specific group.'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        mfpStatus:
          type: object
          properties:
            deviceStatus:
              type: object
              properties:
                totalErrors:
                  type: integer
                  description: |
                    totalErrors: * Count devices having any status of 
                    - printerError,
                    - accountLimit,
                    - overduePreventMaintenance,
                    - paperJam,
                    - markerSupplyMissing,
                    - tonerEmpty,
                    - coverOpen,
                    - paperEmpty,
                    - specifiedInputTrayEmpty,
                    - specifiedInputTrayMissing,
                    - allOutputTrayFull,
                    - specifiedOutputTrayMissing,
                    - Unknown
                newErrors:
                  type: integer
                  description: "newErrors"    
                totalWarnings:
                  type: integer
                  description: |
                    totalWarnings: * Count of devices having any status of 
                    - printerWarning,
                    - tonerLow,
                    - paperLow,
                    - inputTrayMissing,
                    - outputTrayFull,
                    - outputTrayNearFull,
                    - outputTrayMissing,
                    - stackerNotInstalled,
                    - nearOverduePreventMaintenance
                newWarnings:
                  type: integer
                  description: "newWarnings"    
                normal:
                  type: integer
                  description: |
                    normal: * Count of devices having any status of 
                    - standby,
                    - warmUp,
                    - printing,
                    - online
            communicationStatus:
              type: object
              properties:
                totalErrors:
                  type: integer
                  description: |
                    Count of devices having
                    - Communication Error or 
                    - Offline status'
                newErrors:
                  type: integer
                  description: "newErrors"
                normal:
                  type: integer
                  description: 'normal- Count of devices other than Communication error and Offline status'
            tonerStatus:
              type: object
              properties:
                totalErrors:
                  type: integer
                  description: |
                    Count of devices having status as
                    - Toner Empty
                    - Toner not available
                newErrors:
                  type: integer
                  description: "newErrors"
                totalWarnings:
                  type: integer
                  description: 'Count of devices having Toner Low status'
                newWarnings:
                  type: integer
                  description: "newWarnings"
                normal:
                  type: integer
                  description: 'normal - Count of devices other than Toner Empty and Toner Low status'         
            deviceSecurityStatus:
              type: object
              properties:
                totalErrors:
                  type: integer
                  description: |
                    totalErrors * Count of devices having the security state of
                    - Unknown Status
                    - Noncompliant
                newErrors:
                  type: integer
                  description: "newErrors"
                totalWarnings:
                  type: integer
                  description: |
                    totalWarnings * Count of devices having the security state of
                    - Policy Not Applied
                newWarnings:
                  type: integer
                  description: "newWarnings"
                normal:
                  type: integer
                  description: |
                    normal * Count of devices having the security state of
                    - Compliant        
        displayStatus:
          type: object
          properties:
            deviceStatus:
              type: object
              properties:
                totalErrors:
                  type: integer
                  description: |
                    totalErrors: * Count devices having the deviceStatus of
                      - Code: AAAA-BBCCDD-EE-FGGG 
                        * "AAAA" of hardwareStatus is anyone not "0"
                newErrors:
                  type: integer
                  description: "newErrors"
                totalWarnings:
                  type: integer
                  description: |
                    totalWarnings: * Count of devices having the  deviceStatus of 
                    - ERR
                    - UNSELECTED
                    - UNKNOWN
                newWarnings:
                  type: integer
                  description: "newWarnings"    
                normal:
                  type: integer
                  description: |
                    normal: * Count of devices having the deviceStatus of 
                    - ALL "0" or "AAAA" is all "0" and "BBCCDD-EE-FGGG" is anyone not "0"
                    - Code: 0000-BBCCDD-EE-FGGG
                communicationStatus:
                  type: integer
                  description: |
                    communicationStatus: * Count of devices having the error code other than '0000'
          
    getDeviceListBystatusRes:
      type: object
      description: 'getDeviceList response parameter'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        statusDeviceList:
          type: array
          description: 'MFP/Printers device list'
          items:
            type: object
            properties:
                _id:
                  type: string
                  description: 'deviceId'
                statusCode:
                  type: integer
                  description: ' Status digitalized'
                isNew:
                  type: boolean
                  description: >-
                    * true: Indicates that the device status changed newly.
                    * false: Indicates the current device status.
                tonerStatus:
                  type: string
                  description: "tonerStatus"
                communicationStatus:
                  type: string
                  description: "communicationStatus"
                securityStatus:
                  type: integer
                  description: 'securityStatus'
                  enum:
                    - 1 #Policy Not Applied
                    - 2 #Complying Policy
                    - 3 #Unknown Status
                    - 4 #Out of Policy
                tagNames:
                  type: array
                  description: "List of associated Tag Names"
                  items:
                    type: string
                    description: "Tag Name"
                deviceGeneral:
                  type: object
                  properties:
                    modelName:
                      type: string
                      description: 'Model Name<br> After registration, if the Get Info is not executed, null character'
                    friendlyName:
                      type: string
                      description: 'Name'
                    ipAddress:
                      type: string
                      description: 'ipAddress'
                    serialNumber:
                      type: string
                      description: 'Serial Number'
        statusDisplayList:
          type: array
          description: 'Display device list'
          items:
            type: object
            properties:
                _id:
                  type: string
                  description: 'deviceId'
                communicationStatus:
                  type: string
                  description: "communicationStatus"
                deviceStatus:
                  type: string
                  description: "deviceStatus"
                isNew:
                  type: boolean
                  description: >-
                    * true: Indicates that the device status changed newly.
                    * false: Indicates the current device status.
                tagNames:
                  type: array
                  description: "List of associated Tag Names"
                  items:
                    type: string
                    description: "Tag Name"
                deviceGeneral:
                  type: object
                  properties:
                    modelName:
                      type: string
                      description: 'Model Name<br> After registration, if the Get Info is not executed, null character'
                    friendlyName:
                      type: string
                      description: 'Name'
                    serialNumber:
                      type: string
                      description: 'Serial Number'
                    ipAddress:
                      type: string
                      description: 'ipAddress'
    registerDeviceRq:
      type: object
      properties:
        agentId:
          type: string
          description:
            agentId of target agent <br>
            ●Check content
              - A null or empty string is an error.
        registerDeviceList:
          type: array
          items:
            type: object
            properties:
              modelName:
                type: string
                description:
                  Model Name <br>
                  ●Check content
                    - A null or empty string is an error.
                    - Error for other than below characters
                      + Printable ascii characters.
              serialNumber:
                type: string
                description:
                  Serial number <br>
                  ●Check content
                    - A null or empty string is an error.
                    - Error for other than below characters
                      + Printable ascii characters.
              ipAddress:
                type: string
                description:
                  IP Address <br>
                  ●Check content
                    - A null or empty string is an error.
                    - Error for other than below characters
                      + Uppercase Alphabet (“A” to “Z”)
                      + Lowercase Alphabet (“a” to “z”)
                      + Number (“0” to “9”)
                      + Hyphen ("-")
                      + Dot Character (”.”)
              macAddress:
                type: string
                description:
                  MAC Address<br>
                  ●Check content
                    - A null or empty string is an error.
                    - Error for other than below characters
                      + Uppercase Alphabet (“A” to “Z”)
                      + Lowercase Alphabet (“a” to “z”)
                      + Number (“0” to “9”)
                      + Hyphen ("-")
              friendlyName:
                type: string
                description:
                  Printer Name <br>
                  ●Check content
                    - Empty string is allowed
                    - Error for null
                    - Printable characters including multi-byte characters　can be specified
              familyName:
                type: string
                description:
                  Family Name(Family ID)<br>
                  ●Check content
                    - A null or empty string is an error.
                    - Error for other than below characters
                      + Printable ascii characters.
              snmpSetting:
                type: object
                description: 'SNMP Credential & Setting'
                properties:
                  snmpVersion:
                    type: string
                    description:
                      SNMP Version<br>
                        - SNMP version list.
                          <table border="1">
                            <tr><th>Version</th><th>Description</th></tr>
                            <tr><td>v1</td><td>SNMPv1</td></tr>
                            <tr><td>v3</td><td>SNMPv3</td></tr>
                          </table>

                      ●Check content
                        - Any string other than the specified string is an error.
                    enum:
                      - v1
                      - v3
                  getCommunityString:
                    type: string
                    description:
                      Community String.<br>(Required if snmpVersion is v1.)<br>
                      ●Check content
                        - A null or empty string is an error.
                        - Error for other than below characters
                          + 1-byte alphanumeric character
                  contextName:
                    type: string
                    description:
                      Context Name.<br>(Required if snmpVersion is v3.)<br>
                      ●Check content
                        - Empty string is allowed
                        - Error for null
                        - Error for other than below characters
                          + 1-byte alphanumeric character
                  userName:
                    type: string
                    description:
                      User Name.<br>(Required if snmpVersion is v3.)<br>
                      ●Check content
                        - A null or empty string is an error.
                        - Error for other than below characters
                          + 1-byte alphanumeric symbol
                  securityAuthType:
                    type: string
                    description:
                      Seciruty Authentication Type.<br>(Required if snmpVersion is v3.)
                        - Seciruty Authentication Type list.
                          <table border="1">
                            <tr><th>Type</th><th>Description</th></tr>
                            <tr><td>MD5</td><td>MD5</td></tr>
                            <tr><td>SHA-1</td><td>SHA-1</td></tr>
                          </table>
                      ●Check content
                        - Any string other than the specified string is an error.
                    enum:
                      - MD5
                      - SHA-1
                  securityAuthKey:
                    type: string
                    description:
                      Seciruty Authentication Key.<br>(Required if snmpVersion is v3.)<br>
                      ●Check content
                        - A null or empty string is an error.
                        - Error for other than below characters
                          + 1-byte alphanumeric symbol
                  securityPrivType:
                    type: string
                    description:
                      Seciruty Privacy Type.<br>(Required if snmpVersion is v3.)
                        - Seciruty Privacy Type list.
                          <table border="1">
                            <tr><th>Type</th><th>Description</th></tr>
                            <tr><td>DES</td><td>DES</td></tr>
                            <tr><td>usmAesCfb128Protocol</td><td>AES</td></tr>
                          </table>
                      ●Check content
                        - Any string other than the specified string is an error.
                    enum:
                      - DES
                      - usmAesCfb128Protocol
                  securityPrivKey:
                    type: string
                    description:
                      Seciruty Privacy Key.<br>(Required if snmpVersion is v3.)<br>
                      ●Check content
                        - A null or empty string is an error.
                        - Error for other than below characters
                          + 1-byte alphanumeric symbol
                required:
                  - snmpVersion
              retry:
                type: integer
                description:
                  SNMP Retry count.<br>
                  ●Check content
                    - Any non-numeric value is an error.
              timeout:
                type: integer
                format: int64
                description:
                  SNMP Timeout.<br>
                  ●Check content
                    - Any non-numeric value is an error.
            required:
              - modelName
              - serialNumber
              - friendlyName
              - familyName
              - ipAddress
              - snmpSetting
              - retry
              - timeout
      required:
        - agentId
        - registerDeviceList
    registerDeviceRes:
      type: object
      properties:
        commoon:
          $ref: '#/components/schemas/commonRsp'
    remoteOperationPanelUrlRq:
      type: object
      description: 'remoteOperationPanelUrl request parameter.'
      properties:
        deviceId:
          type: string
          description:
            deviceId of target MFP device.<br>
            ●Check content
              - A null or empty string is an error.
      required:
        - deviceId
    remoteOperationPanelUrlRes:
      type: object
      description: 'remoteOperationPanelUrl response parameter.'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        url:
          type: string
          description:
            URL to access the remote operation panel of the MFP.
    createGrpRes:
      type: object
      description: 'createGroup response parameter'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        groupId:
          type: string
          description: 'Returns groupId'
    editGrpRes:
      type: object
      description: 'getDeviceList response parameter'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
    getGrpListRes:
      type: object
      description: 'getDeviceList response parameter'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        groupId:
          type: string
          description: 'groupId'
        startIndex:
          type: integer
          description: 'start index'
        count:
          type: integer
          description: 'number of records requested '
        resultCount:
          type: integer
          description: 'number of records received'
        totalFlag:
          type: boolean
          description: 'To Render total groups '
        totalCount:
          type: integer
          description: 'total records '
        resultData:
          type: array
          description: 'resultdata'
          items:
            type: object
            properties:
              groupId:
                type: string
                description: 'group id'
              groupType:
                type: string
                description: 'group type'
              groupName:
                type: string
                description: 'group name'
              #groupPath:
              #  type: string
              #  description: 'group path'
              parentGroupId:
                type: string
                description: 'group id of parentGroupId'
              #autoRegister:
              #  type: boolean
              #  description: 'auto registration '
              description:
                type: string
                description: 'description of group'
              upperGroupList:
                type: array
                description: 'upper group list'
                items:
                  type: object
                  properties:
                    groupId:
                      type: integer
                      description: 'integer'
    getGrpTreeRes:
      type: object
      description: 'createGroup response parameter'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        startIndex:
          type: integer
          description: 'start index'
        count:
          type: integer
          description: 'number of records requested '
        resultCount:
          type: integer
          description: 'number of records received'
        groupId:
          type: string
          description: 'groupId'
        totalCount:
          type: integer
          description: 'total records '
        groupList:
          type: array
          description: 'groupList'
          items:
            type: object
            properties:
              groupId:
                type: string
                description: 'group id'
              groupName:
                type: string
                description: 'group name'
              parentGroupId:
                type: string
                description: 'group id of parentGroupId'
              description:
                type: string
                description: 'group description'
    getGroupInfoRes:
      type: object
      description: 'Returns groupId for specified groupName/TenantName'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        groupId:
          type: string
          description: 'groupId'
    loginRes:
      type: object
      description: 'Application login response with Permission List'
      properties:
        status:
          type: string
          description: 'Login status'
          enum:
          - Success
          - Failure
        token:
          type: string
          description: 'Valid JWT token with PermissionList'
          example: eyJraWQiOiJSRmRTNE5uOHp0N1VGNFNTZ3VIZVdPYjlLN0JobTA2ODdBVGJDcjJwNWxNPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiJhNDJhODgxMy1mYzg5LTRlYjctOTY5Yi04NGI2Zjc2ZTFjOGQiLCJjb2duaXRvOmdyb3VwcyI6WyIzOWRlZjk4My0wZDgxLTRiYzUtODEzYi1lN2NmNGJhNGJkZTk6c2lyZWVzaGFjaGl0dGk5N0BnbWFpbC5jb206YjlkZGRjZDItZmM4OC00NjBkLWE5NWItMmE1OGRlZTI3ZTc2Il0sImV2ZW50X2lkIjoiNDFkMjc5YzUtYzRkOC00YWZjLWJhOGEtYzM4YTFkYjdkNjhlIiwidG9rZW5fdXNlIjoiYWNjZXNzIiwic2NvcGUiOiJhd3MuY29nbml0by5zaWduaW4udXNlci5hZG1pbiIsImF1dGhfdGltZSI6MTU5MTExODY3NCwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnVzLWVhc3QtMS5hbWF6b25hd3MuY29tXC91cy1lYXN0LTFfMXg4V3lOSWZWIiwiZXhwIjoxNTkxMTIyMjc0LCJpYXQiOjE1OTExMTg2NzQsImp0aSI6ImRmZTQxMmNlLThlYTUtNGI0Mi1hN2EwLWJiM2FmOTAyNjRjYSIsImNsaWVudF9pZCI6IjI5b3Nzbmc4aG02ZDUycmk3NW1pMzQwdTZoIiwidXNlcm5hbWUiOiJhNDJhODgxMy1mYzg5LTRlYjctOTY5Yi04NGI2Zjc2ZTFjOGQifQ.ezH6XfqinmAe9QSinBxNWcQBRGkKGh4zYPQ5iLnP5Rfn_hgSpAYuY3JXHXn3Igj_e7Pof8ESgn1cgV-iC-yWwCsHx7vnGfi7DCqsq4OrH0SZVybuPOYlvhis0y90miCQrVqmAsBeqypcGlRiCthdz4xMeKDP3HlyPBgysmtr3TMzaFhNkgt7Pyy839hlchmoAkvl7ognRuIhHUz9pQcxN1bL_b_XHjJeBKbEbfu5KTYq8gKUAg98TJIMovepIRMWN4J1GxOYHckXJaN34ylSAdAoI89lK1dsRvVLPrrzppPbfRHQR1socduoRs1yidJj3pvj9YzMNSqwYP2OyF55FA
        refreshToken:
          type: string
          description: 'refresh token'
          example: eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.ay_MsAbrNmfwFOvS_Hr13ZDzBpU0HDbEk42VM5SwJZE5ehYS3V5QAgxTzixCunCCf5Hw4q9tDopOMoFTTR_dhG_d_JWGzeJrO2H1gcBtoa_6N3ZC7BJDWYYcHdlkR55ujCZnyI3V90-OiQRllX0pRpsiWV-rQQ4Sl1WEDfDmz09bjxDBWJdbJkCGqzpf1FEsD-xLEP7m4M4jssLW0MhYH2P3D7jmZNCf7GHeXo5Bc8k2oeC6BnEHkJSNl9sbNrGPXdWJoe6Oe5yqzpiYf6bMJ6AqH-PhLHOkC9w87gc0aQSNJALOM8fWuz-de16CSKlQB9S7TqTS0RbfcGubz_qhgA.2XO6iyR5X9r7zQTt.Y3JRQQDvlhRkj6rbDMlpPSaSTa7oKfjCRxBTxNXeCMzwAzHLF7yHlJphhRag_22KoVMSHBDWbG09BTvAKvGgED7ttrRJVC4dOr7en-VMQjJIxjl7hx3DPnJx4o-un48nvKAQyqIokrCJF_vCeepMralS01UUzipM3ZZQSHxr7eNlyFs9VvPRabpNgbRyuQoXY8xAXC097GZr_4O5nUa164nDiyDfMnWqO-lxB85v5bvlyEWxz5HPr_VJkeOyB7dM5r3Uj-_cMcYAoUhVYIcCkRdnypo6oz-JmJekViGKKDmsKLZRBXdyZBTNTm5G5CUA_EMIa6KPG-l1XmrF9ZgMS5OLLCACKlrtrndo9n9AfFBcBlnX87ztKsKu_jNhwnEr5Q1M_OTpQyf3NFLGlyeq-TDOLrVFloN4RJ89iF-0cGPrO3kKJq_krkn0nN1Mpws8ysbxPmLMdxbmDVuFwjUHFABohfIB0V_pEB5VtqYRnA2DrV5r02J9eqlpw6UPIrt2WcFpRcMLwMZMiRFLkWbtIVZu_7zXSHBNpZQp8xYogWWUGJ7Re_8ZO-ljmBuNuolnhVwXQUlaTF7dzZdzDJ3hg5l3zjroCbvb9oSpY1IA1t-4GoPcjAsOF8sqo3jpInGQfQwXReHXcEq7bI4fBgNz0Y--JNFEmSKDgkpg1CoC9ovrg5hg8Vzr0JavAJInLYVzmMjHNv5siFRUfDHGcA1nWVFT_GgvvUVc6dOzzmrfO7J0rizkQhUAx6u8bARYYB9I8MiHHYcrS3VV_UYHbg7bHj7CMU5cZgk6q6na8RQYrejhBixWoKpxO0WbIXTvNBflpTssTHSfRh519xLfCUqpL1Qk8B1aK-GnvMlwjwbz8wogSU89TeQ95UdBN0L230h-r0xnR87dAt3xllfJufUCfzovgKghM-MaQcBO0jNQgVoc8NYkg6g_eyEjc1wYNkaSHrCwpF-NcSgJJSRplZUyxkuX-OPGR7s1CFvNTU2AXY7Qx4S8-ezksRRv-oa5T_ym8-9fxTjU_7z9Iw6faMdUgbb5Piosg2FlgOJma96OVz6AS_1nyI0Hz5UkWMv9yyz1OyyZrlSO1dDV06KwaMt0M3uidQRVGNNk2O8Gu3v_KphnQI9PoEVMde1Q1vA2d2Dw6ISm3AGnxCJn9M6EjbIwRQFvFXRvntEYTT-oS-GI-xHz_ZlwvyK6e6qvWD2-zhiO_i5CPtrXupotYKynL8xuy-kiVGgb8wNrjVox0trF2eA8bvSWvQtD_HUZ7v9y5_W0RxXBYAtXQnEesL4pGmVJtez4VHFi0Cy2ss5nyv9NX8R6bYTXshVWSap4SA.LnBjsR3ZPaTBfvDASHe_oA
        expiryTime:
          type: integer
          description: 'Token exipry time '
          example: 158997596
    #loginiotRes
    loginiotRes:
      type: object
      description: 'get sessiontoken'
      properties:
        sessionToken:
          type: string
          description: 'sessiontoken'
    # logoutres
    logoutRes:
      type: object
      description: 'getDeviceList response parameter.'
      properties:
        status:
          type: string
          description: 'application logout response'
          enum:
            - success
            - failure
    getPermissionListRes:
      type: object
      description: 'getPermissionList response parameter.'
      properties:
        permissionList:
          type: array
          description: 'permissionList'
          items:
            type: object
            properties:
              permissionName:
                type: string
                description: 'permissionName'
                enum:
                  #- cloudService
                  - group
                  - system
                  - fileDistribution
                  - advancedFeatureBasic
                  - deviceCloning
                  - powerManagement
                  - service
                  - agentInstall
                  - fieldSupportSystem
                  - firmwareUpdate
                  #- domain
                  - account
                  - accountofownDomain #default but invisible
                  - browse #default but invisible
              attribute:
                type: string
                description: 'visible'
                enum:
                  - visible
                  - invisible
    createFilterReq:
      type: object
      properties:
        filterName:
          type: string
          description:
            Unique Filter name <br>
            ●Check content
              - Error for null, null character (i.e. empty string)
              - Error for only space
        blockOperation:
          type: string
          description:
            Block Conditions <br>
            Specifiable characters are and, or<br>
            ●Check content
              - Error for other than specified strings
          enum:
            - and
            - or
        blockConditionList:
          type: array
          items:
            type: object
            properties:
              detailOperation:
                type: string
                description:
                  Detailed Condition section <br>
                  Specifiable characters are and, or <br>
                  ●Check content
                    Error for other than specified string
                enum:
                  - and
                  - or
              detailConditionList:
                type: array
                items:
                  type: object
                  properties:
                    column:
                      type: string
                      description:
                        Column Name (Key) <br>
                        For the specifiable columns kindly refer
                        SRDM MIB Device List Filter.xlsx<br>
                        ●Check content
                          - Error for other than specifiable characters
                    operationId:
                      type: string
                      description:
                        Conditions section (Operator) <br>
                        For the specifiable operationId's kindly refer
                        SRDM MIB Device List Filter.xlsx<br>
                        ●Check content
                          - Error for other than specifiable characters
                    valueString:
                      type: string
                      description:
                        Input value
                          - When Condition section is "isNull", “isNotNull”, specify null.
                          - When Condition section is “between”, join 2 input values with “/”
                        ●Check content
                          - Error for null
                  required:
                    - column
                    - operationId
                    - valueString
            required:
              - detailOperation
              - detailConditionList
      required:
        - filterName
        - blockOperation
        - blockConditionList
    setFilterReq:
      type: object
      properties:
        filterId:
          type: string
          description:
            User Selected/Target filterId<br>
            ●Check content
              - Error for null, null character (i.e. empty string)
        filterName:
          type: string
          description:
            Filter name <br>
            ●Check content
              - Error for null, null character (i.e. empty string)
              - Error for only space
        blockOperation:
          type: string
          description:
            Block Conditions <br>
            Specifiable characters are and, or<br>
            ●Check content
              - Error for other than specified string
          enum:
            - and
            - or
        blockConditionList:
          type: array
          items:
            type: object
            properties:
              detailOperation:
                type: string
                description:
                  Details Condition section <br>
                  Specifiable characters are and, or <br>
                  ●Check content
                    - Error for other than specified string
                enum:
                  - and
                  - or
              detailConditionList:
                type: array
                items:
                  type: object
                  properties:
                    column:
                      type: string
                      description:
                        Column Name (Key) <br>
                        For the specifiable Columns kindly refer
                        SRDM MIB Device List Filter.xlsx<br>
                        ●Check content
                          - Error for other than specifiable characters
                    operationId:
                      type: string
                      description:
                        Conditions section (Operator) <br>
                        For the specifiable characters, refer
                        SRDM MIB Device List Filter.xlsx<br>
                        ●Check content
                          - Error for other than specifiable characters
                    valueString:
                      type: string
                      description:
                        Input value
                          - When Condition section is "isNull", “isNotNull”, specify null.
                          - When Condition section is “between”, join 2 input values with “/”

                        ●Check content
                          - Error for null
                  required:
                    - column
                    - operationId
                    - valueString
            required:
              - detailOperation
              - detailConditionList
      required:
        - filterId
        - filterName
        - blockOperation
        - blockConditionList
    deleteFilterReq:
      type: object
      properties:
        filterId:
          type: string
          description:
            Target filterId<br>
            ●Check content
              - Error for null, null character (i.e. empty string)
      required:
        - filterId
    getFilterReq:
      type: object
    createFilterRsp:
      type: object
      description: 'createFilter response parameter.'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        filterId:
          type: string
          description: 'created filterId '
    setFilterRsp:
      type: object
      description: 'setFilter response parameter.'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
    deleteFilterRsp:
      type: object
      description: 'deleteFilter response parameter.'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
    getFilterRsp:
      type: object
      description: 'getFilter response parameter.'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        filterList:
          type: array
          items:
            type: object
            properties:
              filter:
                type: object
                properties:
                  filterId:
                    type: string
                    description: 'filterId'
                  filterType:
                    type: string
                    description: '[TBD ]Filter Type <br>system： System defined filter／"userDefined"： User defined'
                  filterName:
                    type: string
                    description: 'Filter name'
                  blockOperation:
                    type: string
                    description: 'Block Conditions section <br> "and"  or "or"'
                  blockConditionList:
                    type: array
                    items:
                      type: object
                      properties:
                        detailOperation:
                          type: string
                          description: 'Detailed Conditions section <br> "and" or "or"'
                        detailConditionList:
                          type: array
                          items:
                            type: object
                            properties:
                              column:
                                type: string
                                description: 'Column Name (Key)'
                              operation:
                                type: string
                                description: 'Conditions section (Operator)'
                              valueString:
                                type: string
                                description: 'Value <br>When Condition section is "isNull", "isNotNull” , null <br> when Condition section is “between”, 2  values are joined with “/”'
    createAgentRq:
      type: object
      description: 'create agent for specfic group (Default discovery condition will be created by backend services'
      properties:
        groupId:
          type: string
          description: Specific groupId to retrive the agent list
        agentName:
          type: string
          description: Specify agentName
        iotAccessSecret:
          type: string
          description: Specify the iotAccessSecret key
        agentId:
          type: string
          description: Specify the agentId
        deviceType:
          type: string
          #example: agent| agentSNMP | agentLog| agentTCO| agentFSS
          description: Specify agentType
          enum:
            - agentSNMP
            - agentLog
            - agentTCO
            - agentFSS
            - agent
        parentAgentId:
          type: string
          description: ParentAgentId is ' ' for standalone agents
        snmpSetting:
          type: object
          description: snmpSetting
          properties:
            v1Retry:
              type: number
              description: v1Retry
            v1Timeout:
              type: number
              description: v1Timeout
            v3Timeout:
              type: number
              description: v3Timeout
            v3Retry:
              type: number
              description: v3Retry
        alwaysScan:
          type: boolean
          description: Required only for MIB and MICAS
        triggerFromLauncher:
          type: boolean
          description: Not required for standalone agents
    createAgentRes:
      type: object
      description: 'Create Agent  response parameter.'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
          description: Agent creation status
          enum:
            - true
            - false
        agentId:
          type: string
          description: Agent Id(If agentId already exists,Backed will return new Id )
    editAgentRq:
      type: object
      description: 'edit agent response parameter.'
      properties:
        #groupId:
          #type: string
          #description: Specific groupId
        agentName:
          type: string
          description: Specify agentName
        iotAccessSecret:
          type: string
          description: Specify the iotAccessSecret key
        agentId:
          type: string
          description: Specify the agentId
        parentAgentId:
          type: string
          description: ParentAgentId is ' ' for standalone agents
        snmpSetting:
          type: object
          description: snmpSetting
          properties:
            v1Retry:
              type: number
              description: v1Retry
            v1Timeout:
              type: number
              description: v1Timeout
            v3Timeout:
              type: number
              description: v3Timeout
            v3Retry:
              type: number
              description: v3Retry
        alwaysScan:
          type: boolean
          description: Required only for MIB and MICAS
        triggerFromLauncher:
          type: boolean
          description: Not required for standalone agents
    editAgentRes:
      type: object
      description: 'Edit Agent  response parameter.'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
          description: Agent Edit status
          enum:
            - true
            - false
    deleteAgentRq:
      type: object
      description: 'delete agent response parameter.'
      properties:
        #groupId:
          #type: string
          #description: Specific groupId
        agentIds:
          type: string
          example:
            - 92fba2b0-5575-41d8-8f4e-3f96d4dfe14e
            - fba2b0-5575-41d8-8f4e-3f96d4dfe14e92
          description: Specify agentName
    deleteAgentRes:
      type: object
      description: 'delete Agent  response parameter.'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
          description: Agent delete status
          enum:
            - true
            - false
    getAgentRq:
      type: object
      description: 'get  agent response parameter.'
      properties:
        #groupId:
          #type: string
          #description: Specific groupId
        agentId:
          type: string
          description: Specify agentId
    getAgentRes:
      type: object
      description: 'delete Agent  response parameter.'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        groupId:
          type: string
          description: Specific groupId to retrive the agent list
        agentName:
          type: string
          description: Specify agentName
        iotAccessSecret:
          type: string
          description: Specify the iotAccessSecret key
        agentId:
          type: string
          description: Specify the agentId
        agentType:
          type: string
          #example: agent |agentSNMP | agentLog| agentTCO| agentFSS
          description: Specify agentType
          enum:
            - agentSNMP
            - agentLog
            - agentTCO
            - agentFSS
            - agent
        parentAgentId:
          type: string
          description: ParentAgentId is ' ' for standalone agents
        snmpSetting:
          type: object
          description: snmpSetting
          properties:
            v1Retry:
              type: number
              description: v1Retry
            v1Timeout:
              type: number
              description: v1Timeout
            v3Timeout:
              type: number
              description: v3Timeout
            v3Retry:
              type: number
              description: v3Retry
        alwaysScan:
          type: boolean
          description: Required only for MIB and MICAS
        triggerFromLauncher:
          type: boolean
          description: Not required for standalone agents
    getAgentListRq:
      type: object
      description: 'get  agent List response parameter.'
      properties:
        #groupId:
          #type: string
          #description: Specific groupId
        groupId:
          type: string
          description: Specify groupId
    getAgentListRes:
      type: object
      description: ' Agent List  response parameter.'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        agentList:
          type: array
          description: List of agents under a specific group
          items:
            type: object
            properties:
              groupId:
                type: string
                description: Specific groupId to retrive the agent list
              agentName:
                type: string
                description: Specify agentName
              iotAccessSecret:
                type: string
                description: Specify the iotAccessSecret key
              agentId:
                type: string
                description: Specify the agentId
              agentType:
                type: string
                #example: agent |agentSNMP | agentLog| agentTCO| agentFSS
                description: Specify agentType
                enum:
                  - agentSNMP
                  - agentLog
                  - agentTCO
                  - agentFSS
                  - agent
              parentAgentId:
                type: string
                description: ParentAgentId is ' ' for standalone agents
              alwaysScan:
                type: boolean
                description: Required only for MIB and MICAS
              triggerFromLauncher:
                type: boolean
                description: Not required for standalone agents
    #getdiscoverySettingsRq:
    #  type: object
    #  description: 'Gets the discovery settings for a specific agent'
    #  properties:
    #    agentId:
    #     type: string
    #     description: Specify the agentId
    getDiscoverySettingListRes:
      type: object
      description: 'Returns the Discovery Setting list'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        #agentId:
        # type: string
        # description: agentId
        #snmpSetting:
        # type: object
        # description: 'snmpSetting'
        # properties:
        #  retry:
        #   type: number
        #   description: 'retry'
        #  timeout:
        #   type: number
        #   description: 'timeout'
        discoveryConditionList:
          type: array
          items:
            type: object
            properties:
              conditionId:
                type: string
                description: 'conditionId'
              localBroadcast:
                type: boolean
                description:  'localBroadcast'
              snmpSetting:
                type: object
                description: 'snmpSetting'
                properties:
                  retry:
                    type: number
                    description: 'retry'
                  timeout:
                    type: number
                    description: 'timeout'
              specificIp:
                type: object
                description: 'specificIp'
                properties:
                  useFlag:
                    type: boolean
                    description: 'useFlag'
                  ipList:
                    type: array
                    description: 'ipList'
                    items:
                      type: string
              ipRange:
                type: object
                description: 'snmpSetting'
                properties:
                  useFlag:
                    type: boolean
                    description: 'useflag'
                  ipList:
                    type: array
                    items:
                      type: object
                      properties:
                        startIp:
                          type: string
                          description: 'startip'
                        endIp:
                          type: string
                          description: 'endip'
              snmpCredential:
                type: object
                description: 'snmpCredential condition object'
                properties:
                  conditionName:
                    type: string
                    description: 'conditionName'
        ignoreIp:
          type: object
          description: 'ignoreIp'
          properties:
            useFlag:
              type: boolean
              description: 'useFlag'
            ipList:
              type: array
              description: 'ipList'
              items:
                type: string
    setDiscoverySettingListRq:
      type: object
      description: 'Sets the Discovery Setting list'
      properties:
        #agentId:
        # type: string
        # description: agentId
        #snmpSetting:
        #type: object
        #description: 'snmpSetting'
        #properties:
        # retry:
        #  type: number
        #  description: 'retry'
        # timeout:
        #  type: number
        #  description: 'timeout'
        ignoreIp:
          type: object
          description: 'ignoreIp'
          properties:
            useFlag:
              type: boolean
              description: 'useFlag'
            ipList:
              type: array
              description: 'ipList'
              items:
                type: string
    setDiscoverySettingListRes:
      type: object
      description: 'Sets the Discovery Setting list'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
          description: 'status'
    setdiscoverySettingsRq:
      type: object
      description: 'Sets the discovery settings for a specific agent'
      properties:
        agentId:
          type: string
          description: agentId
        snmpSetting:
          type: object
          description: snmpSetting
          properties:
            v1Retry:
              type: number
              description: v1Retry
            v1Timeout:
              type: number
              description: v1Timeout
            v3Timeout:
              type: number
              description: v3Timeout
            v3Retry:
              type: number
              description: v3Retry
            discoveryConditionList:
              type: array
              items:
                type: object
                properties:
                  conditionId:
                    type: string
                    description: Unique discoveryConditionId
                  conditionName:
                    type: string
                    description:  discoveryConditionName
                  useFlag:
                    type: boolean
                    description:  useFlag
            ignoreIp:
              type: object
              description: ignoreIp
              properties:
                useFlag:
                  type: boolean
                  description: useFlag
                ipList:
                  type: array
                  description: ipList
                  items:
                    type: object
                    properties:
                      ipAddress:
                        type: string
                        description: ipAdress
    deletediscoverySettingsRq:
      type: object
      description: 'Deletes the discovery settings for a specific agent'
      properties:
        agentId:
          type: string
          description: Specify the agentId
        conditionIds:
          type: array
          items:
            type: string
            #properties:
            #conditionId:
            #type: string
    deletediscoverySettingsRes:
      type: object
      description: 'Returns the deletediscoverySettings status as response parameter.'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
          description: status
    getdiscoveryConditionRes:
      type: object
      description: 'Returns the discovery contition like specific ip,iprange,broadcast ip as response parameter.'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        conditionId:
          type: string
          description: conditionId
        #conditionName:
          #type: string
          #description: conditionName
        specificIp:
          type: object
          description: snmpSetting
          properties:
            useFlag:
              type: boolean
              description: useflag
            ipList:
              type: array
              items:
                type: string
        ipRange:
          type: object
          description: snmpSetting
          properties:
            useFlag:
              type: boolean
              description: useflag
            ipList:
              type: array
              items:
                type: object
                properties:
                  startIp:
                    type: string
                    description: startip
                  endIp:
                    type: string
                    description: endip
        localBroadcast:
          type: boolean
          description: 'localBroadcast'
        snmpSetting:
          type: object
          description: 'snmpSetting'
          properties:
            retry:
              type: number
              description: 'retry'
            timeout:
              type: number
              description: 'timeout'
        snmpCredential:
          type: object
          description: 'snmpCondition'
          properties:
            credentialId:
              type: string
              description: 'credentialId'
            conditionName:
              type: string
              description: 'conditionName'
            snmpV1:
              type: object
              description: 'snmpV1'
              properties:
                getCommunityString:
                  type: string
                  description: 'snmpV1'
                useFlag:
                  type: boolean
                  description: "useflag"
            snmpV3:
              type: object
              description: 'snmpV3'
              properties:
                contextName:
                  type: string
                  description: 'contextName'
                userName:
                  type: string
                  description: 'userName'
                securityAuthKey:
                  type: string
                  description: "securityAuthKey"
                securityAuthType:
                  type: string
                  description: "securityAuthType"
                securityPrivKey:
                  type: string
                  description: "securityPrivKey"
                securityPrivType:
                  type: string
                  description: "securityPrivType"
                securityAuthChgFlag:
                  type: boolean
                  description: "securityAuthChgFlag"
                securityPrivChgFlag:
                  type: boolean
                  description: "securityPrivChgFlag"
                useFlag:
                    type: boolean
                    description: useFlag
    setdiscoveryConditionRq:
      type: object
      description: 'Sets the discovery settings for a specific agent'
      properties:
        specificIp:
          type: object
          description: snmpSetting
          properties:
            useFlag:
              type: boolean
              description: useflag
            ipList:
              type: array
              items:
                type: string
        ipRange:
          type: object
          description: snmpSetting
          properties:
            useFlag:
              type: boolean
              description: useflag
            ipList:
              type: array
              items:
                type: object
                properties:
                  startIp:
                    type: string
                    description: startip
                  endIp:
                    type: string
                    description: endip
        localBroadcast:
          type: boolean
          description: 'localBroadcast'
        snmpSetting:
          type: object
          description: 'snmpSetting'
          properties:
            retry:
              type: number
              description: 'retry'
            timeout:
              type: number
              description: 'timeout'
        snmpCredential:
          type: object
          description: 'snmpCondition'
          properties:
            credentialId:
              type: string
              description: 'credentialId'
            conditionName:
              type: string
              description: 'conditionName'
            snmpV1:
              type: object
              description: 'snmpV1'
              properties:
                getCommunityString:
                  type: string
                  description: 'snmpV1'
                useFlag:
                  type: boolean
                  description: "useflag"
            snmpV3:
              type: object
              description: 'snmpV3'
              properties:
                contextName:
                  type: string
                  description: 'contextName'
                userName:
                  type: string
                  description: 'userName'
                securityAuthKey:
                  type: string
                  description: "securityAuthKey"
                securityAuthType:
                  type: string
                  description: "securityAuthType"
                securityPrivKey:
                  type: string
                  description: "securityPrivKey"
                securityPrivType:
                  type: string
                  description: "securityPrivType"
                securityAuthChgFlag:
                  type: boolean
                  description: "securityAuthChgFlag"
                securityPrivChgFlag:
                  type: boolean
                  description: "securityPrivChgFlag"
                useFlag:
                  type: boolean
                  description: useFlag
    setdiscoveryConditionRes:
      type: object
      description: 'Returns the discovery settings response parameter.'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
          description: status
    creatediscoveryConditionRq:
      type: object
      description: 'Create the discovery settings for a specific agent'
      properties:
        specificIp:
          type: object
          description: snmpSetting
          properties:
            useFlag:
              type: boolean
              description: useflag
            ipList:
              type: array
              items:
                type: string
        ipRange:
          type: object
          description: snmpSetting
          properties:
            useFlag:
              type: boolean
              description: useflag
            ipList:
              type: array
              items:
                type: object
                properties:
                  startIp:
                    type: string
                    description: startip
                  endIp:
                    type: string
                    description: endip
        localBroadcast:
          type: boolean
          description: 'localBroadcast'
        snmpSetting:
          type: object
          description: 'snmpSetting'
          properties:
            retry:
              type: number
              description: 'retry'
            timeout:
              type: number
              description: 'timeout'
        snmpCredential:
          type: object
          description: 'snmpCondition'
          properties:
            conditionName:
              type: string
              description: 'conditionName'
            credentialId:
              type: string
              description: 'credentialId'
            snmpV1:
              type: object
              description: 'snmpV1'
              properties:
                getCommunityString:
                  type: string
                  description: 'snmpV1'
                useFlag:
                  type: boolean
                  description: "useflag"
            snmpV3:
              type: object
              description: 'snmpV3'
              properties:
                contextName:
                  type: string
                  description: 'contextName'
                userName:
                  type: string
                  description: 'userName'
                securityAuthKey:
                  type: string
                  description: "securityAuthKey"
                securityAuthType:
                  type: string
                  description: "securityAuthType"
                securityPrivKey:
                  type: string
                  description: "securityPrivKey"
                securityPrivType:
                  type: string
                  description: "securityPrivType"
                securityAuthChgFlag:
                  type: boolean
                  description: "securityAuthChgFlag"
                securityPrivChgFlag:
                  type: boolean
                  description: "securityPrivChgFlag"
                useFlag:
                  type: boolean
                  description: useFlag
    creatediscoveryConditionRes:
      type: object
      description: 'Returns the discovery settings response parameter.'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        conditionId:
          type: string
          description: 'conditionId'
    getSNMPConditionListRes:
      type: object
      description: 'Returns the SNMP Credential List as response parameter.'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        #groupId:
          #type: string
          #description: "groupId"
        snmpCredentialList:
          type: array
          items:
            type: object
            properties:
              credentialId:
                type: string
                description: 'credentialId'
              conditionName:
                type: string
                description: 'conditionName'
    getSNMPCredentialRes:
      type: object
      description: 'Gets SNMP Credential '
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        credentialId:
          type: string
          description: 'credentialId'
        conditionName:
          type: string
          description: 'conditionName'
        snmpV1:
          type: object
          description: 'snmpV1'
          properties:
            getCommunityString:
              type: string
              description: 'snmpV1'
            useFlag:
              type: boolean
              description: "useflag"
        snmpV3:
          type: object
          description: 'snmpV3'
          properties:
            contextName:
              type: string
              description: 'contextName'
            userName:
              type: string
              description: 'userName'
            securityAuthKey:
              type: string
              description: "securityAuthKey"
            securityAuthType:
              type: string
              description: "securityAuthType"
            securityPrivKey:
              type: string
              description: "securityPrivKey"
            securityPrivType:
              type: string
              description: "securityPrivType"
            useFlag:
              type: boolean
              description: "useflag"
    setSNMPCredentialRq:
      type: object
      description: 'Sets SNMP Credential '
      properties:
        groupId:
          type: string
          description: 'groupId'
        conditionName:
          type: string
          description: 'conditionName'
        snmpV1:
          type: object
          description: 'snmpV1'
          properties:
            getCommunityString:
              type: string
              description: 'snmpV1'
            useFlag:
              type: boolean
              description: "useflag"
        snmpV3:
          type: object
          description: 'snmpV3'
          properties:
            contextName:
              type: string
              description: 'contextName'
            userName:
              type: string
              description: 'userName'
            securityAuthKey:
              type: string
              description: "securityAuthKey"
            securityAuthKeyChangeFlag:
              type: boolean
              enum:
                - true
                - false
              description: >
                securityAuthKeyChangeFlag:
                  * 'true'  - specified securityAuthKey will be updated into DB.
                  * 'false' - securityAuthKey will NOT be updated into DB. 
            securityAuthType:
              type: string
              description: "securityAuthType"
            securityPrivKey:
              type: string
              description: "securityPrivKey"
            securityPrivKeyChangeFlag:
              type: boolean
              enum:
                - true
                - false
              description: >
                securityPrivKeyChangeFlag:
                  * 'true'  - specified securityPrivKey will be updated into DB.
                  * 'false' - securityPrivKey will NOT be updated into DB.
            securityPrivType:
              type: string
              description: "securityPrivType"
            useFlag:
              type: boolean
              description: "useflag"
    setSNMPCredentialRes:
      type: object
      description: 'Sets SNMP Credential '
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
    createSNMPCredentialRq:
      type: object
      description: 'Sets SNMP Credential '
      properties:
        groupId:
          type: string
          description:  'groupId'
        conditionName:
          type: string
          description: 'conditionName'
        snmpV1:
          type: object
          description: 'snmpV1'
          properties:
              getCommunityString:
                type: string
                description: 'snmpV1'
              useFlag:
                type: boolean
                description: "useflag"
        snmpV3:
          type: object
          description: 'snmpV3'
          properties:
            contextName:
              type: string
              description: 'contextName'
            userName:
              type: string
              description: 'userName'
            securityAuthKey:
              type: string
              description: "securityAuthKey"
            securityAuthType:
              type: string
              description: "securityAuthType"
            securityPrivKey:
              type: string
              description: "securityPrivKey"
            securityPrivType:
              type: string
              description: "securityPrivType"
            useFlag:
              type: boolean
              description: "useflag"
    createSNMPCredentialRes:
      type: object
      description: 'Sets SNMP Credential  '
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        credentialId:
          type: string
    deleteSNMPv1CredentialRq:
      type: object
      description: 'Deletes SNMPv1 credential '
      properties:
        groupId:
          type: string
          description: "groupId"
        credentialIds:
          type: array
          items:
            type: string
            description: "credential Ids"
    deleteSNMPv1CredentialRes:
      type: object
      description: 'Deletes SNMPv1 Credential '
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
          description: status
    getSNMPv3ConditionListRes:
      type: object
      description: 'Returns the SNMP V3 Credential List '
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        #groupId:
          #type: string
          #description: "groupId"
        snmpV3CredentialList:
          type: array
          items:
            type: object
            properties:
              credentialId:
                type: string
                description: 'credentialId'
              credentialName:
                type: string
                description: 'credentialName'
    getSNMPv3CredentialRes:
      type: object
      description: 'Gets SNMPv3 Credential '
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        credentialId:
          type: string
          description: 'credentialId'
        credentialName:
          type: string
          description: 'credentialName'
        contextName:
          type: string
          description: 'contextName'
        userName:
          type: string
          description: 'userName'
        securityAuthKey:
          type: string
          description: "securityAuthKey"
        securityAuthType:
          type: string
          description: "securityAuthType"
        securityPrivKey:
          type: string
          description: "securityPrivKey"
        securityPrivType:
          type: string
          description: "securityPrivType"
    setSNMPv3CredentialRq:
      type: object
      description: 'Sets SNMPv3 credential '
      properties:
        credentialId:
          type: string
          description: credentialId
        credentialName:
          type: string
          description: credentialName
        contextName:
          type: string
          description: 'contextName'
        userName:
          type: string
          description: 'userName'
        securityAuthKey:
          type: string
          description: "securityAuthKey"
        securityAuthType:
          type: string
          description: "securityAuthType"
        securityPrivKey:
          type: string
          description: "securityPrivKey"
        securityPrivType:
          type: string
          description: "securityPrivType"
        securityAuthChgFlag:
          type: boolean
          description: "securityAuthChgFlag"
        securityPrivChgFlag:
          type: boolean
          description: "securityPrivChgFlag"
    setSNMPv3CredentialRes:
      type: object
      description: 'Sets SNMPv1 Credential community string '
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
    deleteSNMPv3CredentialRq:
      type: object
      description: 'Deletes SNMPv3 credential '
      properties:
        credentialIds:
          type: array
          items:
            type: string
            description: "credential Ids"
    deleteSNMPv3CredentialRes:
      type: object
      description: 'Deletes SNMPv3 Credential '
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
          description: status
    getStatusConditionRq:
      type: object
      description: 'Gets status condition for a specified Cluster groupId'
      properties:
        groupId:
          type: string
          description: "groupId"
    getStatusConditionRes:
      type: object
      description: 'Returns the  status condition '
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        statusSettings:
          type: object
          properties:
            error:
              type: string
              description: 'comma separated list of device status which are configured as error'
            warning:
              type: string
              description: 'comma separated list of device status which are configured as warning'
            normal:
              type: string
              description:
                comma separated list of device status which are configured as normal
                  - Default error, warning & normal list
                    <table border="1">
                      <tr><th>Category</th><th>Default Values</th></tr>
                      <tr><td>error</td><td>unknown,printerError<br/>
                          ,accountLimit<br/>,overduePreventMaintenance<br/>,paperJam<br/>,overduePreventMaintenance<br/>,paperJam,markerSupplyMissing<br/>,tonerEmpty,coverOpen<br/>,paperEmpty<br/>,specifiedInputTrayEmpty<br/>,specifiedInputTrayMissing<br/>,allOutputTrayFull<br/>,specifiedOutputTrayMissing<br/>,offline<br/></td></tr>
                      <tr><td>warning</td><td>printerWarning,tonerLow<br/>,paperLow,inputTrayMissing<br/>,outputTrayFull<br/>,outputTrayNearFull<br/>,outputTrayMissing<br/>,stackerNotInstalled<br/>,nearOverduePreventMaintenance</td></tr>
                      <tr><td>normal</td><td>standby,warmUp<br/>,printing,online<br/></td></tr>
                    </table>
                      ●Check content
                  - standby,warmUp,printing,online -These 'normal' states cannot be configurable to either 'error' or 'warning' categories
    setStatusConditionRq:
      type: object
      description: 'Sets the status settings condition for a specified group(Only ClusterGroup'
      properties:
        groupId:
          type: string
          description: "groupId"
        error:
          type: string
          description: 'comma separated list of device status which are configured as error'
        warning:
          type: string
          description: 'comma separated list of device status which are configured as warning'
        nornal:
          type: string
          description: 'comma separated list of device status which are configured as normal'
    setStatusConditionRes:
      type: object
      description: 'Returns the operation status flag '
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
    getScheduleListRes:
      type: object
      description: 'Returns the  Schedule List '
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        #groupId:
          #type: string
        scheduleList:
          type: array
          items:
            type: object
            properties:
              scheduleName:
                type: string
                description:
                  scheduleName
                    - Schedule names
                      <table border="1">
                        <tr><th>Parameter</th><th>Description</th></tr>
                        <tr><td>Status</td><td>"Device Status Update"<br/></td>
                        <tr><td>Basic</td><td>"Device Basic Update"<br/></td>
                        <tr><td>Tray&Supplies</td><td>"Device Tray& Supplies Update"<br/></td>
                        <tr><td>Counter</td><td>"Device Counter Update"<br/></td>
                      </table>
              enable:
                type: boolean
                description: 'enable/disable' # Enable/Disable Schedule Status update
                #execAtStartup:
                  #type: boolean
                  #description: 'Execute Flag '
                #runStartDate:
                  #type: string
                  #description: 'runStartDate(YYYYMMDD)'
              select:
                type: integer
                enum: [1,2,3]
                description: '
                  select:
                    * `1` - MINUTE
                    * `2` - HOURS
                    * `3` - DAY '
              interval:
                type: number
                description: 'interval in seconds'
    getScheduleDiscoSettingsRes:
      type: object
      description: 'Returns the Discovery Schedule Settings for an Agent'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        #groupId:
          #type: string
        scheduleSettings:
          type: object
          properties:
            scheduleName:
              type: string
              description:
                scheduleName
                  - Schedule names
                    <table border="1">
                      <tr><th>Parameter</th><th>Description</th></tr>
                      <tr><td>Discovery</td><td>"discovery"<br/></td>
                      </table>
            enable:
              type: boolean
              description: 'enable/disable' # Enable/Disable Discovery Schedule
              #execAtStartup:
                #type: boolean
                #description: 'Execute Flag '
              #runStartDate:
                #type: string
                #description: 'runStartDate(YYYYMMDD)'
            select:
              type: integer
              enum: [1,2,3]
              description: '
                select:
                  * `1` - MINUTE
                  * `2` - HOURS
                  * `3` - DAY '
            interval:
              type: number
              description: 'interval in seconds'
    setScheduleListRq:
      type: object
      description: 'Set Intervals For Schedule List '
      properties:
        scheduleList:
          type: array
          items:
            type: object
            properties:
              scheduleName:
                type: string
                description:
                  scheduleName
                    - Schedule names
                      <table border="1">
                        <tr><th>Parameter</th><th>Description</th></tr>
                        <tr><td>Status</td><td>"Device Status Update"<br/></td>
                        <tr><td>Basic</td><td>"Device Basic Update"<br/></td>
                        <tr><td>Tray&Supplies</td><td>"Device Tray& Supplies Update"<br/></td>
                        <tr><td>Counter</td><td>"Device Counter Update"<br/></td>
                        </table>
              enable:
                type: boolean
                description: 'enable/disable' #Enable/Disable Flag for Schedule Status Update
                #execAtStartup:
                  #type: boolean
                  #description: 'Execute Flag '
                #runStartDate:
                  #type: string
                  #description: 'runStartDate'
              select:
                type: integer
                enum: [1,2,3]
                description: '
                  select:
                  * `1` - MINUTE
                  * `2` - HOURS
                  * `3` - DAY '
              interval:
                type: number
                description: 'interval'
    setScheduleListRes:
      type: object
      description: 'Returns the  Status '
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
    setScheduleDiscoveryRq:
      type: object
      description: 'Set Interval For Discovery Schedule'
      properties:
        scheduleSettings:
          type: object
          properties:
            scheduleName:
              type: string
              description: '
                scheduleName
                  - Schedule names
                    <table border="1">
                      <tr><th>Parameter</th><th>Description</th></tr>
                      <tr><td>Discovery</td><td>"discovery"<br/></td>
                      </table>'
            enable:
              type: boolean
              description: 'enable/disable' #Enable/Disable Flag for Discovery Schedule
              #execAtStartup:
                #type: boolean
                #description: 'Execute Flag '
              #runStartDate:
                #type: string
                #description: 'runStartDate'
            select:
              type: integer
              enum: [1,2,3]
              description: '
                  select:
                  * `1` - MINUTE
                  * `2` - HOURS
                  * `3` - DAY '
            interval:
              type: number
              description: 'interval'
    setScheduleDiscoveryRes:
      type: object
      description: 'Returns the  Status '
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
    getMailAlertListRq:
      type: object
      description: 'Gets the List of email alerts for a specified groupId(Only ClusterGroup)'
      properties:
        groupId:
          type: string
          description: "groupId"
    getMailAlertListRes:
      type: object
      description: 'Returns the  Email Alert List '
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        groupId:
          type: string
        emailAlertList:
          type: array
          items:
            type: object
            properties:
              emailAlertId:
                type: string
                description: 'emailAlertId'
              category:
                type: string
                description: >-
                  category:
                  In case of multiple categories, can be specified with delimiter semicolon(;)
                  Example: category="mib;tco;agent"
                enum: ['mib','tco','agent','other']
              toAddress:
                type: string
                description: 'toAddress with ; as delimiter'
              ccAddress:
                type: string
                description: 'ccAddress with ; as delimiter'
              bccAddress:
                type: string
                description: 'bccAddress with ; as delimiter'
              language:
                type: string
                description: 'language(TBD)'
              timeZone:
                type: string
                description: 'timeZone'
              statusCondition:
                type: string
                description: '
                  - alert settings with ; as delimiter possible values
                      <table border="1">
                      <tr><th>category</th><th>statusCondition</th></tr>
                      <tr><td>mib</td><td>printerError;accountLimit;
                          overduePreventMaintenance;
                          paperJam;markerSupplyMissing;
                          tonerEmpty;coverOpen;paperEmpty;
                          specifiedInputTrayEmpty;specifiedInputTrayMissing;
                          allOutputTrayFull;specifiedOutputTrayMissing;
                          offline;printerWarning;tonerLow;paperLow;
                          inputTrayMissing;outputTrayFull;
                          outputTrayNearFull;outputTrayMissing;
                          stackerNotInstalled;
                          nearOverduePreventMaintenance</td></tr>
                      <tr><td>tco</td><td>policyApplicationError;policyCheckError;
                      portSettings;filterSettings;sslSettings;
                      ipsecSettings;ieeeSettings;securityControlSettings;
                      hiddenPatternPrintSettings;trackingInfoPrint;
                      auditLogSettings;securityIntrusionDetectionSettings;securityVirusScanSettings;
                      securitySMimeSettings;securityDocumentAdministrationFunctionSettings;
                      securityPasswordSettings</td></tr>
                      <tr><td>agent</td><td>lostCommunication;newVersionAvailable;agentUpdated</td></tr>
                      <tr><td>other</td><td>noResponse;disposalToner</td></tr>
                    </table>  '
              defaultstatuscondition:
                type: number
                description:
                  defaultstatuscondition
                    - Values
                      <table border="1">
                        <tr><th>Value</th><th>Description</th></tr>
                        <tr><td>0</td><td>'All errors & warning</td></tr>
                        <tr><td>1</td><td>'All errors</td></tr>
                        <tr><td>2</td><td>'All warning</td></tr>
                        <tr><td>3</td><td>'Custom</td></tr>
                        <tr><td>4</td><td>'All'</td></tr>
                      </table>
    setMailAlertListRq:
      type: object
      description: 'Sets the List of email alerts for a specified groupId(Only ClusterGroup) '
      properties:
        groupId:
          type: string
        mode:
          type: string
          enum: ['create','edit']
        emailAlertList:
          type: array
          items:
            type: object
            properties:
              emailAlertId:
                type: string
                description: 'emailAlertId'
              category:
                type: string
                description: >-
                  category:
                    In case of multiple categories, can be specified with delimiter semicolon(;)
                  Example: category="mib;tco;agent"
                enum: ['mib','tco','agent','other']
              toAddress:
                type: string
                description: 'toAddress with ; as delimiter'
              ccAddress:
                type: string
                description: 'ccAddress with ; as delimiter'
              bccAddress:
                type: string
                description: 'bccAddress with ; as delimiter'
              language:
                type: string
                description: 'language(TBD)'
              timeZone:
                type: string
                description: 'timeZone'
              statusCondition:
                type: string
                description: '
                  - alert settings with ; as delimiter possible values
                    <table border="1">
                      <tr><th>category</th><th>statusCondition</th></tr>
                      <tr><td>mib</td><td>printerError;accountLimit;
                          overduePreventMaintenance;
                          paperJam;markerSupplyMissing;
                          tonerEmpty;coverOpen;paperEmpty;
                          specifiedInputTrayEmpty;specifiedInputTrayMissing;
                          allOutputTrayFull;specifiedOutputTrayMissing;
                          offline;printerWarning;tonerLow;paperLow;
                          inputTrayMissing;outputTrayFull;
                          outputTrayNearFull;outputTrayMissing;
                          stackerNotInstalled;
                          nearOverduePreventMaintenance</td></tr>
                      <tr><td>tco</td><td>policyApplicationError;policyCheckError;
                      portSettings;filterSettings;sslSettings;
                      ipsecSettings;ieeeSettings;securityControlSettings;
                      hiddenPatternPrintSettings;trackingInfoPrint;
                      auditLogSettings;securityIntrusionDetectionSettings;securityVirusScanSettings;
                      securitySMimeSettings;securityDocumentAdministrationFunctionSettings;
                      securityPasswordSettings</td></tr>
                      <tr><td>agent</td><td>lostCommunication;newVersionAvailable;agentUpdated;</td></tr>
                      <tr><td>other</td><td>noResponse;disposalToner</td></tr>
                    </table> '
              defaultstatuscondition:
                type: number
                description:
                  defaultstatuscondition
                    - Values
                      <table border="1">
                        <tr><th>Value</th><th>Description</th></tr>
                        <tr><td>0</td><td>'All errors & warning</td></tr>
                        <tr><td>1</td><td>'All errors</td></tr>
                        <tr><td>2</td><td>'All warning</td></tr>
                        <tr><td>3</td><td>'Custom</td></tr>
                        <tr><td>4</td><td>'All'</td></tr>
                        </table>
    setMailAlertListRes:
      type: object
      description: 'Returns the operation status flag'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
    sendMailAlertRq:
      type: object
      description: 'Send Test Email '
      properties:
        groupId:
          type: string
        toAddress:
          type: string
          description: 'toAddress with semicoln(;) or comma(,) as delimiter'
        timeZone:
          type: string
          description: 'timeZone'
        language:
          type: string
          description: 'Language'
    sendMailAlertRes:
      type: object
      description: 'Returns the operation status flag'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
    deleteMailAlertListRq:
      type: object
      description: 'Deletes the Email Alert settings'
      properties:
        groupId:
          type: string
          description: groupId
        emailAlertIds:
          type: array
          items:
            type: string
          description: "List of deviceIds "
    deleteMailAlertListRes:
      type: object
      description: 'Returns the operation status flag'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
    getScheduleSettingsRq:
      type: object
      description: 'Gets the Schedule Settting details for a specified ScheduleName'
      properties:
        groupId:
          type: string
          description: "groupId"
        scheduleName:
          type: string
          description: '
            scheduleName
              - Schedule names
                <table border="1">
                  <tr><th>Parameter</th><th>Description</th></tr>
                  <tr><td>ScheduleName</td><td>
                  "discovery : Device discovery"<br/>"deviceStatus: Device status update"<br/>"basicUpdate: Basic Info update"<br/>"suppliesUpdate :  Tray and supply Info update"<br/>"counterUpdate : Counter Info Update"<br/></td></table> '
    getScheduleSettingsRes:
      type: object
      description: 'Returns the  Schedule Settings '
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        groupId:
          type: string
        scheduleName:
          type: string
        execAtStartup:
          type: boolean
          description: 'Execute flag at the time of agent start'
        schedule:
          type: array
          items:
            type: object
            properties:
              starttimestamp:
                type: number
              endtimestamp:
                type: number
              interval:
                type: integer
    setScheduleSettingsRq:
      type: object
      description: 'Sets the Schedule for the Specified Schedule Name'
      properties:
        groupId:
          type: string
        scheduleName:
          type: string
          description: '
            scheduleName
              - Schedule names
                <table border="1">
                  <tr><th>Parameter</th><th>Description</th></tr>
                  <tr><td>ScheduleName</td><td>
                  "discovery : Device discovery"<br/>"deviceStatus: Device status update"<br/>"basicUpdate: Basic Info update"<br/>"suppliesUpdate :  Tray and supply Info update"<br/>"counterUpdate : Counter Info Update"<br/></td></table> '
        execAtStartup:
          type: boolean
          description: 'Execute flag at the time of agent start'
        schedule:
          type: array
          items:
            type: object
            properties:
              starttimestamp:
                type: number
              endtimestamp:
                type: number
              interval:
                type: integer
    setScheduleSettingsRes:
      type: object
      description: 'Returns the operation status flag '
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
    getAutoRegisterStatusRq:
      properties:
        groupId:
          type: string
          description: groupId
      required:
        - groupId
    getAutoRegisterStatusRes:
      type: object
      description: 'Discovered device setting response (Auto Register Flag)'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        autoRegister:
          type: boolean
          description: 'Auto Register Flag'
    setAutoRegisterStatusRq:
      properties:
        groupId:
          type: string
          description: groupId
        autoRegister:
          type: boolean
          description: 'Device Auto Registration (true:Yes, false: No)'
      required:
        - groupId
    setAutoRegisterStatusRes:
      type: object
      description: 'Discovered device setting response (Auto Register Flag)'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        autoRegister:
          type: boolean
          description: 'Auto Register Flag'
    getGrpOperationLogRq:
      properties:
        startIndex:
          type: integer
          description: startIndex
        count:
          type: integer
          description: count
        targetGroupId:
          type: string
          description: targetGroupId
        orderBy:
          type: object
          description: sort
          properties:
            order:
              type: string
              description: order
              enum:
              - ascending
              - descending
            key:
              type: string
              description: '
                key<br>
                Specifiable items are as below.
                - Filter key list
                  <table border="1">
                    <tr><th>Key</th><th>Description</th></tr>
                    <tr><td>kind</td><td>kind</td></tr>
                    <tr><td>timestamp</td><td>timestamp</td></tr>
                    <tr><td>accountName</td><td>accountName</td></tr>
                    <tr><td>Operation</td><td>Operation</td></tr>
                    <tr><td>addInfoItem1</td><td>addInfoItem1</td></tr>
                      <tr><td>addInfoValue1</td><td>addInfoValue1</td></tr>
                    <tr><td>addInfoItem2</td><td>addInfoItem2</td></tr>
                    <tr><td>addInfoValue2</td><td>addInfoValue2</td></tr>
                    <tr><td>result</td><td>result</td></tr>
                  </table> '
      required:
        - targetGroupId
    getGrpOperationLogRes:
      type: object
      description: 'Fetch the Group Opereation logs for specific group'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        startIndex:
          type: integer
          description: startIndex
        count:
          type: integer
          description: request count
        totalCount:
          type: integer
          description: total count
        resultCount:
          type: integer
          description: result count
        groupOpeLogList:
          type: array
          description: 'groupOpeLogList'
          items:
            type: object
            properties:
              opeLogId:
                type: string
                description: "opeLogId"
              kind:
                type: string
                description: "kind"
              timestamp:
                type: number
                description: "timestamp"
              accountId:
                type: string
                description: "accountId"
              operation:
                type: string
                description: "operation"
              targetGroupId:
                type: string
                description: "targetGroupId"
              result:
                type: string
                description: "result"
              accountName:
                type: string
                description: "accountName"
              accountStatus:
                type: string
                description: "accountStatus"
              errorCode:
                type: string
                description: "errorCode"
              addInfo1:
                type: object
                description: "errorCode"
                properties:
                  itemName:
                    type: string
                    description: "itemName"
                  value:
                    type: string
                    description: "value"
              addInfo2:
                type: object
                properties:
                  itemName:
                    type: string
                    description: "itemName"
                  value:
                    type: string
                    description: "value"
    getDeviceOperationLogRq:
      properties:
        startIndex:
          type: integer
          description: startIndex
        count:
          type: integer
          description: count
        targetDeviceId:
          type: string
          description: targetDeviceId
        orderBy:
          type: object
          description: sort
          properties:
            order:
              type: string
              description: order
              enum:
                - ascending
                - descending
            key:
              type: string
              description: '
                key<br>
                Specifiable items are as below.
                - Filter key list
                  <table border="1">
                    <tr><th>Key</th><th>Description</th></tr>
                    <tr><td>kind</td><td>kind</td></tr>
                    <tr><td>timestamp</td><td>timestamp</td></tr>
                    <tr><td>accountName</td><td>accountName</td></tr>
                    <tr><td>Operation</td><td>Operation</td></tr>
                    <tr><td>result</td><td>result</td></tr>
                  </table> '
      required:
        - targetGroupId
    getDeviceOperationLogRes:
      type: object
      description: 'Fetch device operation logs for a specific device '
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        startIndex:
          type: integer
          description: startIndex
        count:
          type: integer
          description: request count
        totalCount:
          type: integer
          description: total count
        resultCount:
          type: integer
          description: result count
        deviceOpeLogList:
          type: array
          description: 'deviceOpeLogList'
          items:
            type: object
            properties:
              opeLogId:
                type: string
                description: "opeLogId"
              kind:
                type: string
                description: "kind"
              timestamp:
                type: number
                description: "timestamp"
              accountId:
                type: string
                description: "accountId"
              operation:
                type: string
                description: "operation"
              targetDeviceId:
                type: string
                description: "targetGroupId"
              result:
                type: string
                description: "result"
              accountName:
                type: string
                description: "accountName"
              accountStatus:
                type: string
                description: "accountStatus"
              errorCode:
                type: string
                description: "errorCode"
    deleteGrpOperationLogRq:
      properties:
        targetGroupId:
          type: string
          description: targetGroupId
      required:
        - targetGroupId
    deleteGrpOperationLogRes:
      type: object
      description: 'Removes the Group Operation Logs for a Specified Group'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
    deleteDeviceOperationLogRq:
      properties:
        targetDeviceId:
          type: string
          description: targetDeviceId
      required:
        - targetGroupId
    deleteDeviceOperationLogRes:
      type: object
      description: 'Removes the Device Operation Logs for a Specified Device'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
    exportOperationLogRq:
      properties:
        targetGroupId:
          type: string
          description: 'targetGroupId'
        type:
          type: string
          description: 'type'
          enum:
            - mib # Device Management
            - idp # Display Management
            - dd # Driver Management
            - idp-pm # Display Power Management
            - tco # Security Management
            - tco-dc # Device Cloning
        orderBy:
          type: array
          description: 'Sort Specification'
          items:
            type: object
            required:
              - key
              - order
            properties:
              key:
                type: string
                description:
                  Sort Key <br>
                  Specifiable items are as below.
                  - Sort Key list
                    <table border="1">
                      <tr><th>Key</th><th>Description</th></tr>
                      <tr><td>timestamp</td><td>timestamp</td></tr>
                      <tr><td>operation</td><td>operation</td></tr>
                      <tr><td>itemName1</td><td>itemName1</td></tr>
                      <tr><td>itemName2</td><td>itemName2</td></tr>
                      <tr><td>value1</td><td>value1</td></tr>
                      <tr><td>value2</td><td>value2</td></tr>
                      <tr><td>result</td><td>result</td></tr>
                      <tr><td>fileName</td><td>fileName</td></tr>
                    </table>
                  ●Check content
                    - Error for other than specified value
              order:
                type: string
                description: '
                  Sort Order <br>
                    - ascending: Ascending
                    - descending: Descending
                  ●Check content
                    - Error for other than specified value'
                enum:
                  - ascending
                  - descending
    exportDeviceTypeRq:
      properties:
        groupId:
          type: string
          description: 'groupId'
        deviceTypeIdList:
          type: array
          items:
            type: string
            description: 'deviceTypeIdList'
    exportOperationLogRes:
      type: object
      description: 'Returns the requestId'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        requestId:
          type: string
          description: 'requestId'
    exportDeviceLogRq:
      properties:
        targetGroupId:
          type: string
          description: 'targetGroupId'
        type:
          type: string
          description: 'type'
          enum:
            - mib # Device Management
            - idp # Display Management
            - tco # Security Management
            - tco-dc # Device Cloning
        orderBy:
          type: array
          description: 'Sort Specification'
          items:
            type: object
            required:
              - key
              - order
            properties:
              key:
                type: string
                description:
                  Sort Key <br>
                  Specifiable items are as below.
                  - Sort Key list
                    <table border="1">
                      <tr><th>Key</th><th>Description</th></tr>
                      <tr><td>timestamp</td><td>timestamp</td></tr>
                      <tr><td>operation</td><td>operation</td></tr>
                      <tr><td>modelName</td><td>modelName</td></tr>
                      <tr><td>serialNumber</td><td>serialNumber</td></tr>
                      <tr><td>ipAddress</td><td>ipAddress</td></tr>
                      <tr><td>deviceStatus</td><td>deviceStatus</td></tr>
                      <tr><td>result</td><td>result</td></tr>
                      <tr><td>securityOption</td><td>securityOption</td></tr>
                      <tr><td>customName</td><td>customName</td></tr>
                      <tr><td>checkResult</td><td>checkResult</td></tr>
                    </table>
                  ●Check content
                    - Error for other than specified value
              order:
                type: string
                description: '
                  Sort Order <br>
                    - ascending: Ascending
                    - descending: Descending
                  ●Check content
                    - Error for other than specified value '
                enum:
                  - ascending
                  - descending
    exportDeviceTypeRes:
      type: object
      description: 'Returns the requestId'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        requestId:
          type: string
          description: 'requestId'
    deviceTypefileuploadRq:
      type: object
      description: 'Device Cloning File Upload'
      properties:
        #groupId:
        #type: string
        #description: 'groupId'
        fileName:
          type: string
          description: 'fileName'
          format: binary
    deviceTypefileuploadRes:
      type: object
      description: 'Returns the RequestId'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        requestId:
          type: string
          description: 'requestId'
    exportDeviceLogRes:
      type: object
      description: 'Returns the requestId'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        requestId:
          type: string
          description: 'requestId'
    exportDeviceOperationLogRq:
      properties:
        targetDeviceId:
          type: string
          description: targetDeviceId
        orderBy:
          type: object
          description: sort
          properties:
            order:
              type: string
              description: order
              enum:
                - ascending
                - descending
            key:
              type: string
              description: '
                key<br>
                Specifiable items are as below.
                - Filter key list
                  <table border="1">
                    <tr><th>Key</th><th>Description</th></tr>
                    <tr><td>kind</td><td>kind</td></tr>
                    <tr><td>timestamp</td><td>timestamp</td></tr>
                    <tr><td>accountName</td><td>accountName</td></tr>
                    <tr><td>Operation</td><td>Operation</td></tr>
                    <tr><td>result</td><td>result</td></tr>
                  </table> '
      required:
        - targetDeviceId
    exportDeviceOperationLogRes:
      type: object
      description: 'Returns the requestId'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        requestId:
          type: string
          description: 'requestId'
    downLoadExportDataRq:
      properties:
        targetDeviceId:
          type: string
          description: targetDeviceId
        orderBy:
          type: object
          description: sort
          properties:
            order:
              type: string
              description: order
              enum:
                - ascending
                - descending
            key:
              type: string
              description:
                key<br>
                Specifiable items are as below.
                - Filter key list
                  <table border="1">
                    <tr><th>Key</th><th>Description</th></tr>
                    <tr><td>kind</td><td>kind</td></tr>
                    <tr><td>timestamp</td><td>timestamp</td></tr>
                    <tr><td>accountName</td><td>accountName</td></tr>
                    <tr><td>Operation</td><td>Operation</td></tr>
                    <tr><td>result</td><td>result</td></tr>
                  </table>
      required:
        - targetDeviceId
    downLoadExportDataRes:
      type: object
      description: 'Returns the requestId'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        requestId:
          type: string
          description: 'requestId'
    # Report Operations
    getReportSettingsRes:
      type: object
      description: 'Returns the  Report Settings(DeviceReport) For Specific Group'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        reportSettings:
          type: object
          properties:
              emailAddress:
                type: string
                description:  email id
              scheduleEnable:
                type: boolean
                enum:
                  - true
                  - false
                description: '
                  scheduleEnable:
                    * `true` - schedule enabled
                    * `false` - scheduled disabled '
              updatedTimestamp:
                type: number
                description: 'updatedTimestamp'
              timeZone:
                type: string
                description: 'timeZone'
              language:
                type: string
                description: 'language'
              sortBy:
                type: number
                enum:
                  - 1
                  - -1
                description: '
                  sortBy :
                  * `1` - ascending
                  * `-1` - descending '
              sortField:
                type: string
                enum:
                  - maker
                  - ipAddress
                  - modelName
                description: 'sortField'
              selectedGroup:
                type: number
                enum:
                  - 1  # Top Group
                  - 2  # Tag(s)
              groupIds:
                type: array
                items:
                  type: string
              reportFormat:
                type: number
                enum:
                  - 1
                  - 2
                  - 3
                description: '
                  reportFormat:
                    * `1` - PDF
                    * `2` - HTML
                    * `3` - CSV '
    getCounterSettingsRes:
      type: object
      description: 'Returns the  Counnter Settings For Specific Group'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        colorModeFlag:
          type: boolean
          description: 'colorModeFlag'
        postCardOrA3Flag:
          type: boolean
          description: 'postCardOrA3Flag'
        utilityFlag:
          type: boolean
          description: 'utilityFlag'
    getDeviceTypeSettingsDetailsRes:
      type: object
      description: 'Returns the DeviceType Settings Details For Specific Group'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        deviceTypeId:
          type: string
          description: 'deviceTypeId'
        referenceMIBInfoList:
          type: array
          description: 'referenceMIBInfoList'
          items:
            type: object
            properties:
              referenceId:
                type: string
                description: 'referenceId'
              snmpRequest:
                type: string
                enum:
                  - 'get'
                  - 'getNext'
                description: 'snmpRequest'
              oid:
                type: string
                description: 'oid'
              description:
                type: string
                description: 'description'
        outputDeviceUsageSettingList:
          type: array
          description: 'outputDeviceUsageSettingList'
          items:
            type: object
            properties:
              counterId:
                type: string
                description: 'counterId'
              referenceId:
                type: string
                description: 'referenceId'
          example: # <-- 11 Pre-configured counters
            - counterId: "CopyBlackWhite"
              referenceId: "String"
            - counterId: "CopyColor"
              referenceId: "String"
            - counterId: "PrintsBlackWhite"
              referenceId: "String"
            - counterId: "PrintsColor"
              referenceId: "String"
            - counterId: "InternetFaxReceiveBlackWhite"
              referenceId: "String"
            - counterId: "InternetFaxReceiveColor"
              referenceId: "String"
            - counterId: "FaxReceiveBlackWhite"
              referenceId: "String"
            - counterId: "FaxReceiveColor"
              referenceId: "String"
            - counterId: "PrintsDocumentFilingBlackWhite"
              referenceId: "String"
            - counterId: "PrintsDocumentFilingColor"
              referenceId: "String"
            - counterId: "OthersBlackWhite"
              referenceId: "String"
            - counterId: "OthersColor"
              referenceId: "String"
        customCounterSettingList:
          type: array
          description: 'customCounterSettingList'
          items:
            type: object
            properties:
              counterName:
                type: string
                description: 'counterName'
              referenceId:
                type: string
                description: 'referenceId'
    getDeviceTypeSettingsListRes:
      type: object
      description: 'Returns the Device Type Settings List For Specific Group'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        deviceTypeList:
          type: array
          items:
            type: object
            properties:
              deviceTypeId:
                type: string
                description: 'deviceTypeId'
              lastDeviceTypeUpdate:
                type: number
                description: 'lastDeviceTypeUpdate'
    getAddlDevTypeSettingsListRes:
      type: object
      description: 'Returns the Additional Device Type Settings List'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        deviceTypeList:
          type: array
          items:
            type: object
            properties:
              counterName:
                type: string
                description: 'counterName'
    setReportSettingsRq:
      type: object
      description: 'Sets the  Report Settings(DeviceReport) For Specific Group'
      properties:
        #groupId:
        #  type: string
        #  description: 'groupId'
        deviceReport:
          type: object
          description: 'deviceReport'
          properties:
            emailAddress:
              type: string
              description:  'emailAddress'
            scheduleEnable:
              type: boolean
              enum:
                - true
                - false
              description: '
                scheduleEnable:
                  * `true`
                  * `false` '
            updatedTimestamp:
              type: number
              description: 'updatedTimestamp'
            timeZone:
              type: string
              description: 'timeZone'
            language:
              type: string
              description: 'language'
            sortBy:
              type: number
              enum:
                - 1
                - -1
              description: '
                sortBy :
                * `1` - ascending
                * `-1` - descending '
            sortField:
              type: string
              enum:
                - maker
                - ipAddress
                - modelName
              description: 'sortField'
            selectedGroup:
              type: number
              enum:
                - 1  # Top Group
                - 2  # Tag(s)
            groupIds:
              type: array
              items:
                type: string
            reportFormat:
              type: number
              enum:
                - 1
                - 2
                - 3
              description: '
                reportFormat:
                * `1` - PDF
                * `2` - HTML
                * `3` - CSV '
    setCounterSettingsRq:
      type: object
      description: 'Sets the  Special Counter Settings For Specific Group'
      properties:
        groupId:
          type: string
          description: 'groupId'
        colorModeFlag:
          type: boolean
          description: 'colorModeFlag'
        postCardOrA3Flag:
          type: boolean
          description: 'postCardOrA3Flag'
        utilityFlag:
          type: boolean
          description: 'utilityFlag'
    delDeviceTypeSettingsRq:
      type: object
      description: 'Delete(s) Device Type Settings For Specific Group'
      properties:
        isExclude:
          type: boolean
          description: 'isExclude If True:deviceTypeIds are non-selected device.False:deviceTypeIds are selected device'
        deviceTypeIds:
          type: array
          items:
            type: string
          description: "List of deviceTypeIds"
    applyDeviceTypeSettingsRq:
      type: object
      description: 'Apply Device Type Settings to Device(s)'
      properties:
        isExclude:
          type: boolean
          description: 'isExclude If True:deviceTypeIds are non-selected device.False:deviceTypeIds are selected device'
        deviceIds:
          type: array
          items:
            type: string
          description: "List of deviceIds"
        deviceTypeSettings:
          type: string
          description: 'deviceTypeSettings'
    delAddlInfoCounterDeviceTypeSettingsRq:
      type: object
      description: 'Delete(s)Additional Information Counters'
      properties:
        isExclude:
          type: boolean
          description: 'isExclude If True:counterName are non-selected device.False:counterName are selected device'
        counterName:
          type: array
          items:
            type: string
          description: "List of counterName"
    createDeviceTypeSettingsRq:
      type: object
      description: 'Sets the Device Type Settings'
      properties:
        deviceTypeId:
          type: string
          description: 'deviceTypeId'
        referenceMIBInfoList:
          type: array
          description: 'referenceMIBInfoList'
          items:
            type: object
            properties:
              referenceId:
                type: string
                description: 'referenceId'
              snmpRequest:
                type: string
                enum:
                  - 'get'
                  - 'getNext'
                description: 'snmpRequest'
              oid:
                type: string
                description: 'oid'
              description:
                type: string
                description: 'description'
        outputDeviceUsageSettingList:
          type: array
          description: 'outputDeviceUsageSettingList'
          items:
            type: object
            properties:
              counterId:
                type: string
                description: 'counterId'
              referenceId:
                type: string
                description: 'referenceId'
          example: # <-- 11 Pre-configured counters
            - counterId: "CopyBlackWhite"
              referenceId: "String"
            - counterId: "CopyColor"
              referenceId: "String"
            - counterId: "PrintsBlackWhite"
              referenceId: "String"
            - counterId: "PrintsColor"
              referenceId: "String"
            - counterId: "InternetFaxReceiveBlackWhite"
              referenceId: "String"
            - counterId: "InternetFaxReceiveColor"
              referenceId: "String"
            - counterId: "FaxReceiveBlackWhite"
              referenceId: "String"
            - counterId: "FaxReceiveColor"
              referenceId: "String"
            - counterId: "PrintsDocumentFilingBlackWhite"
              referenceId: "String"
            - counterId: "PrintsDocumentFilingColor"
              referenceId: "String"
            - counterId: "OthersBlackWhite"
              referenceId: "String"
            - counterId: "OthersColor"
              referenceId: "String"
        customCounterSettingList:
          type: array
          description: 'customCounterSettingList'
          items:
            type: object
            properties:
              counterName:
                type: string
                description: 'counterName'
              referenceId:
                type: string
                description: 'referenceId'
    createAddlDeviceTypeSettingsRq:
      type: object
      description: 'Create Additional Counter Information '
      properties:
        counterName:
          type: string
          description: 'counterName'
    setDeviceTypeSettingsRq:
      type: object
      description: 'Sets the Device Type Settings'
      properties:
        referenceMIBInfoList:
          type: array
          description: 'referenceMIBInfoList'
          items:
            type: object
            properties:
              referenceId:
                type: string
                description: 'referenceId'
              snmpRequest:
                type: string
                enum:
                  - 'get'
                  - 'getNext'
                description: 'snmpRequest'
              oid:
                type: string
                description: 'oid'
              description:
                type: string
                description: 'description'
        outputDeviceUsageSettingList:
          type: array
          description: 'outputDeviceUsageSettingList'
          items:
            type: object
            properties:
              counterId:
                type: string
                description: 'counterId'
              referenceId:
                type: string
                description: 'referenceId'
          example: # <-- 11 Pre-configured counters
            - counterId: "CopyBlackWhite"
              referenceId: "String"
            - counterId: "CopyColor"
              referenceId: "String"
            - counterId: "PrintsBlackWhite"
              referenceId: "String"
            - counterId: "PrintsColor"
              referenceId: "String"
            - counterId: "InternetFaxReceiveBlackWhite"
              referenceId: "String"
            - counterId: "InternetFaxReceiveColor"
              referenceId: "String"
            - counterId: "FaxReceiveBlackWhite"
              referenceId: "String"
            - counterId: "FaxReceiveColor"
              referenceId: "String"
            - counterId: "PrintsDocumentFilingBlackWhite"
              referenceId: "String"
            - counterId: "PrintsDocumentFilingColor"
              referenceId: "String"
            - counterId: "OthersBlackWhite"
              referenceId: "String"
            - counterId: "OthersColor"
              referenceId: "String"
        customCounterSettingList:
          type: array
          description: 'customCounterSettingList'
          items:
            type: object
            properties:
              counterName:
                type: string
                description: 'counterName'
              referenceId:
                type: string
                description: 'referenceId'
    setReportSettingsRes:
      type: object
      description: 'Returns the  Status'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
          description: 'status'
    dashboardLastAccessRes:
      type: object
      description: 'Returns the  Status'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
          description: 'status'
    delDeviceTypeSettingsRes:
      type: object
      description: 'Returns the  Status'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
          description: 'status'
    applyDeviceTypeSettingsRes:
      type: object
      description: 'Returns the  Status'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
          description: 'status'
    delAddlInfoCounterDeviceTypeSettingsRes:
      type: object
      description: 'Returns the  Status'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
          description: 'status'
    createDeviceTypeSettingsRes:
      type: object
      description: 'Returns the  Status'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
          description: 'status'
    createAddlDeviceTypeSettingsRes:
      type: object
      description: 'Returns the  Status'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
          description: 'status'
    setDeviceTypeSettingsRes:
      type: object
      description: 'Returns the  Status'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
          description: 'status'
    getLatestDeviceReportRes:
      type: object
      description: 'Get Latest Device Report '
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        count:
          type: integer
          description: 'request count'
        resultCount:
          type: integer
          description: 'resultCount'
        startIndex:
          type: integer
          description: 'startIndex'
        totalCount:
          type: integer
          description: 'totalCount'
        groupId:
          type: string
          description: 'groupId'
        groupName:
          type: string
          description: 'groupName'
        deviceList:
          type: array
          items:
            type: object
            properties:
              counterInfo:
                type: object
                description: 'counterInfo'
              latestCounterupdate:
                type: number
                description: 'latestCounterupdate'
              machineId:
                type: string
                description: 'machineId'
              ipAddress:
                type: string
                description: 'IP Address'
              modelName:
                type: string
                description: 'Model Name'
              serialNumber:
                type: string
                description: 'Serial Number'
              macAddress:
                type: string
                description: 'macAddress'
              location:
                type: string
                description: 'location'
              discoveryTime:
                type: string
                description: 'discoveryTime'
              maker:
                type: string
                description: 'maker'
    createDeviceReportRq:
      type: object
      description: 'Create Device Report for specific Group based on ReportSettings'
      properties:
        groupId:
          type: string
          description: 'groupId'
    createDeviceReportRes:
      type: object
      description: 'Returns the  Status'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
          description: 'status'
        mailSend:
          type: boolean
          description: 'mailSend'
          enum:
          - true
          - false
    getDeviceLatestReportRes:
      type: object
      description: 'Returns the  RequestId'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        requestId:
          type: string
          description: 'requestId'
    getReportListRes:
      type: object
      description: 'Response Object '
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        count:
          type: integer
          description: 'request count'
        resultCount:
          type: integer
          description: 'resultCount'
        startIndex:
          type: integer
          description: 'startIndex'
        totalCount:
          type: integer
          description: 'totalCount'
        reportList:
          type: array
          items:
            type: object
            properties:
              report:
                type: object
                description: 'report'
                properties:
                  reportCreatedTime:
                    type: number
                    description: 'reportCreatedTime'
                  reportId:
                    type: string
                    description: 'reportId'
                  reportType:
                    type: number
                    enum: [1, 2,3]
                    description: '
                        reportType:
                        * `1` - DeviceReport
                        * `2` - UsageReport
                        * `3` - DateRangeReport '
                  reportFormat:
                    type: number
                    enum:
                      - 1
                      - 2
                      - 3
                    description: '
                      reportFormat:
                        * `1` - PDF
                        * `2` - HTML
                        * `3` - CSV '
                  timeZone:
                    type: string
                    description: 'timeZone'
                  dateTimeFormat:
                    type: string
                    description: '
                      dateTime Format:
                        * `MM/dd/yyyy HH:mm:ss`
                        * `yyyy/MM/dd HH:mm:ss`
                        * `dd/MM/yyyy HH:mm:ss` '
                  sortBy:
                    type: number
                    enum:
                      - 1
                      - -1
                  sortField:
                    type: string
                    enum:
                      - reportCreatedTime
                      - reportType
                      - reportId
                    description: 'sortField'
    getDetailedDeviceReportRes:
      type: object
      description: 'Get Detailed Device Report '
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        groupName:
          type: string
          description: 'groupName'
        deviceList:
          type: array
          items:
            type: object
            properties:
              counterInfo:
                type: object
                description: 'counterInfo'
              latestCounterupdate:
                type: number
                description: 'latestCounterupdate'
              machineId:
                type: string
                description: 'machineId'
              ipAddress:
                type: string
                description: 'IP Address'
              modelName:
                type: string
                description: 'Model Name'
              serialNumber:
                type: string
                description: 'Serial Number'
              macAddress:
                type: string
                description: 'macAddress'
              location:
                type: string
                description: 'location'
              discoveryTime:
                type: string
                description: 'discoveryTime'
              maker:
                type: string
                description: 'maker'
    getReportEmailSettingsRes:
      type: object
      description: 'Returns the  Report Email Settings(DeviceReport) For Specific Group'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        emailSettings:
          type: object
          properties:
            toAddress:
              type: string
              description: 'toAddress'
            subject:
              type: string
              description: 'subject'
    setReportEmailSettingsRq:
      type: object
      description: 'Sets the  Report Email Settings(DeviceReport) For Specific Group'
      properties:
        groupId:
          type: string
          description: 'groupId'
        emailSettings:
          type: object
          properties:
            toAddress:
              type: string
              description: 'toAddress'
            subject:
              type: string
              description: 'subject'
    setReportEmailSettingsRes:
      type: object
      description: 'Returns the  Status'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
          description: 'status'
    emailReportRes:
      type: object
      description: 'Returns the  Status'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
          description: 'status'
    dowloadSavedReportRes:
      type: object
      description: 'Returns the  Status'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        requestId:
          type: string
          description: 'requestId'
    deleteSavedReportRq:
      type: object
      description: 'Delets the Saved Reports for a Specific Group'
      properties:
        reportIdList:
          type: array
          items:
            type: string
          description: 'reportIdList'
        isExclude:
          type: boolean
          description: 'isExclude'
    deleteSavedReportRes:
      type: object
      description: 'Returns the status'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: string
          description: 'status'
    getReportScheduleListRes:
      type: object
      description: 'Returns the Report Schedule List '
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        groupId:
          type: string
        scheduleList:
          type: array
          items:
            type: object
            properties:
              scheduleId:
                type: string
                description: 'scheduleId'
              scheduleName:
                type: string
                description:
                  scheduleName
                    - Schedule names
                      <table border="1">
                        <tr><th>Parameter</th><th>Description</th></tr>
                        <tr><td>ScheduleName</td><td>
                        "deviceReport"<br/>"deviceUsageReport"<br/>"Others(TBD)"<br/></td></table>
              enable:
                type: boolean
              #execAtStartup:
                #type: boolean
                #description: 'Execute flag at the time of agent start'
    getReportScheduleDetailsRes:
      type: object
      description: 'Returns the Report Schedule Details '
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        scheduleEnable:
          type: boolean
          description: 'scheduleEnable'
        schedule:
          type: object
          properties:
            scheduleName:
              type: string
              description:
                scheduleName
                  - Schedule names
                    <table border="1">
                      <tr><th>Parameter</th><th>Description</th></tr>
                      <tr><td>ScheduleName</td><td>
                        "deviceReport"<br/>"deviceUsageReport"<br/>"Others(TBD)"<br/></td></table>
            timeZone:
              type: string
              description: 'timeZone'
            #enable:
              #type: boolean
              #execAtStartup:
                #type: boolean
              #description: 'Execute Flag '
            runStartDate:
              type: string
              description: 'runStartDate'
            runDate:
              type: object
              description: 'runDate'
              properties:
                select:
                  type: string
                  description: 'select'
                  enum:
                  - DAY
                  - WEEK
                  #- MONTH
                period:
                  type: number
                  description: 'period'
                dayOfWeek:
                  type: array
                  description: 'Any value from [1-7] If select is WEEK '
                  items:
                    type: number
                #dayOfMonth:
                  #type: array
                  #description: 'Any value from [1-31] If select is MONTH'
                  #items:
                  #type: number
            runTime:
              type: object
              description: 'runTime'
              properties:
                select:
                  type: string
                  description: 'select'
                  enum:
                  - TIME
                  - TIME_RANGE
                periodHour:
                  type: number
                  description: 'periodHour'
                periodMinute:
                  type: number
                  description: 'periodMinute'
                timeList:
                  type: array
                  description: 'timeList'
                  items:
                    type: object
                    properties:
                      time:
                        type: object
                        description: 'time'
                        properties:
                          hour:
                            type: number
                            description: 'hour'
                          minute:
                            type: number
                            description: 'minute'
    setReportScheduleDetailsRq:
      type: object
      description: 'Sets Report Schedule Details'
      properties:
        scheduleEnable:
          type: boolean
          description: 'scheduleEnable'
        schedule:
          type: object
          properties:
            timeZone:
              type: string
              description: 'timeZone'
            runStartDate:
              type: string
              description: 'runStartDate'
            runDate:
              type: object
              description: 'runDate'
              properties:
                select:
                  type: string
                  description: 'select'
                  enum:
                    - DAY
                    - WEEK
                    - MONTH
                period:
                  type: number
                  description: 'period'
                dayOfWeek:
                  type: array
                  description: 'Any value from [1-7] If select is WEEK '
                  items:
                    type: number
                dayOfMonth:
                  type: array
                  description: 'Any value from [1-31] If select is MONTH'
                  items:
                    type: number
            runTime:
              type: object
              description: 'runTime'
              properties:
                select:
                  type: string
                  description: 'select'
                  enum:
                  - TIME
                  - TIME_RANGE
                periodHour:
                  type: number
                  description: 'periodHour'
                periodMinute:
                  type: number
                  description: 'periodMinute'
                timeList:
                  type: array
                  description: 'timeList'
                  items:
                    type: object
                    properties:
                      time:
                        type: object
                        description: 'time'
                        properties:
                          hour:
                            type: number
                            description: 'hour'
                          minute:
                            type: number
                            description: 'minute'
    setReportScheduleDetailsRes:
      type: object
      description: 'Returns the Set Report Schedule Details Status'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
          description: 'status'
    setReportScheduleListRq:
      type: object
      description: 'Enable/Disable Report Schedule List '
      properties:
        groupId:
          type: string
        scheduleList:
          type: array
          items:
            type: object
            properties:
              scheduleId:
                type: string
              enable:
                type: boolean
              #execAtStartup:
                #type: boolean
                #description: 'Execute flag at the time of agent start'
    setReportScheduleListRes:
      type: object
      description: 'Returns the Status '
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
    getGroupSummaryInfo:
      type: object
      description: 'Returns the Group Summary Information'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        groupId:
          type: boolean
          description: 'groupId'
        groupName:
          type: string
          description: 'groupName'
        summaryInfo:
          type: object
          description: 'summaryInfo'
          properties:
            communicationStatus:
              type: string
              description: 'communicationStatus'
            timestamp:
              type: number
              description: 'SummaryInfo Time'
            counter:
              type: object
              properties:
                color:
                  type: number
                  description: 'color'
                monochrome:
                  type: number
                  description: 'monochrome'
                total:
                  type: number
                  description: 'total'
            deviceCount:
              type: object
              properties:
                firmwareVersions:
                  type: array
                  items:
                    type: object
                    properties:
                      count:
                        type: number
                        description: 'count'
                      version:
                        type: string
                        description: 'version'
                sharpDevices:
                  type: array
                  items:
                    type: object
                    properties:
                      count:
                        type: number
                        description: 'count'
                      modelName:
                        type: 'string'
                        description: 'modelName'
                total:
                  type: number
                  description: 'total'
            deviceStatusCount:
              type: object
              properties:
                accountLimit:
                  type: number
                unknown:
                  type: number
                paperEmpty:
                  type: number
                paperJam:
                  type: number
                paperLow:
                  type: number
                printerError:
                  type: number
                printerWarning:
                  type: number
                standBy:
                  type: number
                tonerEmpty:
                  type: number
                tonerLow:
                  type: number
                warmUp:
                  type: number
                online:
                  type: number
                offline:
                  type: number
                noResponse:
                  type: number
                markerSupplyMissing:
                  type: number
                nearOverDuePreventMaintenance:
                  type: number
                overduePreventMaintenance:
                  type: number
            serviceCodeCount:
              type: object
              properties:
                fusingBelt:
                  type: number
                fusingWebUnit:
                  type: number
                maintenanceAll:
                  type: number
                maintenanceAllAndCol:
                  type: number
                maintenanceCol:
                  type: number
                pressureRoller:
                  type: number
                tc1Unit:
                  type: number
                tc2Unit:
                  type: number
                troubleCode:
                  type: number
        agentInfo:
          type: array
          items:
            type: object
            properties:
              agentId:
                type: string
              agentName:
                type: string
              macAddress:
                type: string
              ipAddress:
                type: string
              agentVersion:
                type: string
              updateTimestamp:
                type: number
              agentStatus:
                type: number
                enum: [1,2]
                description: '
                  agentStatus:
                    * `1` - connected
                    * `2` - disconnected '
              agentLastRunningTime:
                type: number
              agentRunningStatus:
                type: number
                enum: [1,2]
                description: '
                  agentRunningStatus:
                    * `1` - running
                    * `2` - stopped '
    getOperationLogRq:
      type: object
      description: 'Request Object'
      properties:
          groupId:
            type: string
            description: 'groupId'
          type:
            type: string
            description: 'type'
            enum:
            - mib # Device Management
            - idp # Display Management
            - dd # Driver Management
            - idp-pm # Display Power Management
            - tco # Security Management
            - tco-dc # Device Cloning
          startIndex:
            type: integer
            description:
              Start Index <br>
              ●Check content
                - Error for other than numeric value
            default: 0
          count:
            type: integer
            description:
              Number of records <br>
              ●Check content
              - Error for other than numeric value
          orderBy:
            type: array
            description: 'Sort Specification'
            items:
              type: object
              required:
                - key
                - order
              properties:
                key:
                  type: string
                  description:
                    Sort Key <br>
                    Specifiable items are as below.
                    - Sort Key list
                      <table border="1">
                        <tr><th>Key</th><th>Description</th></tr>
                        <tr><td>timestamp</td><td>timestamp</td></tr>
                        <tr><td>operation</td><td>operation</td></tr>
                        <tr><td>itemName1</td><td>itemName1</td></tr>
                        <tr><td>itemName2</td><td>itemName2</td></tr>
                        <tr><td>value1</td><td>value1</td></tr>
                        <tr><td>value2</td><td>value2</td></tr>
                        <tr><td>result</td><td>result</td></tr>
                        <tr><td>fileName</td><td>fileName</td></tr>
                      </table>
                    ●Check content
                      - Error for other than specified value
                order:
                  type: string
                  description: '
                    Sort Order <br>
                      - ascending: Ascending
                      - descending: Descending
                    ●Check content
                      - Error for other than specified value '
                  enum:
                    - ascending
                    - descending
    #getOperationLogRes
    getOperationLogRes:
      type: object
      description: 'Get Operation Log Based on log type & groupId'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        startIndex:
          type: integer
          description: 'Start Index (Same as request parameter)'
        count:
          type: integer
          description: 'Number of requests (Same as request parameter)'
        resultCount:
          type: integer
          description: 'Number of items acquired this time'
        totalCount:
          type: integer
          description: 'Total number of search result'
        opeLogList:
          type: array
          items:
            type: object
            properties:
              logId:
                type: string
                description: 'logId'
              type:
                type: string
                description: 'type'
                enum:
                - mib # Device Management
                - idp # Display Management
                - dd # Driver Management
                - idp-pm # Display Power Management
                - tco # Security Management
                - tco-dc # Device Cloning
              targetGroupId:
                type: string
                description: 'targetGroupId'
              timestamp:
                type: number
                description: 'timestamp'
              groupName:
                type: string
                description: 'groupName'
              operation:
                type: string
                description: 'operation'
              userName:
                type: string
                description: 'userName'
              itemName1:
                type: string
                description: 'itemName1'
              itemName2:
                type: string
                description: 'itemName2'
              value1:
                type: string
                description: 'value1'
              value2:
                type: string
                description: 'value2'
              fileName:
                type: string
                description: 'fileName'
              result:
                type: string
                description: 'result'
              itemList:
                type: array
                description: 'itemList'
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description:
                        name  <br>
                        Specifiable items are as below.
                        - name Key list
                          <table border="1">
                            <tr><th>Key</th><th>Description</th></tr>
                            <tr><td>modelName</td><td>modelName</td></tr>
                            <tr><td>ipAddress</td><td>ipAddress</td></tr>
                            <tr><td>serialNumber</td><td>serialNumber</td></tr>
                            <tr><td>customName</td><td>customName</td></tr>
                            <tr><td>result</td><td>result</td></tr>
                          </table>
                    value:
                      type: string
                      description: 'value'
    getDeviceLogsRq:
      type: object
      description: 'Request Object'
      properties:
          groupId:
            type: string
            description: 'groupId'
          type:
            type: string
            description: 'type'
            enum:
              - mib # Device Management
              - idp # Display Management
              - tco # Security Management
              - tco-dc # Device Cloning
          startIndex:
            type: integer
            description:
              Start Index <br>
              ●Check content
                - Error for other than numeric value
            default: 0
          count:
            type: integer
            description:
              Number of records <br>
              ●Check content
                - Error for other than numeric value
          orderBy:
            type: array
            description: 'Sort Specification'
            items:
              type: object
              required:
                - key
                - order
              properties:
                key:
                  type: string
                  description:
                    Sort Key <br>
                    Specifiable items are as below.
                    - Sort Key list
                      <table border="1">
                        <tr><th>Key</th><th>Description</th></tr>
                        <tr><td>timestamp</td><td>timestamp</td></tr>
                        <tr><td>operation</td><td>operation</td></tr>
                        <tr><td>modelName</td><td>modelName</td></tr>
                        <tr><td>serialNumber</td><td>serialNumber</td></tr>
                        <tr><td>ipAddress</td><td>ipAddress</td></tr>
                        <tr><td>deviceStatus</td><td>deviceStatus</td></tr>
                        <tr><td>result</td><td>result</td></tr>
                        <tr><td>securityOption</td><td>securityOption</td></tr>
                        <tr><td>customName</td><td>customName</td></tr>
                        <tr><td>checkResult</td><td>checkResult</td></tr>
                      </table>
                    ●Check content
                      - Error for other than specified value
                order:
                  type: string
                  description: '
                    Sort Order <br>
                      - ascending: Ascending
                      - descending: Descending
                    ●Check content
                      - Error for other than specified value '
                  enum:
                    - ascending
                    - descending
    #getDeviceLogRes
    getDeviceLogsRes:
      type: object
      description: 'Get Device Log Based on log type & groupId'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        opeLogList:
          type: array
          items:
            type: object
            properties:
              logId:
                type: string
                description: 'logId'
              type:
                type: string
                description: 'type'
                enum:
                - mib # Device Management
                - idp # Display Management
                - tco # Security Management
                - tco-dc # Device Cloning
              targetGroupId:
                type: string
                description: 'targetGroupId'
              timestamp:
                type: number
                description: 'timestamp'
              operation:
                type: string
                description: 'operation'
              modelName:
                type: string
                description: 'modelName'
              ipAddress:
                type: string
                description: 'ipAddress'
              serialNumber:
                type: string
                description: 'serialNumber'
              securityOption:
                type: string
                description: 'securityOption'
              customName:
                type: string
                description: 'customName'
              result:
                type: string
                description: 'result'
              itemList:
                type: array
                description: 'itemList'
                items:
                  type: object
                  properties:
                    item:
                      type: string
                      description:
                        item  <br>
                        Specifiable items are as below.
                        - name Key list
                          <table border="1">
                            <tr><th>Key</th><th>Description</th></tr>
                            <tr><td>Code</td><td>communication code value</td></tr>
                          </table>
                    value:
                      type: string
                      description: 'value'
              checkResult:
                type: string
                description: 'result'
              securityList:
                type: array
                description: 'securityList'
                items:
                  type: object
                  properties:
                    securityType:
                      type: string
                      description: 'securityType'
                    deviceSettings:
                      type: string
                      description: 'deviceSettings'
                    policySettings:
                      type: string
                      description: 'policySettings'
                    category:
                      type: string
                      description: 'category'
                    item:
                      type: string
                      description: 'item'
    #removeAllOperationLogRes
    removeAllOperationLogRes:
      type: object
      description: 'Get Operation Log Based on log type & groupId'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: integer
          description:  '-1 : Failed / 0 : Success  / 1 : inProgress' 
    #removeAllDeviceLogRes
    removeAllDeviceLogRes:
      type: object
      description: 'Get Device Log Based on log type & groupId'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: integer
          description:  '-1 : Failed / 0 : Success  / 1 : inProgress'
    downloadLogRes:
      type: object
      description: 'Get Device/Operation/Report Log URL for download'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        downloadUrl:
          type: string
    oldestDeviceLogtimeRes:
      type: object
      description: 'Return oldest log timestamp based on the log data available in DB.'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        oldestLogTimestamp:
          type: number
    editUsageTargetRq:
      type: object
      description: 'Edit the Usage Target Setting'
      properties:
        usageTargetValue:
          type: integer
          example: 0
          description: 'Minimum and Default value is 0'
    editUsageTargetRes:
      type: object
      description: 'Returns the Status'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
          description: 'status'
    getUsageTargetSettingRes:
      type: object
      description: 'Get Usage Target Setting Info'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        usageTargetValue:
          type: integer
          description: 'usageTargetValue'
    getUsageReportSettingsRes:
      type: object
      description: 'Returns the Usage Report Settings For Specific Group'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        reportSettings:
          type: object
          properties:
              emailAddress:
                type: string
                description:  email id
              isCounterRefreshDaily:
                type: boolean
                enum:
                  - true
                  - false
                description: '  isCounterRefreshDaily: 
                  * `true` - Counter Refresh by 1 Day
                  * `false` - Counter Refresh by 7 Days '
              timeZone:
                type: string
                description: 'timeZone'
              language:
                type: string
                description: 'language'
              selectedGroupId:
                type: string
                description: 'selected groupId'
              reportFormat:
                type: number
                enum:
                  - 1
                  - 2
                  - 3
                description: '
                  reportFormat:
                    * `1` - PDF
                    * `2` - HTML
                    * `3` - CSV '
              schedule:
                type: object
                properties:
                  scheduleEnable:
                    type: boolean
                    enum:
                      - true
                      - false
                    description: 'scheduleEnable:  true|false '
                  startTime:
                    type: number
                    description: 'Schedule Report creation time'
                  interval:
                    type: integer
                    description: '1 ~ 15 days on report closing day'
                  time:
                    type: object
                    properties:
                      hours:
                        type: integer
                        description: 'hours'
                      minutes:
                        type: integer
                        description: 'minutes'
              periodPattern:
                type: number
                enum:
                  - 1
                  - 2
                description: '
                  periodPattern:
                    * `1` - weekly
                    * `2` - monthly'
              closingday:
                type: number
                description: >             
                  * Incase of Weekly(periodPattern:1)
                    * `0`- SUNDAY
                    * `1`- MONDAY
                    * `2`- TUESDAY
                    * `3`- WEDNESDAY
                    * `4`- THURSDAY
                    * `5`- FRIDAY
                    * `6`- SATURDAY
                  * Incase of Monthly(periodPattern:2)
                  * [1 ~ 31] Day of the month'
              selectPeriod:
                type: number
                description: >
                  * Incase of Weekly(periodPattern:1)
                    * `0`- Latest
                    * `1`- Last 1 week
                    * `2`- Last 2 weeks
                    * ....
                    * `12`- Last 12 weeks'
                  * Incase of Monthly(periodPattern:2)
                    * `0`- Latest
                    * `1`- Last 1 month
                    * `2`- Last 2 months
                    * ....
                    * `12`- Last 12 months'
    setUsageReportSettingsRq:
      type: object
      description: 'Sets the Usage Report Settings For Specific Group'
      properties:
        emailAddress:
          type: string
          description:  'emailAddress'
        timeZone:
          type: string
          description: 'timeZone'
        language:
          type: string
          description: 'language'
        selectedGroupId:
          type: string
          description: 'selected groupId'
        reportFormat:
          type: number
          enum:
            - 1
            - 2
            - 3
          description: '
            reportFormat:
              * `1` - PDF
              * `2` - HTML
              * `3` - CSV '
        schedule:
          type: object
          properties:
            scheduleEnable:
              type: boolean
              enum:
                - true
                - false
              description: 'scheduleEnable:  true|false '
            startTime:
              type: number
              description: 'Schedule Report creation time'
            interval:
              type: integer
              description: '1 ~ 15 days on report closing day'
            time:
              type: object
              properties:
                hours:
                  type: integer
                  description: 'hours'
                minutes:
                  type: integer
                  description: 'minutes'
        periodPattern:
          type: number
          enum:
            - 1
            - 2
          description: '
            periodPattern:
              * `1` - weekly
              * `2` - monthly '
        closingday:
          type: number
          description: >             
            * Incase of Weekly(periodPattern:1)
              * `0`- SUNDAY
              * `1`- MONDAY
              * `2`- TUESDAY
              * `3`- WEDNESDAY
              * `4`- THURSDAY
              * `5`- FRIDAY
              * `6`- SATURDAY
            * Incase of Monthly(periodPattern:2)
              * [1 ~ 31] Day of the month'
        selectPeriod:
          type: number
          description: >
            * Incase of Weekly(periodPattern:1)
              * `0`- Latest
              * `1`- Last 1 week
              * `2`- Last 2 weeks
              * ....
              * `12`- Last 12 weeks'
              * Incase of Monthly(periodPattern:2)
              * `0`- Latest
              * `1`- Last 1 month
              * `2`- Last 2 months
              * ....
              * `12`- Last 12 months'        
    usageReportByFunctionRq:
      type: object
      properties:
        groupId:
          type: string
          description: "groupId"
        month:
          type: integer
          description: '* month
           [1 ~ 12] month of the year'
        year:
          type: integer
          description: "year"
        
      required:
        - groupId
        - month
        - year
    usageReportByFunctionRes:
      type: object
      description: 'Retrieves usage output summary for specific group.'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        totalOutput:
          type: object
          properties:
            color:
              type: number
              description: 'color'
            monochrome:
              type: number
              description: 'monochrome'
        copies:
          type: object
          properties:
            color:
              type: number
              description: 'color'
            monochrome:
              type: number
              description: 'monochrome'
                
        prints:
          type: object
          properties:
            color:
              type: number
              description: 'color'
            monochrome:
              type: number
              description: 'monochrome'
        internetFaxReceive:
          type: object
          properties:
            color:
              type: number
              description: 'color'
            monochrome:
              type: number
              description: 'monochrome'
        faxReceive:
          type: object
          properties:
            color:
              type: number
              description: 'color'
            monochrome:
              type: number
              description: 'monochrome'
        docFiling:
          type: object
          properties:
            color:
              type: number
              description: 'color'
            monochrome:
              type: number
              description: 'monochrome'
        others:
          type: object
          properties:
            color:
              type: number
              description: 'color'
            monochrome:
              type: number
              description: 'monochrome'
        totalSend:
          type: object
          properties:
            color:
              type: number
              description: 'color'
            monochrome:
              type: number
              description: 'monochrome'
        scanToEmail:
          type: object
          properties:
            color:
              type: number
              description: 'color'
            monochrome:
              type: number
              description: 'monochrome'
        internetFaxSend:
          type: object
          properties:
            color:
              type: number
              description: 'color'
            monochrome:
              type: number
              description: 'monochrome'
        faxSend:
          type: object
          properties:
            color:
              type: number
              description: 'color'
            monochrome:
              type: number
              description: 'monochrome'
        scanToHDD:
          type: object
          properties:
            color:
              type: number
              description: 'color'
            monochrome:
              type: number
              description: 'monochrome'
        isCounterRefreshDaily:
          type: boolean
          enum:
            - true
            - false
          description: '  isCounterRefreshDaily: 
            * `true` - Counter Refresh by 1 Day
            * `false` - Counter Refresh by 7 Days '
    usageReportDailyoutputRq:
      type: object
      properties:
        groupId:
          type: string
          description: "groupId"
        month:
          type: integer
          description: '*month-
           [1 ~ 12] month of the year'
        year:
          type: integer
          description: "year"
        includePreviousMonth:
          type: boolean
          enum:
            - true
            - false
          description: ' includePreviousMonth <br>
            *`true`- Usage Output report including previous month. <br>
            *`false`- Usage Output report only for the selected month.
            * Defsult - false'
        
      required:
        - groupId
        - month
        - year
    usageReportDailyoutputRes:
      type: object
      description: 'Retrieves usage output summary for specific group.'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        usageOutput:
          type: object
          properties:
            selectedMonth:
              type: array
              description: 'Output usage during the specified period'
              items:
                type: object
                properties:
                  color:
                    type: number
                    description: 'color'
                  monochrome:
                    type: number
                    description: 'monochrome'
                  day:
                    type: integer
                    description: '
                      *  day [1 ~ 31] day of the month.'
            previousMonth:
              type: array
              description: 'Output usage during the specified period'
              items:
                type: object
                properties:
                  color:
                    type: number
                    description: 'color'
                  monochrome:
                    type: number
                    description: 'monochrome'
                  day:
                    type: integer
                    description: '
                      *  day [1 ~ 31] day of the month.'
    counterUsageRq:
      type: object
      properties:
        groupId:
          type: string
          description: "groupId"
        month:
          type: integer
          description: '*month-
           [1 ~ 12] month of the year'
        year:
          type: integer
          description: "year"
        type:
          type: integer
          enum:
            - 1
            - 2
            - 3
          description: >-
            type:
              * 1 - Daily <br>
              * 2 - Weekly  <br>
              * 3 - Monthly (Past Year)
      required:
        - groupId
        - month
        - year
        - type
    counterUsageRes:
      type: object
      description: 'Counter usage for a specific tenant.'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        usageOutput:
          type: object
          properties:
            usageTrends:
              type: array
              description: 'Usage output and send counts.'
              items:
                type: object
                properties:
                  timeLine:
                    type: string
                    description: >-
                      timeLine:
                        * 1 ~ 31 for Daily usage
                        * 1-7, 8-14 etc.. for Weekly usage
                        * Month/Year for Monthly (Past Year) usage. Example: 1/2023, 12/2022
                  output:
                    type: object
                    properties:
                      monochrome:
                        type: integer
                        description: 'monochrome'
                      color:
                        type: integer
                        description: 'color'
                      prints:
                        type: integer
                        description: 'prints'
                      copies:
                        type: integer
                        description: 'copies'
                      fax:
                        type: integer
                        description: 'fax'
                      internetFax:
                        type: integer
                        description: 'internetFax'
                      filingData:
                        type: integer
                        description: 'filingData'
                      others:
                        type: integer
                        description: 'others'
                  send:
                    type: object
                    properties:
                      monochrome:
                        type: integer
                        description: 'monochrome'
                      color:
                        type: integer
                        description: 'color'
                      faxSend:
                        type: integer
                        description: 'faxSend'
                      internetFaxSend:
                        type: integer
                        description: 'internetFaxSend'
                      scanToHDD:
                        type: integer
                        description: 'scanToHDD'
                      scanToEmail:
                        type: integer
                        description: 'scanToEmail'           
    deviceCounterUsageRq:
      type: object
      properties:
        groupId:
          type: string
          description: "groupId"
        month:
          type: integer
          description: '*month-
           [1 ~ 12] month of the year'
        year:
          type: integer
          description: "year"
        type:
          type: integer
          enum:
            - 1
            - 2
          description: >-
            type:
              * 1 - Month to Date <br>
              * 2 - Average/Month
        usageOptions:
          type: array
          default: 'mono'
          items:
            type: string
            enum:
              - 'mono'
              - 'color'
              - 'send'
      required:
        - groupId
        - month
        - year
        - type
        - usageOptions
    deviceCounterUsageRes:
      type: object
      description: 'Counter usage by device.'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        mostUsedDevices:
              type: array
              description: 'List of devices based on most usage.'
              items:
                type: object
                properties:
                  _id:
                    type: string
                    description: 'device Id'
                  createTimestamp:
                    type: integer
                    format: int64
                    description: 'Device registered timestamp'
                  customName:
                    type: string
                    description: 'customName'
                  ipAddress:
                    type: integer
                    description: 'IP Address'
                  output:
                    type: object
                    properties:
                      monochrome:
                        type: integer
                        description: 'monochrome'
                      color:
                        type: integer
                        description: 'color'
                      prints:
                        type: integer
                        description: 'prints'
                      copies:
                        type: integer
                        description: 'copies'
                      fax:
                        type: integer
                        description: 'fax'
                      internetFax:
                        type: integer
                        description: 'internetFax'
                      filingData:
                        type: integer
                        description: 'filingData'
                      others:
                        type: integer
                        description: 'others'
                  send:
                    type: object
                    properties:
                      monochrome:
                        type: integer
                        description: 'monochrome'
                      color:
                        type: integer
                        description: 'color'
                      faxSend:
                        type: integer
                        description: 'faxSend'
                      internetFaxSend:
                        type: integer
                        description: 'internetFaxSend'
                      scanToHDD:
                        type: integer
                        description: 'scanToHDD'
                      scanToEmail:
                        type: integer
                        description: 'scanToEmail'           
        leastUsedDevices:
              type: array
              description: 'List of devices based on least usage.'
              items:
                type: object
                properties:
                  _id:
                    type: string
                    description: 'device Id'
                  createTimestamp:
                    type: integer
                    format: int64
                    description: 'Device registered timestamp'
                  customName:
                    type: string
                    description: 'customName'
                  ipAddress:
                    type: integer
                    description: 'IP Address'
                  output:
                    type: object
                    properties:
                      monochrome:
                        type: integer
                        description: 'monochrome'
                      color:
                        type: integer
                        description: 'color'
                      prints:
                        type: integer
                        description: 'prints'
                      copies:
                        type: integer
                        description: 'copies'
                      fax:
                        type: integer
                        description: 'fax'
                      internetFax:
                        type: integer
                        description: 'internetFax'
                      filingData:
                        type: integer
                        description: 'filingData'
                      others:
                        type: integer
                        description: 'others'
                  send:
                    type: object
                    properties:
                      monochrome:
                        type: integer
                        description: 'monochrome'
                      color:
                        type: integer
                        description: 'color'
                      faxSend:
                        type: integer
                        description: 'faxSend'
                      internetFaxSend:
                        type: integer
                        description: 'internetFaxSend'
                      scanToHDD:
                        type: integer
                        description: 'scanToHDD'
                      scanToEmail:
                        type: integer
                        description: 'scanToEmail'              
    exportDetailedUsageRes:
      type: object
      description: 'Returns the  RequestId'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        requestId:
          type: string
          description: 'requestId'       
    setUsageReportSettingsRes:
      type: object
      description: 'Returns the  Status'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
          description: 'status'
    getCustomerInfoListRes:
      type: object
      description: 'Returns the list of customer information for a specific Dealer.'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        pageNumber:
          type: integer
          description: 'Page number (Same as request parameter)'
        pageSize:
          type: integer
          description: 'Number of customers requested (Same as request parameter)'
        resultCount:
          type: integer
          description: 'Number of customers acquired this time'
        totalCount:
          type: integer
          description: 'Total number of customers'
        selectedCustomer:
          type: object
          properties:
            id:
              type: string
              description: 'Selected Customer Id'
            name:
              type: string
              description: 'Selected Customer Name'
        customerList:
          type: array
          description: 'customer list of a dealer'
          items:
            type: object
            properties:
              dealerCustomerId:
                type: string
                description: 'Dealer Customer Id'
              dealerCustomerName:
                type: string
                description: 'Dealer Customer Name'
    updateCustomerInfoRq:
      type: object
      description: 'Update the customer information'
      properties:
        dealerCustomerName:
          type: string
          description: 'Dealer Customer Name'
        dealerCustomerId:
          type: string
          description: 'Dealer Customer Id'
    updateCustomerInfoRes:
      type: object
      description: 'Returns the Status'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
          description: 'status'
    createCustomerRq:
      type: object
      properties:
        name:
          type: string
          description: 'Customer Name'
        accountCode:
          type: string
          description:  'Customer account code, as defined by the dealer'
        city:
          type: string
          description:  'Customer city'
        country:
          type: string
          description: 'Customer country'
        postalcode:
          type: string
          description: 'Customer postal code'
        state:
          type: string
          description:  'Customer state'
        streetAddress:
          type: string
          description:  'Customer street address'
        telephone:
          type: string
          description: 'Customer telephone number'
        groupId:
          type: string
          description: 'group/tenant Id'
      required:
        - name
    createCustomerRes:
      type: object
      description: 'Returns the Status'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
          description: 'status'
    getTasksListRes:
      type: object
      description: 'Returns the  task list'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        tasksList:
          type: array
          description: 'All category tasks list'
          items:
            type:  object
            properties:
              taskId:
                type: integer
                description:  'task Id'
              taskName:
                type: string
                description:  >-
                  Possible task names:
                    - deviceInformationUpdate
                    - displayDeviceInformationUpdate
                    - powerManagement
                    - powerInputManagement 
                    - deviceCloning 
                    - storageBackup
                    - applySecurityPolicy
                    - checkSecurityPolicy
              type:
                type: string
                description: 'mfp/display'
              startTime:
                type: number
                description:  'task started time'
              updatedTime:
                type: number
                description:  'task updated time'
              endTime:
                type: number
                description:  'task completed time'
              status:
                type: integer
                description:  '-1 : Blank / 0 : Success / >0 : n device (s) in progress'
    getTaskDetailsRq:
      type: object
      properties:
        groupId:
          type: string
          description: '
            groupId of target group <br>
            ●Check content
              - Error for null, null character (i.e. empty string)'
        taskId:
          type: integer
          description:  >-
            taskId:
              * 1 - Device Information Update
              * 2 - Device Information Update (Display)
              * 3 - Power Management
              * 4 - Power/Input Management 
              * 5 - Device Cloning 
              * 6 - Storage Backup
              * 7 - Apply Security Policy
              * 8 - Check Security Policy
        startIndex:
          type: integer
          description:  '
            Start Index <br>
            ●Check content
              - Error for other than numeric value'
          default: 0
        count:
          type: integer
          description: '
            Number of records <br>
            ●Check content
              - Error for other than numeric value'
          default: 10
        simpleFilters:
          type: array
          description: 'Simple Filter'
          items:
            type: object
            properties:
              key:
                type: string
                description: '
                  Filter key<br>
                  Specifiable items are as below.
                  - Filter key list
                    <table border="1">
                      <tr><th>Key</th><th>Description</th></tr>
                      <tr><td>modelName</td><td>Model name</td></tr>
                      <tr><td>serialNumber</td><td>Serial number</td></tr>
                      <tr><td>ipAddress</td><td>IP address</td></tr>
                      <tr><td>customName</td><td>Name</td></tr>
                      <tr><td>result</td><td>Operation Status</td></tr>
                      <tr><td>tagIds</td><td>Tag Ids</td></tr>
                    </table>
                  ●Check content
                    - Error for other than specified value '
              value:
                type: string
                description:  '
                  Filtering target strings <br>
                  Strings that are Specifiable in filter key are as below.
                  - Filtering target strings
                    <table border="1">
                      <tr><th>Key</th><th>Description</th></tr>
                      <tr><td>modelName</td><td>Specify input value</td></tr>
                      <tr><td>serialNumber</td><td>Specify input value</td></tr>
                      <tr><td>ipAddress</td><td>Specify input value</td></tr>
                      <tr><td>customName</td><td>Specify input value</td></tr>
                      <tr><td>result</td><td>Specify input value</td></tr>
                      <tr><td>tagIds</td><td>Select input value</td></tr>
                    </table>  '
            required:
              - key
              - value
        orderBy:
          type: array
          description: 'Sort Specification'
          items:
            type: object
            properties:
              key:
                type: string
                description:
                  Sort Key <br>
                  Specifiable items are as below.
                  - Sort Key list
                    <table border="1">
                      <tr><th>Key</th><th>Description</th></tr>
                      <tr><td>modelName</td><td>Model name</td></tr>
                      <tr><td>serialNumber</td><td>Serial number</td></tr>
                      <tr><td>ipAddress</td><td>IP Address <br>Sort IP address by digitized value (i.e. converted to numerical form)</td></tr>
                      <tr><td>customName</td><td>Name</td></tr>
                      <tr><td>operation</td><td>operation Name</td></tr>
                      <tr><td>result</td><td>Operation status</td></tr>
                      <tr><td>tagIds</td><td>Tag Ids</td></tr>
                    </table>
                  ●Check content
                    - Error for other than specified value
              order:
                type: string
                description: '
                  Sort Order <br>
                    - ascending: Ascending
                    - descending: Descending
                  ●Check content
                    - Error for other than specified value'
                enum:
                  - ascending
                  - descending
            required:
              - key
              - order
      required:
        - groupId
        - taskId
    getCancelTaskDetailsRq:
      type: object
      properties:
        groupId:
          type: string
          description: '
            groupId of target group <br>
            ●Check content
              - Error for null, null character (i.e. empty string)'
        taskId:
          type: integer
          description:  >-
            taskId:
              * 1 - Device Information Update
              * 2 - Device Information Update (Display)
              * 3 - Power Management
              * 4 - Power/Input Management
              * 5 - Device Cloning 
              * 6 - Storage Backup
              * 7 - Apply Security Policy
              * 8 - Check Security Policy
        deviceIds:
          type: array
          items:
            type: string
          description: "List of deviceIds "
        startIndex:
          type: integer
          description:  '
            Start Index <br>
            ●Check content
              - Error for other than numeric value'
          default: 0
        count:
          type: integer
          description: '
            Number of records <br>
            ●Check content
              - Error for other than numeric value'
          default: 10
        simpleFilters:
          type: array
          description: 'Simple Filter'
          items:
            type: object
            properties:
              key:
                type: string
                description: '
                  Filter key<br>
                  Specifiable items are as below.
                  - Filter key list
                    <table border="1">
                      <tr><th>Key</th><th>Description</th></tr>
                      <tr><td>modelName</td><td>Model name</td></tr>
                      <tr><td>serialNumber</td><td>Serial number</td></tr>
                      <tr><td>ipAddress</td><td>IP address</td></tr>
                      <tr><td>customName</td><td>Name</td></tr>
                      <tr><td>tagIds</td><td>Tag Ids</td></tr>
                      <tr><td>operation</td><td>Operation Status</td></tr>
                    </table>
                  ●Check content
                    - Error for other than specified value '
              value:
                type: string
                description:  '
                  Filtering target strings <br>
                  Strings that are Specifiable in filter key are as below.
                  - Filtering target strings
                    <table border="1">
                      <tr><th>Key</th><th>Description</th></tr>
                      <tr><td>modelName</td><td>Specify input value</td></tr>
                      <tr><td>serialNumber</td><td>Specify input value</td></tr>
                      <tr><td>ipAddress</td><td>Specify input value</td></tr>
                      <tr><td>customName</td><td>Specify input value</td></tr>
                      <tr><td>tagIds</td><td>Select input value</td></tr>
                      <tr><td>operation</td><td>Select input value</td></tr>
                    </table>  '
            required:
              - key
              - value
        orderBy:
          type: array
          description: 'Sort Specification'
          items:
            type: object
            properties:
              key:
                type: string
                description:
                  Sort Key <br>
                  Specifiable items are as below.
                  - Sort Key list
                    <table border="1">
                      <tr><th>Key</th><th>Description</th></tr>
                      <tr><td>modelName</td><td>Model name</td></tr>
                      <tr><td>serialNumber</td><td>Serial number</td></tr>
                      <tr><td>ipAddress</td><td>IP Address <br>Sort IP address by digitized value (i.e. converted to numerical form)</td></tr>
                      <tr><td>customName</td><td>Name</td></tr>
                      <tr><td>operation</td><td>Operation status</td></tr>
                    </table>
                  ●Check content
                    - Error for other than specified value
              order:
                type: string
                description: '
                  Sort Order <br>
                    - ascending: Ascending
                    - descending: Descending
                  ●Check content
                    - Error for other than specified value'
                enum:
                  - ascending
                  - descending
            required:
              - key
              - order
      required:
        - groupId
        - taskId
        - deviceIds
    getTaskDetailsRes:
      type: object
      description: 'Returns the  Status'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        startIndex:
          type: integer
          description: 'Start Index (Same as request parameter)'
        count:
          type: integer
          description: 'Number of requests (Same as request parameter)'
        resultCount:
          type: integer
          description: 'Number of items acquired this time'
        totalCount:
          type: integer
          description: 'Total number of search result'
        taskDetails:
          type: array
          description: 'details of task'
          items:
            type:  object
            properties:  
              requestId:
                type: string
                description: 'request Id '
              deviceId:
                type: string
                description: 'device Id'
              modelName:
                type: string
                description:  'device model mane'
              serialNumber:
                type: string
                description:  'device serial number'
              customName:
                type: string
                description:  'device custome name'
              ipAddress:
                type: string
                description:  'device ipAddress'
              tagIds:
                type: array
                items:
                  type: string
                  description: 'tagIds to link devices'
              fileName:
                type: string
                description:  ' for device storage / device backup'
              startTime:
                type: number
                description:  'task started time'
              endTime:
                type: number
                description:  'device task completed time'
              result:
                type: integer
                description:  '-1 : Failed / 0 : Success  / 1 : inProgress'
              operation:
                type: string
                description:  >-
                  operation:
                    'wakeup / sleep  / reboot / inputChange / policyId / fileToDevice / deviceToFile'
              sourceDeviceInfo:
                type: object
                description:  'sourceDeviceInfo exists in reponse, if the source of cloing or storage backup is from synappx.'
                properties:
                  modelName:
                    type: string
                    description:  'source device model name'
                  serialNumber:
                    type: string
                    description:  'source device serial number'
                  customName:
                    type: string
                    description:  'source device custome name'
                  ipAddress:
                    type: string
                    description:  'source device ipAddress'
    getCancelTaskDetailsRes:
      type: object
      description: 'Returns the  Status'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        startIndex:
          type: integer
          description: 'Start Index (Same as request parameter)'
        count:
          type: integer
          description: 'Number of requests (Same as request parameter)'
        resultCount:
          type: integer
          description: 'Number of items acquired this time'
        totalCount:
          type: integer
          description: 'Total number of search result'
        taskDetails:
          type: array
          description: 'details of task'
          items:
            type:  object
            properties:  
              deviceId:
                type: string
                description: 'device Id'
              modelName:
                type: string
                description:  'device model mane'
              serialNumber:
                type: string
                description:  'device serial number'
              customName:
                type: string
                description:  'device custome name'
              ipAddress:
                type: string
                description:  'device ipAddress'
              tagIds:
                type: array
                items:
                  type: string
                  description: 'tagIds to link devices'
              operation:
                type: string
                description:  'wakeup / sleep  / reboot / inputChange / policyId / fileToDevice / deviceToFile'
    commonRsp:
      type: object
      properties:
        errorList:
          type: array
          items:
            type: object
            properties:
              errorCode:
                type: string
                description:
                  Error Code
                    - Error Code list
                      <table border="1">
                        <tr><th>Error code</th><th>Description</th></tr>
                        <tr><td>E0001</td><td>DB Access Error</td></tr>
                        <tr><td>E0004</td><td>JSON Path error</td></tr>
                        <tr><td>E0011</td><td>Parameter mandatory check error</td></tr>
                        <tr><td>E0014</td><td>Parameter format check error</td></tr>
                        <tr><td>E0019</td><td>When target instance (group or device etc.) does not exist</td></tr>
                        <tr><td>E0021</td><td>Invalid token</td></tr>
                        <tr><td>E0024</td><td>No permission Error</td></tr>
                        <tr><td>E0026</td><td>Session timeout error</td></tr>
                        <tr><td>E0050</td><td>Error other than specified group management</td></tr>
                      </table>
              errorField:
                type: string
                description: 'Parameter field where error occurred'
              errorValue:
                type: string
                description: 'Value that result into an error'
              errorMessage:
                type: string
                description: 'Error message (Text that human can understand)'
    setTicketRegistrationConfRq:
      type: object
      description: 'create connectwise manage configuration details for specfic group or tenant'
      properties:
        groupId:
          type: string
          description: Specific groupId to update\create the connect-wise manage configuration information
        cwType:
          type: number
          #example: 0: basic_settings | 1: ticket_settings
          description: Specify configuration type 0> basic_settings 1> ticket_settings
          enum:
            - 0 
            - 1
        basicSetting:
          type: object
          description: connectwise manage basic setting information
          properties:
            companyId:
              type: string
              description: Specify company ID or name
            publicKey:
              type: string
              description: Specify the public key
            privateKey:
              type: string
              description: Specify the private key
            origin:
             type: string
             description: Specify the origin value
        ticketSetting:
          type: object
          description: connectwise ticket setting information
          properties:
            ticketFlag:
              type: boolean
              description: connectwise ticket registration flag
            companyId:
              type: number
              description: company id
            companyName:
              type: string 
              description: Company Name
            serviceBoardSettings:
              type: array
              description: contains information about configuration details of service board and configured alerts list for ticketing.
              items:
                type: object
                description: service board settings info
                properties:
                  serviceBoardId:
                   type: number
                   description: service board id
                  serviceBoardName:
                    type: string
                    description: service board name
                  category:
                    type: string 
                    description: category name like mib, tco , agent & other.
                  isSelected:
                    type: boolean 
                    description: category name like mib, tco , agent & other.' 
                  statusToNotify:
                    type: array
                    description: Contains the object of ticketing alerts, impact and urgency data
                    items:
                      type: object
                      description: Ticketing alert configurations
                      properties:
                        alertId:
                          type: number
                          description: '
                          - alert id possible values example: 1,2,3
                          <table border="1">
                          <tr><td>1. printerError</td></tr>
                          <tr><td>2. accountLimit</td></tr>
                          <tr><td>3. overduePreventMaintenance</td></tr>
                          <tr><td>4. paperJam</td></tr>
                          <tr><td>5. markerSupplyMissing</td></tr>
                          <tr><td>6. tonerEmpty</td></tr>
                          <tr><td>7. coverOpen</td></tr>
                          <tr><td>8. paperEmpty</td></tr>
                          <tr><td>9. specifiedInputTrayEmpty</td></tr>
                          <tr><td>10. specifiedInputTrayMissing</td></tr>
                          <tr><td>11. allOutputTrayFull</td></tr>
                          <tr><td>12. specifiedOutputTrayMissing</td></tr>
                          <tr><td>13. offline</td></tr>
                          <tr><td>14. printerWarning</td></tr>
                          <tr><td>15. tonerLow</td></tr>
                          <tr><td>16. paperLow</td></tr>
                          <tr><td>17. inputTrayMissing</td></tr>
                          <tr><td>18. outputTrayFull</td></tr>
                          <tr><td>19. outputTrayNearFull</td></tr>
                          <tr><td>20. outputTrayMissing</td></tr>
                          <tr><td>21. stackerNotInstalled</td></tr>
                          <tr><td>22. nearOverduePreventMaintenance</td></tr>
                          <tr><td>23. noResponse</td></tr>
                          <tr><td>24. disposalToner</td></tr>
                          <tr><td>25. policyApplicationError</td></tr>
                          <tr><td>26. policyCheckError</td></tr>
                          <tr><td>27. policyVoilation</td></tr>                    
                          <tr><td>28. lostCommunication</td></tr>
                          <tr><td>29. newVersionAvailable</td></tr>
                          <tr><td>30. agentUpdated</td></tr>
                          </table> '
                        impactId:
                          type: number
                          description: Alert impact id
                        isSelected:
                          type: boolean
                          description: Alert selected or not
                        severity:
                          type: number
                          description: Alert severity id                   
                  customFields:
                    type: array
                    description: custom fields list
                    items:
                      type: object
                      description: custom fields info
                      properties:
                        synappxFieldId:
                          type: number
                          description: synappx field id
                        fieldId:
                          type: number
                          description: connect wise field id
                        fieldName:
                          type: string
                          description: connect wise field name
            customFieldFlag:
              type: boolean
              description: custom field flag
            customFields:
              type: array
              description: custom fields list
              items:
                type: object
                description: custom fields info
                properties:
                  synappxFieldId:
                   type: number
                   description: synappx field id
                  fieldId:
                    type: number
                    description: connect wise field id
                  fieldName:
                    type: string
                    description: connect wise field name
            language:
               type: string
               description: 'language'
            timeZone:
               type: string
               description: 'timeZone'       
    setTicketRegistrationConfRes:
      type: object
      description: 'Create ticket setting response.'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        status:
          type: boolean
          description: ticket settings creation status
          enum:
            - true
            - false
    getTicketRegistrationConfRes:
      type: object
      description: 'Returns the connectwise manage configuration information'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'
        groupId:
          type: string
          description: group/tenant id
        basicSetting:
          type: object
          description: connectwise manage basic setting information
          properties:
            companyId:
              type: string
              description: Specify company ID or name
            publicKey:
              type: string
              description: Specify the public key
            privateKey:
              type: string
              description: Specify the private key
            origin:
             type: string
             description: Specify the origin value
        ticketSetting:
          type: object
          description: connectwise ticket setting information
          properties:
            ticketFlag:
              type: boolean
              description: connectwise ticket registration flag
            companyId:
              type: number
              description: company id
            companyName:
              type: string 
              description: Company Name
            serviceBoardSettings:
              type: array
              description: contains information about configuration details of service board and configured alerts list for ticketing.
              items:
                type: object
                description: service board settings info
                properties:
                  serviceBoardId:
                   type: number
                   description: service board id
                  serviceBoardName:
                    type: string
                    description: service board name
                  category:
                    type: string 
                    description: category name like mib, tco , agent & other.
                  isSelected:
                    type: boolean 
                    description: category name like mib, tco , agent & other.
                  statusToNotify:
                    type: array
                    description: Contains the object of ticketing alerts, impact and urgency data
                    items:
                      type: object
                      description: Ticketing alert configurations
                      properties:
                        alertId:
                          type: number
                          description: '
                          - alert id possible values example: 1,2,3
                          <table border="1">
                          <tr><td>1. printerError</td></tr>
                          <tr><td>2. accountLimit</td></tr>
                          <tr><td>3. overduePreventMaintenance</td></tr>
                          <tr><td>4. paperJam</td></tr>
                          <tr><td>5. markerSupplyMissing</td></tr>
                          <tr><td>6. tonerEmpty</td></tr>
                          <tr><td>7. coverOpen</td></tr>
                          <tr><td>8. paperEmpty</td></tr>
                          <tr><td>9. specifiedInputTrayEmpty</td></tr>
                          <tr><td>10. specifiedInputTrayMissing</td></tr>
                          <tr><td>11. allOutputTrayFull</td></tr>
                          <tr><td>12. specifiedOutputTrayMissing</td></tr>
                          <tr><td>13. offline</td></tr>
                          <tr><td>14. printerWarning</td></tr>
                          <tr><td>15. tonerLow</td></tr>
                          <tr><td>16. paperLow</td></tr>
                          <tr><td>17. inputTrayMissing</td></tr>
                          <tr><td>18. outputTrayFull</td></tr>
                          <tr><td>19. outputTrayNearFull</td></tr>
                          <tr><td>20. outputTrayMissing</td></tr>
                          <tr><td>21. stackerNotInstalled</td></tr>
                          <tr><td>22. nearOverduePreventMaintenance</td></tr>
                          <tr><td>23. noResponse</td></tr>
                          <tr><td>24. disposalToner</td></tr>
                          <tr><td>25. policyApplicationError</td></tr>
                          <tr><td>26. policyCheckError</td></tr>
                          <tr><td>27. policyVoilation</td></tr>                    
                          <tr><td>28. lostCommunication</td></tr>
                          <tr><td>29. newVersionAvailable</td></tr>
                          <tr><td>29. agentUpdated</td></tr>
                          </table> '
                        impactId:
                          type: number
                          description: Alert impact id
                        isSelected:
                          type: boolean
                          description: Alert selected or not
                        severity:
                          type: number
                          description: Alert severity id                   
                  customFields:
                    type: array
                    description: custom fields list
                    items:
                      type: object
                      description: custom fields info
                      properties:
                        synappxFieldId:
                          type: number
                          description: synappx field id
                        fieldId:
                          type: number
                          description: connect wise field id
                        fieldName:
                          type: string
                          description: connect wise field name
            customFieldFlag:
              type: boolean
              description: custom field flag
            language:
              type: string
              description: 'language(TBD)'
            timeZone:
              type: string
              description: 'timeZone'        
    getCompanyOrServiceBoardListRes:
      type: object
      description: 'Returns comapny/serviceboard list'
      properties:
        common:
          $ref: '#/components/schemas/commonRsp'          
        resultList:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
                description: 'company/serviceBoard Id'
              name:
                type: string
                description: 'Company/ServiceBoard Name'
  #Security Schemas
  securitySchemes:
    UserSecurity:      # <-- arbitrary name for the security scheme
      type: http
      scheme: basic
security:
    - UserSecurity: []  # <-- use the same name here
    #- cookieAuth: []